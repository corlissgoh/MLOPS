2024-07-25 14:14:00,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 14:14:00,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 14:14:00,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 14:14:00,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 14:14:01,240:INFO:PyCaret ClassificationExperiment
2024-07-25 14:14:01,240:INFO:Logging name: mushroom_classification
2024-07-25 14:14:01,240:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-25 14:14:01,240:INFO:version 3.3.2
2024-07-25 14:14:01,240:INFO:Initializing setup()
2024-07-25 14:14:01,240:INFO:self.USI: 473d
2024-07-25 14:14:01,240:INFO:self._variable_keys: {'X_test', 'n_jobs_param', 'pipeline', 'idx', 'logging_param', 'X_train', 'seed', 'gpu_n_jobs_param', 'y_test', 'fold_shuffle_param', '_available_plots', 'data', 'memory', 'html_param', '_ml_usecase', 'exp_id', 'gpu_param', 'log_plots_param', 'fix_imbalance', 'exp_name_log', 'X', 'target_param', 'y_train', 'USI', 'fold_groups_param', 'is_multiclass', 'y', 'fold_generator'}
2024-07-25 14:14:01,240:INFO:Checking environment
2024-07-25 14:14:01,240:INFO:python_version: 3.9.19
2024-07-25 14:14:01,240:INFO:python_build: ('main', 'Mar 20 2024 12:55:20')
2024-07-25 14:14:01,240:INFO:machine: arm64
2024-07-25 14:14:01,240:INFO:platform: macOS-13.3.1-arm64-arm-64bit
2024-07-25 14:14:01,240:INFO:Memory: svmem(total=8589934592, available=2706751488, percent=68.5, used=3948199936, free=54362112, active=2665431040, inactive=2600910848, wired=1282768896)
2024-07-25 14:14:01,241:INFO:Physical Core: 8
2024-07-25 14:14:01,241:INFO:Logical Core: 8
2024-07-25 14:14:01,241:INFO:Checking libraries
2024-07-25 14:14:01,241:INFO:System:
2024-07-25 14:14:01,241:INFO:    python: 3.9.19 | packaged by conda-forge | (main, Mar 20 2024, 12:55:20)  [Clang 16.0.6 ]
2024-07-25 14:14:01,241:INFO:executable: /opt/anaconda3/envs/mlops/bin/python
2024-07-25 14:14:01,241:INFO:   machine: macOS-13.3.1-arm64-arm-64bit
2024-07-25 14:14:01,241:INFO:PyCaret required dependencies:
2024-07-25 14:14:01,379:INFO:                 pip: 24.0
2024-07-25 14:14:01,379:INFO:          setuptools: 70.1.1
2024-07-25 14:14:01,379:INFO:             pycaret: 3.3.2
2024-07-25 14:14:01,379:INFO:             IPython: 8.18.1
2024-07-25 14:14:01,379:INFO:          ipywidgets: 8.1.3
2024-07-25 14:14:01,379:INFO:                tqdm: 4.66.4
2024-07-25 14:14:01,379:INFO:               numpy: 1.26.4
2024-07-25 14:14:01,379:INFO:              pandas: 2.1.4
2024-07-25 14:14:01,379:INFO:              jinja2: 3.1.4
2024-07-25 14:14:01,379:INFO:               scipy: 1.11.4
2024-07-25 14:14:01,379:INFO:              joblib: 1.3.2
2024-07-25 14:14:01,379:INFO:             sklearn: 1.4.2
2024-07-25 14:14:01,379:INFO:                pyod: 2.0.1
2024-07-25 14:14:01,379:INFO:            imblearn: 0.12.3
2024-07-25 14:14:01,379:INFO:   category_encoders: 2.6.3
2024-07-25 14:14:01,379:INFO:            lightgbm: 4.4.0
2024-07-25 14:14:01,379:INFO:               numba: 0.59.1
2024-07-25 14:14:01,379:INFO:            requests: 2.32.3
2024-07-25 14:14:01,379:INFO:          matplotlib: 3.7.2
2024-07-25 14:14:01,379:INFO:          scikitplot: 0.3.7
2024-07-25 14:14:01,379:INFO:         yellowbrick: 1.5
2024-07-25 14:14:01,379:INFO:              plotly: 5.22.0
2024-07-25 14:14:01,379:INFO:    plotly-resampler: Not installed
2024-07-25 14:14:01,379:INFO:             kaleido: 0.2.1
2024-07-25 14:14:01,379:INFO:           schemdraw: 0.15
2024-07-25 14:14:01,379:INFO:         statsmodels: 0.14.2
2024-07-25 14:14:01,379:INFO:              sktime: 0.26.0
2024-07-25 14:14:01,380:INFO:               tbats: 1.1.3
2024-07-25 14:14:01,380:INFO:            pmdarima: 2.0.4
2024-07-25 14:14:01,380:INFO:              psutil: 6.0.0
2024-07-25 14:14:01,380:INFO:          markupsafe: 2.1.5
2024-07-25 14:14:01,380:INFO:             pickle5: Not installed
2024-07-25 14:14:01,380:INFO:         cloudpickle: 3.0.0
2024-07-25 14:14:01,380:INFO:         deprecation: 2.1.0
2024-07-25 14:14:01,380:INFO:              xxhash: 3.4.1
2024-07-25 14:14:01,380:INFO:           wurlitzer: 3.1.1
2024-07-25 14:14:01,380:INFO:PyCaret optional dependencies:
2024-07-25 14:14:01,388:INFO:                shap: Not installed
2024-07-25 14:14:01,388:INFO:           interpret: Not installed
2024-07-25 14:14:01,388:INFO:                umap: 0.5.5
2024-07-25 14:14:01,388:INFO:     ydata_profiling: Not installed
2024-07-25 14:14:01,388:INFO:  explainerdashboard: Not installed
2024-07-25 14:14:01,388:INFO:             autoviz: Not installed
2024-07-25 14:14:01,388:INFO:           fairlearn: Not installed
2024-07-25 14:14:01,388:INFO:          deepchecks: Not installed
2024-07-25 14:14:01,388:INFO:             xgboost: Not installed
2024-07-25 14:14:01,388:INFO:            catboost: Not installed
2024-07-25 14:14:01,388:INFO:              kmodes: Not installed
2024-07-25 14:14:01,388:INFO:             mlxtend: Not installed
2024-07-25 14:14:01,388:INFO:       statsforecast: Not installed
2024-07-25 14:14:01,389:INFO:        tune_sklearn: Not installed
2024-07-25 14:14:01,389:INFO:                 ray: Not installed
2024-07-25 14:14:01,389:INFO:            hyperopt: Not installed
2024-07-25 14:14:01,389:INFO:              optuna: Not installed
2024-07-25 14:14:01,389:INFO:               skopt: Not installed
2024-07-25 14:14:01,389:INFO:              mlflow: 2.14.2
2024-07-25 14:14:01,389:INFO:              gradio: Not installed
2024-07-25 14:14:01,389:INFO:             fastapi: Not installed
2024-07-25 14:14:01,389:INFO:             uvicorn: Not installed
2024-07-25 14:14:01,389:INFO:              m2cgen: Not installed
2024-07-25 14:14:01,389:INFO:           evidently: Not installed
2024-07-25 14:14:01,389:INFO:               fugue: Not installed
2024-07-25 14:14:01,389:INFO:           streamlit: Not installed
2024-07-25 14:14:01,389:INFO:             prophet: Not installed
2024-07-25 14:14:01,389:INFO:None
2024-07-25 14:14:01,389:INFO:Set up data.
2024-07-25 14:14:01,394:INFO:Set up folding strategy.
2024-07-25 14:14:01,394:INFO:Set up train/test split.
2024-07-25 14:14:01,422:INFO:Set up index.
2024-07-25 14:14:01,422:INFO:Assigning column types.
2024-07-25 14:14:01,425:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-25 14:14:01,456:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 14:14:01,458:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:14:01,483:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:14:01,483:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:14:01,514:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 14:14:01,515:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:14:01,534:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:14:01,535:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:14:01,535:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-25 14:14:01,566:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:14:01,586:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:14:01,586:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:14:01,618:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:14:01,637:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:14:01,638:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:14:01,638:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-25 14:14:01,689:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:14:01,690:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:14:01,741:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:14:01,741:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:14:01,744:INFO:Preparing preprocessing pipeline...
2024-07-25 14:14:01,745:INFO:Set up label encoding.
2024-07-25 14:14:01,745:INFO:Set up simple imputation.
2024-07-25 14:14:01,749:INFO:Set up encoding of ordinal features.
2024-07-25 14:14:01,753:INFO:Set up encoding of categorical features.
2024-07-25 14:14:01,753:INFO:Set up column name cleaning.
2024-07-25 14:14:02,175:INFO:Finished creating preprocessing pipeline.
2024-07-25 14:14:02,204:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                                    'veil-type',
                                                                    'veil-color',
                                                                    'ring-number',
                                                                    'ring-type',
                                                                    'spore-print-color',
                                                                    'population',
                                                                    'habitat'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 14:14:02,204:INFO:Creating final display dataframe.
2024-07-25 14:14:02,867:INFO:Setup _display_container:                     Description                    Value
0                    Session id                      123
1                        Target                    class
2                   Target type                   Binary
3                Target mapping  edible: 0, poisonous: 1
4           Original data shape               (8124, 23)
5        Transformed data shape              (8124, 111)
6   Transformed train set shape              (5686, 111)
7    Transformed test set shape              (2438, 111)
8          Categorical features                       22
9      Rows with missing values                     2.4%
10                   Preprocess                     True
11              Imputation type                   simple
12           Numeric imputation                     mean
13       Categorical imputation                     mode
14     Maximum one-hot encoding                       25
15              Encoding method                     None
16               Fold Generator                    KFold
17                  Fold Number                       10
18                     CPU Jobs                       -1
19                      Use GPU                    False
20               Log Experiment             MlflowLogger
21              Experiment Name  mushroom_classification
22                          USI                     473d
2024-07-25 14:14:02,924:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:14:02,925:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:14:02,978:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:14:02,978:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:14:02,979:INFO:Logging experiment in loggers
2024-07-25 14:14:03,221:INFO:SubProcess save_model() called ==================================
2024-07-25 14:14:03,278:INFO:Initializing save_model()
2024-07-25 14:14:03,278:INFO:save_model(model=Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                                    'veil-type',
                                                                    'veil-color',
                                                                    'ring-number',
                                                                    'ring-type',
                                                                    'spore-print-color',
                                                                    'population',
                                                                    'habitat'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/tmp_q5wq27y/Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                                    'veil-type',
                                                                    'veil-color',
                                                                    'ring-number',
                                                                    'ring-type',
                                                                    'spore-print-color',
                                                                    'population',
                                                                    'habitat'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-07-25 14:14:03,278:INFO:Adding model into prep_pipe
2024-07-25 14:14:03,278:WARNING:Only Model saved as it was a pipeline.
2024-07-25 14:14:03,303:INFO:/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/tmp_q5wq27y/Transformation Pipeline.pkl saved in current working directory
2024-07-25 14:14:03,330:INFO:Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                                    'veil-type',
                                                                    'veil-color',
                                                                    'ring-number',
                                                                    'ring-type',
                                                                    'spore-print-color',
                                                                    'population',
                                                                    'habitat'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 14:14:03,330:INFO:save_model() successfully completed......................................
2024-07-25 14:14:03,395:INFO:SubProcess save_model() end ==================================
2024-07-25 14:14:03,412:INFO:setup() successfully completed in 1.74s...............
2024-07-25 14:14:40,389:INFO:Initializing compare_models()
2024-07-25 14:14:40,389:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157b40df0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x157b40df0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-25 14:14:40,389:INFO:Checking exceptions
2024-07-25 14:14:40,398:INFO:Preparing display monitor
2024-07-25 14:14:40,466:INFO:Initializing Logistic Regression
2024-07-25 14:14:40,467:INFO:Total runtime is 5.499521891276042e-06 minutes
2024-07-25 14:14:40,471:INFO:SubProcess create_model() called ==================================
2024-07-25 14:14:40,471:INFO:Initializing create_model()
2024-07-25 14:14:40,471:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157b40df0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x167446460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:14:40,471:INFO:Checking exceptions
2024-07-25 14:14:40,472:INFO:Importing libraries
2024-07-25 14:14:40,472:INFO:Copying training dataset
2024-07-25 14:14:40,478:INFO:Defining folds
2024-07-25 14:14:40,478:INFO:Declaring metric variables
2024-07-25 14:14:40,481:INFO:Importing untrained model
2024-07-25 14:14:40,483:INFO:Logistic Regression Imported successfully
2024-07-25 14:14:40,489:INFO:Starting cross validation
2024-07-25 14:14:40,495:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:14:44,950:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:44,950:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:44,954:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:44,957:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:44,960:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:44,962:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:44,963:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:44,965:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:44,967:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:44,968:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:44,970:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:44,973:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:44,974:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:44,974:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:44,975:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:44,979:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:44,982:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:44,983:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:44,985:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:44,992:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:44,997:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:45,003:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:45,008:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:45,016:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:45,448:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:45,452:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:45,453:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:45,457:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:45,457:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:45,461:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:45,473:INFO:Calculating mean and std
2024-07-25 14:14:45,475:INFO:Creating metrics dataframe
2024-07-25 14:14:45,478:INFO:Uploading results into container
2024-07-25 14:14:45,478:INFO:Uploading model into container now
2024-07-25 14:14:45,479:INFO:_master_model_container: 1
2024-07-25 14:14:45,479:INFO:_display_container: 2
2024-07-25 14:14:45,480:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-25 14:14:45,480:INFO:create_model() successfully completed......................................
2024-07-25 14:14:45,573:INFO:SubProcess create_model() end ==================================
2024-07-25 14:14:45,574:INFO:Creating metrics dataframe
2024-07-25 14:14:45,578:INFO:Initializing K Neighbors Classifier
2024-07-25 14:14:45,578:INFO:Total runtime is 0.08520110050837199 minutes
2024-07-25 14:14:45,580:INFO:SubProcess create_model() called ==================================
2024-07-25 14:14:45,581:INFO:Initializing create_model()
2024-07-25 14:14:45,581:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157b40df0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x167446460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:14:45,581:INFO:Checking exceptions
2024-07-25 14:14:45,581:INFO:Importing libraries
2024-07-25 14:14:45,581:INFO:Copying training dataset
2024-07-25 14:14:45,585:INFO:Defining folds
2024-07-25 14:14:45,586:INFO:Declaring metric variables
2024-07-25 14:14:45,588:INFO:Importing untrained model
2024-07-25 14:14:45,590:INFO:K Neighbors Classifier Imported successfully
2024-07-25 14:14:45,595:INFO:Starting cross validation
2024-07-25 14:14:45,599:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:14:46,543:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:46,551:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:46,554:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:46,560:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:46,562:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:46,570:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:46,587:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:46,595:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:46,597:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:46,602:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:46,605:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:46,605:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:46,605:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:46,615:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:46,615:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:46,615:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:46,623:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:46,626:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:46,638:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:46,648:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:46,656:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:46,674:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:46,683:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:46,691:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,031:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,035:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,039:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,044:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,048:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,052:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,071:INFO:Calculating mean and std
2024-07-25 14:14:47,072:INFO:Creating metrics dataframe
2024-07-25 14:14:47,073:INFO:Uploading results into container
2024-07-25 14:14:47,074:INFO:Uploading model into container now
2024-07-25 14:14:47,074:INFO:_master_model_container: 2
2024-07-25 14:14:47,074:INFO:_display_container: 2
2024-07-25 14:14:47,074:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-25 14:14:47,074:INFO:create_model() successfully completed......................................
2024-07-25 14:14:47,132:INFO:SubProcess create_model() end ==================================
2024-07-25 14:14:47,132:INFO:Creating metrics dataframe
2024-07-25 14:14:47,137:INFO:Initializing Naive Bayes
2024-07-25 14:14:47,137:INFO:Total runtime is 0.11117526690165201 minutes
2024-07-25 14:14:47,139:INFO:SubProcess create_model() called ==================================
2024-07-25 14:14:47,139:INFO:Initializing create_model()
2024-07-25 14:14:47,139:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157b40df0>, estimator=nb, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x167446460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:14:47,139:INFO:Checking exceptions
2024-07-25 14:14:47,139:INFO:Importing libraries
2024-07-25 14:14:47,139:INFO:Copying training dataset
2024-07-25 14:14:47,144:INFO:Defining folds
2024-07-25 14:14:47,144:INFO:Declaring metric variables
2024-07-25 14:14:47,146:INFO:Importing untrained model
2024-07-25 14:14:47,148:INFO:Naive Bayes Imported successfully
2024-07-25 14:14:47,153:INFO:Starting cross validation
2024-07-25 14:14:47,156:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:14:47,819:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,829:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,838:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,843:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,851:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,851:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,860:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,862:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,869:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,887:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,890:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,896:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,901:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,903:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,905:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,908:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,914:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,920:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,922:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,929:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,935:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,937:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,943:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:47,951:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:48,234:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:48,238:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:48,242:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:48,246:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:48,250:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:48,254:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:48,262:INFO:Calculating mean and std
2024-07-25 14:14:48,262:INFO:Creating metrics dataframe
2024-07-25 14:14:48,264:INFO:Uploading results into container
2024-07-25 14:14:48,264:INFO:Uploading model into container now
2024-07-25 14:14:48,264:INFO:_master_model_container: 3
2024-07-25 14:14:48,264:INFO:_display_container: 2
2024-07-25 14:14:48,265:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-25 14:14:48,265:INFO:create_model() successfully completed......................................
2024-07-25 14:14:48,325:INFO:SubProcess create_model() end ==================================
2024-07-25 14:14:48,325:INFO:Creating metrics dataframe
2024-07-25 14:14:48,330:INFO:Initializing Decision Tree Classifier
2024-07-25 14:14:48,330:INFO:Total runtime is 0.1310668150583903 minutes
2024-07-25 14:14:48,332:INFO:SubProcess create_model() called ==================================
2024-07-25 14:14:48,333:INFO:Initializing create_model()
2024-07-25 14:14:48,333:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157b40df0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x167446460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:14:48,333:INFO:Checking exceptions
2024-07-25 14:14:48,333:INFO:Importing libraries
2024-07-25 14:14:48,333:INFO:Copying training dataset
2024-07-25 14:14:48,337:INFO:Defining folds
2024-07-25 14:14:48,337:INFO:Declaring metric variables
2024-07-25 14:14:48,339:INFO:Importing untrained model
2024-07-25 14:14:48,341:INFO:Decision Tree Classifier Imported successfully
2024-07-25 14:14:48,345:INFO:Starting cross validation
2024-07-25 14:14:48,349:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:14:49,022:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,028:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,030:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,033:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,036:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,041:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,043:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,046:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,051:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,088:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,097:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,099:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,107:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,107:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,115:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,116:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,123:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,129:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,131:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,134:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,136:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,142:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,144:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,151:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,442:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,442:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,446:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,446:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,450:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,450:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:49,459:INFO:Calculating mean and std
2024-07-25 14:14:49,460:INFO:Creating metrics dataframe
2024-07-25 14:14:49,462:INFO:Uploading results into container
2024-07-25 14:14:49,462:INFO:Uploading model into container now
2024-07-25 14:14:49,463:INFO:_master_model_container: 4
2024-07-25 14:14:49,463:INFO:_display_container: 2
2024-07-25 14:14:49,463:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-07-25 14:14:49,463:INFO:create_model() successfully completed......................................
2024-07-25 14:14:49,527:INFO:SubProcess create_model() end ==================================
2024-07-25 14:14:49,527:INFO:Creating metrics dataframe
2024-07-25 14:14:49,532:INFO:Initializing SVM - Linear Kernel
2024-07-25 14:14:49,533:INFO:Total runtime is 0.15110371907552084 minutes
2024-07-25 14:14:49,535:INFO:SubProcess create_model() called ==================================
2024-07-25 14:14:49,535:INFO:Initializing create_model()
2024-07-25 14:14:49,535:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157b40df0>, estimator=svm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x167446460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:14:49,535:INFO:Checking exceptions
2024-07-25 14:14:49,535:INFO:Importing libraries
2024-07-25 14:14:49,535:INFO:Copying training dataset
2024-07-25 14:14:49,540:INFO:Defining folds
2024-07-25 14:14:49,540:INFO:Declaring metric variables
2024-07-25 14:14:49,542:INFO:Importing untrained model
2024-07-25 14:14:49,544:INFO:SVM - Linear Kernel Imported successfully
2024-07-25 14:14:49,549:INFO:Starting cross validation
2024-07-25 14:14:49,553:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:14:50,264:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,267:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,270:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,278:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,279:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,283:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,288:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,292:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,293:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,294:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,306:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,319:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,319:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,329:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,329:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,338:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,339:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,345:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,347:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,351:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,355:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,359:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,363:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,367:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,686:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,690:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,694:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,696:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,700:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,704:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:50,715:INFO:Calculating mean and std
2024-07-25 14:14:50,716:INFO:Creating metrics dataframe
2024-07-25 14:14:50,718:INFO:Uploading results into container
2024-07-25 14:14:50,718:INFO:Uploading model into container now
2024-07-25 14:14:50,718:INFO:_master_model_container: 5
2024-07-25 14:14:50,718:INFO:_display_container: 2
2024-07-25 14:14:50,719:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-25 14:14:50,719:INFO:create_model() successfully completed......................................
2024-07-25 14:14:50,775:INFO:SubProcess create_model() end ==================================
2024-07-25 14:14:50,775:INFO:Creating metrics dataframe
2024-07-25 14:14:50,780:INFO:Initializing Ridge Classifier
2024-07-25 14:14:50,780:INFO:Total runtime is 0.17189786434173585 minutes
2024-07-25 14:14:50,782:INFO:SubProcess create_model() called ==================================
2024-07-25 14:14:50,782:INFO:Initializing create_model()
2024-07-25 14:14:50,782:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157b40df0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x167446460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:14:50,782:INFO:Checking exceptions
2024-07-25 14:14:50,783:INFO:Importing libraries
2024-07-25 14:14:50,783:INFO:Copying training dataset
2024-07-25 14:14:50,787:INFO:Defining folds
2024-07-25 14:14:50,787:INFO:Declaring metric variables
2024-07-25 14:14:50,789:INFO:Importing untrained model
2024-07-25 14:14:50,791:INFO:Ridge Classifier Imported successfully
2024-07-25 14:14:50,796:INFO:Starting cross validation
2024-07-25 14:14:50,799:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:14:51,495:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,507:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,515:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,534:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,539:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,543:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,549:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,551:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,554:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,557:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,565:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,573:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,586:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,590:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,596:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,596:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,600:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,603:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,604:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,604:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,608:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,612:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,612:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,621:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,915:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,919:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,924:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,931:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,935:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,939:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:51,958:INFO:Calculating mean and std
2024-07-25 14:14:51,959:INFO:Creating metrics dataframe
2024-07-25 14:14:51,960:INFO:Uploading results into container
2024-07-25 14:14:51,961:INFO:Uploading model into container now
2024-07-25 14:14:51,961:INFO:_master_model_container: 6
2024-07-25 14:14:51,961:INFO:_display_container: 2
2024-07-25 14:14:51,961:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-07-25 14:14:51,961:INFO:create_model() successfully completed......................................
2024-07-25 14:14:52,018:INFO:SubProcess create_model() end ==================================
2024-07-25 14:14:52,018:INFO:Creating metrics dataframe
2024-07-25 14:14:52,024:INFO:Initializing Random Forest Classifier
2024-07-25 14:14:52,024:INFO:Total runtime is 0.19262258609135946 minutes
2024-07-25 14:14:52,026:INFO:SubProcess create_model() called ==================================
2024-07-25 14:14:52,026:INFO:Initializing create_model()
2024-07-25 14:14:52,026:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157b40df0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x167446460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:14:52,026:INFO:Checking exceptions
2024-07-25 14:14:52,026:INFO:Importing libraries
2024-07-25 14:14:52,026:INFO:Copying training dataset
2024-07-25 14:14:52,030:INFO:Defining folds
2024-07-25 14:14:52,031:INFO:Declaring metric variables
2024-07-25 14:14:52,033:INFO:Importing untrained model
2024-07-25 14:14:52,036:INFO:Random Forest Classifier Imported successfully
2024-07-25 14:14:52,040:INFO:Starting cross validation
2024-07-25 14:14:52,044:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:14:53,283:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,285:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,292:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,295:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,300:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,303:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,316:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,319:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,325:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,328:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,333:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,337:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,342:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,342:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,350:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,350:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,351:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,358:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,358:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,359:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,367:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,382:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,390:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,396:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,859:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,862:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,863:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,866:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,867:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,871:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:53,884:INFO:Calculating mean and std
2024-07-25 14:14:53,885:INFO:Creating metrics dataframe
2024-07-25 14:14:53,886:INFO:Uploading results into container
2024-07-25 14:14:53,887:INFO:Uploading model into container now
2024-07-25 14:14:53,887:INFO:_master_model_container: 7
2024-07-25 14:14:53,887:INFO:_display_container: 2
2024-07-25 14:14:53,887:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-07-25 14:14:53,887:INFO:create_model() successfully completed......................................
2024-07-25 14:14:53,944:INFO:SubProcess create_model() end ==================================
2024-07-25 14:14:53,944:INFO:Creating metrics dataframe
2024-07-25 14:14:53,950:INFO:Initializing Quadratic Discriminant Analysis
2024-07-25 14:14:53,950:INFO:Total runtime is 0.22472328742345174 minutes
2024-07-25 14:14:53,952:INFO:SubProcess create_model() called ==================================
2024-07-25 14:14:53,952:INFO:Initializing create_model()
2024-07-25 14:14:53,952:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157b40df0>, estimator=qda, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x167446460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:14:53,952:INFO:Checking exceptions
2024-07-25 14:14:53,952:INFO:Importing libraries
2024-07-25 14:14:53,952:INFO:Copying training dataset
2024-07-25 14:14:53,957:INFO:Defining folds
2024-07-25 14:14:53,957:INFO:Declaring metric variables
2024-07-25 14:14:53,959:INFO:Importing untrained model
2024-07-25 14:14:53,962:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-25 14:14:53,966:INFO:Starting cross validation
2024-07-25 14:14:53,971:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:14:54,603:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:14:54,604:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:14:54,605:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:14:54,641:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:14:54,662:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:14:54,669:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:14:54,674:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:14:54,719:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:14:54,779:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:54,779:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:54,782:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:54,788:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:54,790:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:54,793:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:54,797:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:54,798:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:54,801:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:54,808:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:54,817:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:54,824:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:54,831:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:54,836:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:54,839:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:54,842:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:54,846:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:54,848:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:54,852:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:54,853:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:54,860:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:54,878:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:54,888:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:54,896:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:55,159:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:14:55,161:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:14:55,232:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:55,233:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:55,236:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:55,237:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:55,240:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:55,241:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:55,258:INFO:Calculating mean and std
2024-07-25 14:14:55,259:INFO:Creating metrics dataframe
2024-07-25 14:14:55,260:INFO:Uploading results into container
2024-07-25 14:14:55,260:INFO:Uploading model into container now
2024-07-25 14:14:55,260:INFO:_master_model_container: 8
2024-07-25 14:14:55,261:INFO:_display_container: 2
2024-07-25 14:14:55,261:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-25 14:14:55,261:INFO:create_model() successfully completed......................................
2024-07-25 14:14:55,318:INFO:SubProcess create_model() end ==================================
2024-07-25 14:14:55,318:INFO:Creating metrics dataframe
2024-07-25 14:14:55,324:INFO:Initializing Ada Boost Classifier
2024-07-25 14:14:55,324:INFO:Total runtime is 0.24763323465983073 minutes
2024-07-25 14:14:55,326:INFO:SubProcess create_model() called ==================================
2024-07-25 14:14:55,327:INFO:Initializing create_model()
2024-07-25 14:14:55,327:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157b40df0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x167446460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:14:55,327:INFO:Checking exceptions
2024-07-25 14:14:55,327:INFO:Importing libraries
2024-07-25 14:14:55,327:INFO:Copying training dataset
2024-07-25 14:14:55,331:INFO:Defining folds
2024-07-25 14:14:55,331:INFO:Declaring metric variables
2024-07-25 14:14:55,333:INFO:Importing untrained model
2024-07-25 14:14:55,335:INFO:Ada Boost Classifier Imported successfully
2024-07-25 14:14:55,339:INFO:Starting cross validation
2024-07-25 14:14:55,343:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:14:55,852:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:14:55,860:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:14:55,866:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:14:55,881:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:14:55,886:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:14:55,946:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:14:55,987:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:14:55,995:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:14:56,691:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:56,699:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:56,707:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:56,708:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:56,715:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:56,720:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:56,723:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:56,724:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:56,725:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:56,731:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:56,732:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:56,734:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:56,735:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:56,743:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:56,743:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:56,783:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:56,789:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:56,791:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:56,792:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:56,796:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:56,798:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:56,800:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:56,804:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:56,808:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:57,056:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:14:57,069:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:14:57,426:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:57,430:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:57,434:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:57,447:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:57,451:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:57,456:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:14:57,472:INFO:Calculating mean and std
2024-07-25 14:14:57,473:INFO:Creating metrics dataframe
2024-07-25 14:14:57,475:INFO:Uploading results into container
2024-07-25 14:14:57,475:INFO:Uploading model into container now
2024-07-25 14:14:57,475:INFO:_master_model_container: 9
2024-07-25 14:14:57,475:INFO:_display_container: 2
2024-07-25 14:14:57,475:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-07-25 14:14:57,475:INFO:create_model() successfully completed......................................
2024-07-25 14:14:57,532:INFO:SubProcess create_model() end ==================================
2024-07-25 14:14:57,532:INFO:Creating metrics dataframe
2024-07-25 14:14:57,539:INFO:Initializing Gradient Boosting Classifier
2024-07-25 14:14:57,539:INFO:Total runtime is 0.2845398187637329 minutes
2024-07-25 14:14:57,541:INFO:SubProcess create_model() called ==================================
2024-07-25 14:14:57,541:INFO:Initializing create_model()
2024-07-25 14:14:57,541:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157b40df0>, estimator=gbc, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x167446460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:14:57,541:INFO:Checking exceptions
2024-07-25 14:14:57,541:INFO:Importing libraries
2024-07-25 14:14:57,541:INFO:Copying training dataset
2024-07-25 14:14:57,545:INFO:Defining folds
2024-07-25 14:14:57,546:INFO:Declaring metric variables
2024-07-25 14:14:57,548:INFO:Importing untrained model
2024-07-25 14:14:57,550:INFO:Gradient Boosting Classifier Imported successfully
2024-07-25 14:14:57,555:INFO:Starting cross validation
2024-07-25 14:14:57,559:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:15:00,021:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:00,036:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:00,036:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:00,047:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:00,047:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:00,059:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:00,074:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:00,077:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:00,084:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:00,086:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:00,092:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:00,094:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:00,099:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:00,108:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:00,109:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:00,109:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:00,116:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:00,117:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:00,118:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:00,124:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:00,125:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:00,164:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:00,171:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:00,177:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:01,378:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:01,382:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:01,387:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:01,400:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:01,404:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:01,409:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:01,419:INFO:Calculating mean and std
2024-07-25 14:15:01,420:INFO:Creating metrics dataframe
2024-07-25 14:15:01,421:INFO:Uploading results into container
2024-07-25 14:15:01,422:INFO:Uploading model into container now
2024-07-25 14:15:01,422:INFO:_master_model_container: 10
2024-07-25 14:15:01,422:INFO:_display_container: 2
2024-07-25 14:15:01,422:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-25 14:15:01,422:INFO:create_model() successfully completed......................................
2024-07-25 14:15:01,485:INFO:SubProcess create_model() end ==================================
2024-07-25 14:15:01,485:INFO:Creating metrics dataframe
2024-07-25 14:15:01,492:INFO:Initializing Linear Discriminant Analysis
2024-07-25 14:15:01,492:INFO:Total runtime is 0.3504360993703206 minutes
2024-07-25 14:15:01,495:INFO:SubProcess create_model() called ==================================
2024-07-25 14:15:01,495:INFO:Initializing create_model()
2024-07-25 14:15:01,495:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157b40df0>, estimator=lda, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x167446460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:15:01,495:INFO:Checking exceptions
2024-07-25 14:15:01,495:INFO:Importing libraries
2024-07-25 14:15:01,495:INFO:Copying training dataset
2024-07-25 14:15:01,500:INFO:Defining folds
2024-07-25 14:15:01,500:INFO:Declaring metric variables
2024-07-25 14:15:01,502:INFO:Importing untrained model
2024-07-25 14:15:01,504:INFO:Linear Discriminant Analysis Imported successfully
2024-07-25 14:15:01,508:INFO:Starting cross validation
2024-07-25 14:15:01,512:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:15:02,472:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,480:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,483:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,491:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,493:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,498:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,502:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,503:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,506:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,506:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,512:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,514:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,516:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,516:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,522:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,522:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,524:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,526:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,532:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,533:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,541:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,567:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,575:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,582:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,929:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,931:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,933:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,935:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,938:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,939:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:02,949:INFO:Calculating mean and std
2024-07-25 14:15:02,950:INFO:Creating metrics dataframe
2024-07-25 14:15:02,952:INFO:Uploading results into container
2024-07-25 14:15:02,952:INFO:Uploading model into container now
2024-07-25 14:15:02,953:INFO:_master_model_container: 11
2024-07-25 14:15:02,953:INFO:_display_container: 2
2024-07-25 14:15:02,953:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-25 14:15:02,953:INFO:create_model() successfully completed......................................
2024-07-25 14:15:03,015:INFO:SubProcess create_model() end ==================================
2024-07-25 14:15:03,015:INFO:Creating metrics dataframe
2024-07-25 14:15:03,021:INFO:Initializing Extra Trees Classifier
2024-07-25 14:15:03,022:INFO:Total runtime is 0.37592097123463947 minutes
2024-07-25 14:15:03,024:INFO:SubProcess create_model() called ==================================
2024-07-25 14:15:03,024:INFO:Initializing create_model()
2024-07-25 14:15:03,024:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157b40df0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x167446460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:15:03,024:INFO:Checking exceptions
2024-07-25 14:15:03,024:INFO:Importing libraries
2024-07-25 14:15:03,024:INFO:Copying training dataset
2024-07-25 14:15:03,028:INFO:Defining folds
2024-07-25 14:15:03,028:INFO:Declaring metric variables
2024-07-25 14:15:03,030:INFO:Importing untrained model
2024-07-25 14:15:03,032:INFO:Extra Trees Classifier Imported successfully
2024-07-25 14:15:03,036:INFO:Starting cross validation
2024-07-25 14:15:03,039:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:15:04,512:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:04,521:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:04,531:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:04,531:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:04,538:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:04,541:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:04,542:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:04,548:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:04,550:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:04,551:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:04,552:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:04,556:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:04,557:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:04,559:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:04,560:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:04,561:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:04,564:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:04,567:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:04,569:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:04,573:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:04,579:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:04,605:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:04,613:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:04,620:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:05,066:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:05,068:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:05,071:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:05,072:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:05,075:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:05,076:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:05,093:INFO:Calculating mean and std
2024-07-25 14:15:05,094:INFO:Creating metrics dataframe
2024-07-25 14:15:05,096:INFO:Uploading results into container
2024-07-25 14:15:05,096:INFO:Uploading model into container now
2024-07-25 14:15:05,097:INFO:_master_model_container: 12
2024-07-25 14:15:05,097:INFO:_display_container: 2
2024-07-25 14:15:05,097:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-07-25 14:15:05,097:INFO:create_model() successfully completed......................................
2024-07-25 14:15:05,163:INFO:SubProcess create_model() end ==================================
2024-07-25 14:15:05,163:INFO:Creating metrics dataframe
2024-07-25 14:15:05,170:INFO:Initializing Light Gradient Boosting Machine
2024-07-25 14:15:05,170:INFO:Total runtime is 0.41172370115915935 minutes
2024-07-25 14:15:05,172:INFO:SubProcess create_model() called ==================================
2024-07-25 14:15:05,172:INFO:Initializing create_model()
2024-07-25 14:15:05,172:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157b40df0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x167446460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:15:05,172:INFO:Checking exceptions
2024-07-25 14:15:05,172:INFO:Importing libraries
2024-07-25 14:15:05,172:INFO:Copying training dataset
2024-07-25 14:15:05,176:INFO:Defining folds
2024-07-25 14:15:05,176:INFO:Declaring metric variables
2024-07-25 14:15:05,178:INFO:Importing untrained model
2024-07-25 14:15:05,180:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-25 14:15:05,184:INFO:Starting cross validation
2024-07-25 14:15:05,188:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:15:08,205:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:08,215:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:08,223:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:08,488:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:08,488:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:08,491:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:08,493:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:08,493:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:08,498:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:08,498:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:08,500:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:08,504:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:08,505:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:08,509:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:08,514:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:08,516:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:08,521:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:08,526:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:08,561:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:08,565:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:08,566:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:08,570:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:08,571:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:08,575:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:09,354:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:09,358:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:09,363:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:09,458:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:09,463:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:09,467:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:09,483:INFO:Calculating mean and std
2024-07-25 14:15:09,484:INFO:Creating metrics dataframe
2024-07-25 14:15:09,485:INFO:Uploading results into container
2024-07-25 14:15:09,486:INFO:Uploading model into container now
2024-07-25 14:15:09,486:INFO:_master_model_container: 13
2024-07-25 14:15:09,486:INFO:_display_container: 2
2024-07-25 14:15:09,486:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-25 14:15:09,487:INFO:create_model() successfully completed......................................
2024-07-25 14:15:09,543:INFO:SubProcess create_model() end ==================================
2024-07-25 14:15:09,543:INFO:Creating metrics dataframe
2024-07-25 14:15:09,550:INFO:Initializing Dummy Classifier
2024-07-25 14:15:09,550:INFO:Total runtime is 0.4847283164660136 minutes
2024-07-25 14:15:09,552:INFO:SubProcess create_model() called ==================================
2024-07-25 14:15:09,552:INFO:Initializing create_model()
2024-07-25 14:15:09,552:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157b40df0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x167446460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:15:09,552:INFO:Checking exceptions
2024-07-25 14:15:09,553:INFO:Importing libraries
2024-07-25 14:15:09,553:INFO:Copying training dataset
2024-07-25 14:15:09,556:INFO:Defining folds
2024-07-25 14:15:09,556:INFO:Declaring metric variables
2024-07-25 14:15:09,558:INFO:Importing untrained model
2024-07-25 14:15:09,560:INFO:Dummy Classifier Imported successfully
2024-07-25 14:15:09,564:INFO:Starting cross validation
2024-07-25 14:15:09,567:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:15:10,263:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,272:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,278:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:15:10,280:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,282:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,293:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,297:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:15:10,302:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,325:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,337:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,343:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:15:10,349:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,360:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,367:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,369:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,374:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:15:10,377:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,379:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,382:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:15:10,387:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,401:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,409:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,413:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,413:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:15:10,417:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,420:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,425:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:15:10,428:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,440:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,448:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,452:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:15:10,456:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,711:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,715:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,717:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:15:10,719:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,725:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,729:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,731:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:15:10,733:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:10,751:INFO:Calculating mean and std
2024-07-25 14:15:10,752:INFO:Creating metrics dataframe
2024-07-25 14:15:10,753:INFO:Uploading results into container
2024-07-25 14:15:10,753:INFO:Uploading model into container now
2024-07-25 14:15:10,754:INFO:_master_model_container: 14
2024-07-25 14:15:10,754:INFO:_display_container: 2
2024-07-25 14:15:10,754:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-07-25 14:15:10,754:INFO:create_model() successfully completed......................................
2024-07-25 14:15:10,814:INFO:SubProcess create_model() end ==================================
2024-07-25 14:15:10,814:INFO:Creating metrics dataframe
2024-07-25 14:15:10,823:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-25 14:15:10,828:INFO:Initializing create_model()
2024-07-25 14:15:10,828:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157b40df0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:15:10,828:INFO:Checking exceptions
2024-07-25 14:15:10,829:INFO:Importing libraries
2024-07-25 14:15:10,829:INFO:Copying training dataset
2024-07-25 14:15:10,833:INFO:Defining folds
2024-07-25 14:15:10,833:INFO:Declaring metric variables
2024-07-25 14:15:10,833:INFO:Importing untrained model
2024-07-25 14:15:10,833:INFO:Declaring custom model
2024-07-25 14:15:10,834:INFO:K Neighbors Classifier Imported successfully
2024-07-25 14:15:10,837:INFO:Cross validation set to False
2024-07-25 14:15:10,837:INFO:Fitting Model
2024-07-25 14:15:11,129:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-25 14:15:11,129:INFO:create_model() successfully completed......................................
2024-07-25 14:15:11,189:INFO:Creating Dashboard logs
2024-07-25 14:15:11,191:INFO:Model: K Neighbors Classifier
2024-07-25 14:15:11,229:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-07-25 14:15:11,346:INFO:Initializing predict_model()
2024-07-25 14:15:11,346:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157b40df0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x167704ee0>)
2024-07-25 14:15:11,346:INFO:Checking exceptions
2024-07-25 14:15:11,346:INFO:Preloading libraries
2024-07-25 14:15:11,692:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:11,708:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:11,723:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:15:11,823:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/_distutils_hack/__init__.py:26: UserWarning: Setuptools is replacing distutils.
  warnings.warn("Setuptools is replacing distutils.")

2024-07-25 14:15:12,223:INFO:Creating Dashboard logs
2024-07-25 14:15:12,225:INFO:Model: SVM - Linear Kernel
2024-07-25 14:15:12,258:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 123, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-07-25 14:15:12,449:INFO:Creating Dashboard logs
2024-07-25 14:15:12,451:INFO:Model: Random Forest Classifier
2024-07-25 14:15:12,469:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-07-25 14:15:12,661:INFO:Creating Dashboard logs
2024-07-25 14:15:12,664:INFO:Model: Quadratic Discriminant Analysis
2024-07-25 14:15:12,680:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2024-07-25 14:15:12,859:INFO:Creating Dashboard logs
2024-07-25 14:15:12,861:INFO:Model: Extra Trees Classifier
2024-07-25 14:15:12,878:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-07-25 14:15:13,054:INFO:Creating Dashboard logs
2024-07-25 14:15:13,057:INFO:Model: Light Gradient Boosting Machine
2024-07-25 14:15:13,073:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-07-25 14:15:13,254:INFO:Creating Dashboard logs
2024-07-25 14:15:13,256:INFO:Model: Decision Tree Classifier
2024-07-25 14:15:13,273:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 123, 'splitter': 'best'}
2024-07-25 14:15:13,447:INFO:Creating Dashboard logs
2024-07-25 14:15:13,450:INFO:Model: Ada Boost Classifier
2024-07-25 14:15:13,468:INFO:Logged params: {'algorithm': 'SAMME.R', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 123}
2024-07-25 14:15:13,648:INFO:Creating Dashboard logs
2024-07-25 14:15:13,651:INFO:Model: Ridge Classifier
2024-07-25 14:15:13,670:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 123, 'solver': 'auto', 'tol': 0.0001}
2024-07-25 14:15:13,848:INFO:Creating Dashboard logs
2024-07-25 14:15:13,850:INFO:Model: Gradient Boosting Classifier
2024-07-25 14:15:13,866:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-07-25 14:15:14,101:INFO:Creating Dashboard logs
2024-07-25 14:15:14,104:INFO:Model: Linear Discriminant Analysis
2024-07-25 14:15:14,120:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2024-07-25 14:15:14,443:INFO:Creating Dashboard logs
2024-07-25 14:15:14,446:INFO:Model: Logistic Regression
2024-07-25 14:15:14,463:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-07-25 14:15:14,696:INFO:Creating Dashboard logs
2024-07-25 14:15:14,698:INFO:Model: Naive Bayes
2024-07-25 14:15:14,714:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2024-07-25 14:15:14,886:INFO:Creating Dashboard logs
2024-07-25 14:15:14,888:INFO:Model: Dummy Classifier
2024-07-25 14:15:14,904:INFO:Logged params: {'constant': None, 'random_state': 123, 'strategy': 'prior'}
2024-07-25 14:15:15,084:INFO:_master_model_container: 14
2024-07-25 14:15:15,084:INFO:_display_container: 2
2024-07-25 14:15:15,084:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-25 14:15:15,084:INFO:compare_models() successfully completed......................................
2024-07-25 14:17:59,150:INFO:PyCaret ClassificationExperiment
2024-07-25 14:17:59,151:INFO:Logging name: mushroom_classification
2024-07-25 14:17:59,151:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-25 14:17:59,151:INFO:version 3.3.2
2024-07-25 14:17:59,151:INFO:Initializing setup()
2024-07-25 14:17:59,151:INFO:self.USI: a498
2024-07-25 14:17:59,151:INFO:self._variable_keys: {'X_test', 'n_jobs_param', 'pipeline', 'idx', 'logging_param', 'X_train', 'seed', 'gpu_n_jobs_param', 'y_test', 'fold_shuffle_param', '_available_plots', 'data', 'memory', 'html_param', '_ml_usecase', 'exp_id', 'gpu_param', 'log_plots_param', 'fix_imbalance', 'exp_name_log', 'X', 'target_param', 'y_train', 'USI', 'fold_groups_param', 'is_multiclass', 'y', 'fold_generator'}
2024-07-25 14:17:59,151:INFO:Checking environment
2024-07-25 14:17:59,151:INFO:python_version: 3.9.19
2024-07-25 14:17:59,151:INFO:python_build: ('main', 'Mar 20 2024 12:55:20')
2024-07-25 14:17:59,151:INFO:machine: arm64
2024-07-25 14:17:59,151:INFO:platform: macOS-13.3.1-arm64-arm-64bit
2024-07-25 14:17:59,151:INFO:Memory: svmem(total=8589934592, available=2017591296, percent=76.5, used=3137093632, free=131317760, active=1902198784, inactive=1876508672, wired=1234894848)
2024-07-25 14:17:59,151:INFO:Physical Core: 8
2024-07-25 14:17:59,152:INFO:Logical Core: 8
2024-07-25 14:17:59,152:INFO:Checking libraries
2024-07-25 14:17:59,152:INFO:System:
2024-07-25 14:17:59,152:INFO:    python: 3.9.19 | packaged by conda-forge | (main, Mar 20 2024, 12:55:20)  [Clang 16.0.6 ]
2024-07-25 14:17:59,152:INFO:executable: /opt/anaconda3/envs/mlops/bin/python
2024-07-25 14:17:59,152:INFO:   machine: macOS-13.3.1-arm64-arm-64bit
2024-07-25 14:17:59,152:INFO:PyCaret required dependencies:
2024-07-25 14:17:59,152:INFO:                 pip: 24.0
2024-07-25 14:17:59,152:INFO:          setuptools: 70.1.1
2024-07-25 14:17:59,152:INFO:             pycaret: 3.3.2
2024-07-25 14:17:59,152:INFO:             IPython: 8.18.1
2024-07-25 14:17:59,152:INFO:          ipywidgets: 8.1.3
2024-07-25 14:17:59,152:INFO:                tqdm: 4.66.4
2024-07-25 14:17:59,152:INFO:               numpy: 1.26.4
2024-07-25 14:17:59,152:INFO:              pandas: 2.1.4
2024-07-25 14:17:59,152:INFO:              jinja2: 3.1.4
2024-07-25 14:17:59,152:INFO:               scipy: 1.11.4
2024-07-25 14:17:59,152:INFO:              joblib: 1.3.2
2024-07-25 14:17:59,152:INFO:             sklearn: 1.4.2
2024-07-25 14:17:59,152:INFO:                pyod: 2.0.1
2024-07-25 14:17:59,152:INFO:            imblearn: 0.12.3
2024-07-25 14:17:59,153:INFO:   category_encoders: 2.6.3
2024-07-25 14:17:59,153:INFO:            lightgbm: 4.4.0
2024-07-25 14:17:59,153:INFO:               numba: 0.59.1
2024-07-25 14:17:59,153:INFO:            requests: 2.32.3
2024-07-25 14:17:59,153:INFO:          matplotlib: 3.7.2
2024-07-25 14:17:59,153:INFO:          scikitplot: 0.3.7
2024-07-25 14:17:59,153:INFO:         yellowbrick: 1.5
2024-07-25 14:17:59,153:INFO:              plotly: 5.22.0
2024-07-25 14:17:59,153:INFO:    plotly-resampler: Not installed
2024-07-25 14:17:59,153:INFO:             kaleido: 0.2.1
2024-07-25 14:17:59,153:INFO:           schemdraw: 0.15
2024-07-25 14:17:59,153:INFO:         statsmodels: 0.14.2
2024-07-25 14:17:59,153:INFO:              sktime: 0.26.0
2024-07-25 14:17:59,153:INFO:               tbats: 1.1.3
2024-07-25 14:17:59,153:INFO:            pmdarima: 2.0.4
2024-07-25 14:17:59,153:INFO:              psutil: 6.0.0
2024-07-25 14:17:59,153:INFO:          markupsafe: 2.1.5
2024-07-25 14:17:59,153:INFO:             pickle5: Not installed
2024-07-25 14:17:59,153:INFO:         cloudpickle: 3.0.0
2024-07-25 14:17:59,153:INFO:         deprecation: 2.1.0
2024-07-25 14:17:59,153:INFO:              xxhash: 3.4.1
2024-07-25 14:17:59,153:INFO:           wurlitzer: 3.1.1
2024-07-25 14:17:59,153:INFO:PyCaret optional dependencies:
2024-07-25 14:17:59,153:INFO:                shap: Not installed
2024-07-25 14:17:59,153:INFO:           interpret: Not installed
2024-07-25 14:17:59,153:INFO:                umap: 0.5.5
2024-07-25 14:17:59,153:INFO:     ydata_profiling: Not installed
2024-07-25 14:17:59,153:INFO:  explainerdashboard: Not installed
2024-07-25 14:17:59,153:INFO:             autoviz: Not installed
2024-07-25 14:17:59,153:INFO:           fairlearn: Not installed
2024-07-25 14:17:59,153:INFO:          deepchecks: Not installed
2024-07-25 14:17:59,153:INFO:             xgboost: Not installed
2024-07-25 14:17:59,153:INFO:            catboost: Not installed
2024-07-25 14:17:59,153:INFO:              kmodes: Not installed
2024-07-25 14:17:59,153:INFO:             mlxtend: Not installed
2024-07-25 14:17:59,153:INFO:       statsforecast: Not installed
2024-07-25 14:17:59,153:INFO:        tune_sklearn: Not installed
2024-07-25 14:17:59,153:INFO:                 ray: Not installed
2024-07-25 14:17:59,154:INFO:            hyperopt: Not installed
2024-07-25 14:17:59,154:INFO:              optuna: Not installed
2024-07-25 14:17:59,154:INFO:               skopt: Not installed
2024-07-25 14:17:59,154:INFO:              mlflow: 2.14.2
2024-07-25 14:17:59,154:INFO:              gradio: Not installed
2024-07-25 14:17:59,154:INFO:             fastapi: Not installed
2024-07-25 14:17:59,154:INFO:             uvicorn: Not installed
2024-07-25 14:17:59,154:INFO:              m2cgen: Not installed
2024-07-25 14:17:59,154:INFO:           evidently: Not installed
2024-07-25 14:17:59,154:INFO:               fugue: Not installed
2024-07-25 14:17:59,154:INFO:           streamlit: Not installed
2024-07-25 14:17:59,154:INFO:             prophet: Not installed
2024-07-25 14:17:59,154:INFO:None
2024-07-25 14:17:59,154:INFO:Set up data.
2024-07-25 14:17:59,165:INFO:Set up folding strategy.
2024-07-25 14:17:59,166:INFO:Set up train/test split.
2024-07-25 14:17:59,177:INFO:Set up index.
2024-07-25 14:17:59,177:INFO:Assigning column types.
2024-07-25 14:17:59,180:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-25 14:17:59,213:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 14:17:59,214:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:17:59,235:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:17:59,235:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:17:59,267:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 14:17:59,267:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:17:59,287:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:17:59,288:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:17:59,288:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-25 14:17:59,320:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:17:59,339:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:17:59,339:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:17:59,372:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:17:59,391:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:17:59,391:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:17:59,392:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-25 14:17:59,443:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:17:59,443:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:17:59,495:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:17:59,495:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:17:59,496:INFO:Preparing preprocessing pipeline...
2024-07-25 14:17:59,497:INFO:Set up label encoding.
2024-07-25 14:17:59,497:INFO:Set up simple imputation.
2024-07-25 14:17:59,501:INFO:Set up encoding of ordinal features.
2024-07-25 14:17:59,505:INFO:Set up encoding of categorical features.
2024-07-25 14:17:59,505:INFO:Set up imbalanced handling.
2024-07-25 14:17:59,505:INFO:Set up column name cleaning.
2024-07-25 14:17:59,836:INFO:Finished creating preprocessing pipeline.
2024-07-25 14:17:59,866:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 14:17:59,866:INFO:Creating final display dataframe.
2024-07-25 14:18:00,572:INFO:Setup _display_container:                     Description                    Value
0                    Session id                      123
1                        Target                    class
2                   Target type                   Binary
3                Target mapping  edible: 0, poisonous: 1
4           Original data shape               (8124, 23)
5        Transformed data shape              (8328, 111)
6   Transformed train set shape              (5890, 111)
7    Transformed test set shape              (2438, 111)
8          Categorical features                       22
9      Rows with missing values                     2.4%
10                   Preprocess                     True
11              Imputation type                   simple
12           Numeric imputation                     mean
13       Categorical imputation                     mode
14     Maximum one-hot encoding                       25
15              Encoding method                     None
16                Fix imbalance                     True
17         Fix imbalance method                    SMOTE
18               Fold Generator                    KFold
19                  Fold Number                       10
20                     CPU Jobs                       -1
21                      Use GPU                    False
22               Log Experiment             MlflowLogger
23              Experiment Name  mushroom_classification
24                          USI                     a498
2024-07-25 14:18:00,630:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:18:00,630:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:18:00,683:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:18:00,683:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:18:00,684:INFO:Logging experiment in loggers
2024-07-25 14:19:16,458:INFO:PyCaret ClassificationExperiment
2024-07-25 14:19:16,459:INFO:Logging name: mushroom
2024-07-25 14:19:16,459:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-25 14:19:16,459:INFO:version 3.3.2
2024-07-25 14:19:16,459:INFO:Initializing setup()
2024-07-25 14:19:16,459:INFO:self.USI: d9cf
2024-07-25 14:19:16,459:INFO:self._variable_keys: {'X_test', 'n_jobs_param', 'pipeline', 'idx', 'logging_param', 'X_train', 'seed', 'gpu_n_jobs_param', 'y_test', 'fold_shuffle_param', '_available_plots', 'data', 'memory', 'html_param', '_ml_usecase', 'exp_id', 'gpu_param', 'log_plots_param', 'fix_imbalance', 'exp_name_log', 'X', 'target_param', 'y_train', 'USI', 'fold_groups_param', 'is_multiclass', 'y', 'fold_generator'}
2024-07-25 14:19:16,459:INFO:Checking environment
2024-07-25 14:19:16,459:INFO:python_version: 3.9.19
2024-07-25 14:19:16,459:INFO:python_build: ('main', 'Mar 20 2024 12:55:20')
2024-07-25 14:19:16,459:INFO:machine: arm64
2024-07-25 14:19:16,459:INFO:platform: macOS-13.3.1-arm64-arm-64bit
2024-07-25 14:19:16,459:INFO:Memory: svmem(total=8589934592, available=1890336768, percent=78.0, used=3166158848, free=41615360, active=1858551808, inactive=1847607296, wired=1307607040)
2024-07-25 14:19:16,459:INFO:Physical Core: 8
2024-07-25 14:19:16,460:INFO:Logical Core: 8
2024-07-25 14:19:16,460:INFO:Checking libraries
2024-07-25 14:19:16,460:INFO:System:
2024-07-25 14:19:16,460:INFO:    python: 3.9.19 | packaged by conda-forge | (main, Mar 20 2024, 12:55:20)  [Clang 16.0.6 ]
2024-07-25 14:19:16,460:INFO:executable: /opt/anaconda3/envs/mlops/bin/python
2024-07-25 14:19:16,460:INFO:   machine: macOS-13.3.1-arm64-arm-64bit
2024-07-25 14:19:16,460:INFO:PyCaret required dependencies:
2024-07-25 14:19:16,460:INFO:                 pip: 24.0
2024-07-25 14:19:16,460:INFO:          setuptools: 70.1.1
2024-07-25 14:19:16,460:INFO:             pycaret: 3.3.2
2024-07-25 14:19:16,460:INFO:             IPython: 8.18.1
2024-07-25 14:19:16,460:INFO:          ipywidgets: 8.1.3
2024-07-25 14:19:16,460:INFO:                tqdm: 4.66.4
2024-07-25 14:19:16,460:INFO:               numpy: 1.26.4
2024-07-25 14:19:16,460:INFO:              pandas: 2.1.4
2024-07-25 14:19:16,460:INFO:              jinja2: 3.1.4
2024-07-25 14:19:16,460:INFO:               scipy: 1.11.4
2024-07-25 14:19:16,460:INFO:              joblib: 1.3.2
2024-07-25 14:19:16,460:INFO:             sklearn: 1.4.2
2024-07-25 14:19:16,460:INFO:                pyod: 2.0.1
2024-07-25 14:19:16,460:INFO:            imblearn: 0.12.3
2024-07-25 14:19:16,460:INFO:   category_encoders: 2.6.3
2024-07-25 14:19:16,460:INFO:            lightgbm: 4.4.0
2024-07-25 14:19:16,460:INFO:               numba: 0.59.1
2024-07-25 14:19:16,460:INFO:            requests: 2.32.3
2024-07-25 14:19:16,460:INFO:          matplotlib: 3.7.2
2024-07-25 14:19:16,460:INFO:          scikitplot: 0.3.7
2024-07-25 14:19:16,461:INFO:         yellowbrick: 1.5
2024-07-25 14:19:16,461:INFO:              plotly: 5.22.0
2024-07-25 14:19:16,461:INFO:    plotly-resampler: Not installed
2024-07-25 14:19:16,461:INFO:             kaleido: 0.2.1
2024-07-25 14:19:16,461:INFO:           schemdraw: 0.15
2024-07-25 14:19:16,461:INFO:         statsmodels: 0.14.2
2024-07-25 14:19:16,461:INFO:              sktime: 0.26.0
2024-07-25 14:19:16,461:INFO:               tbats: 1.1.3
2024-07-25 14:19:16,461:INFO:            pmdarima: 2.0.4
2024-07-25 14:19:16,461:INFO:              psutil: 6.0.0
2024-07-25 14:19:16,461:INFO:          markupsafe: 2.1.5
2024-07-25 14:19:16,461:INFO:             pickle5: Not installed
2024-07-25 14:19:16,461:INFO:         cloudpickle: 3.0.0
2024-07-25 14:19:16,461:INFO:         deprecation: 2.1.0
2024-07-25 14:19:16,461:INFO:              xxhash: 3.4.1
2024-07-25 14:19:16,461:INFO:           wurlitzer: 3.1.1
2024-07-25 14:19:16,461:INFO:PyCaret optional dependencies:
2024-07-25 14:19:16,461:INFO:                shap: Not installed
2024-07-25 14:19:16,461:INFO:           interpret: Not installed
2024-07-25 14:19:16,461:INFO:                umap: 0.5.5
2024-07-25 14:19:16,461:INFO:     ydata_profiling: Not installed
2024-07-25 14:19:16,461:INFO:  explainerdashboard: Not installed
2024-07-25 14:19:16,461:INFO:             autoviz: Not installed
2024-07-25 14:19:16,461:INFO:           fairlearn: Not installed
2024-07-25 14:19:16,461:INFO:          deepchecks: Not installed
2024-07-25 14:19:16,461:INFO:             xgboost: Not installed
2024-07-25 14:19:16,461:INFO:            catboost: Not installed
2024-07-25 14:19:16,461:INFO:              kmodes: Not installed
2024-07-25 14:19:16,461:INFO:             mlxtend: Not installed
2024-07-25 14:19:16,461:INFO:       statsforecast: Not installed
2024-07-25 14:19:16,461:INFO:        tune_sklearn: Not installed
2024-07-25 14:19:16,461:INFO:                 ray: Not installed
2024-07-25 14:19:16,461:INFO:            hyperopt: Not installed
2024-07-25 14:19:16,461:INFO:              optuna: Not installed
2024-07-25 14:19:16,461:INFO:               skopt: Not installed
2024-07-25 14:19:16,461:INFO:              mlflow: 2.14.2
2024-07-25 14:19:16,461:INFO:              gradio: Not installed
2024-07-25 14:19:16,461:INFO:             fastapi: Not installed
2024-07-25 14:19:16,461:INFO:             uvicorn: Not installed
2024-07-25 14:19:16,461:INFO:              m2cgen: Not installed
2024-07-25 14:19:16,462:INFO:           evidently: Not installed
2024-07-25 14:19:16,462:INFO:               fugue: Not installed
2024-07-25 14:19:16,462:INFO:           streamlit: Not installed
2024-07-25 14:19:16,462:INFO:             prophet: Not installed
2024-07-25 14:19:16,462:INFO:None
2024-07-25 14:19:16,462:INFO:Set up data.
2024-07-25 14:19:16,472:INFO:Set up folding strategy.
2024-07-25 14:19:16,472:INFO:Set up train/test split.
2024-07-25 14:19:16,488:INFO:Set up index.
2024-07-25 14:19:16,488:INFO:Assigning column types.
2024-07-25 14:19:16,491:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-25 14:19:16,523:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 14:19:16,524:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:19:16,545:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:19:16,545:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:19:16,577:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 14:19:16,578:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:19:16,597:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:19:16,598:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:19:16,598:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-25 14:19:16,629:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:19:16,649:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:19:16,649:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:19:16,681:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:19:16,700:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:19:16,701:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:19:16,701:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-25 14:19:16,753:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:19:16,753:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:19:16,804:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:19:16,805:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:19:16,806:INFO:Preparing preprocessing pipeline...
2024-07-25 14:19:16,806:INFO:Set up label encoding.
2024-07-25 14:19:16,807:INFO:Set up simple imputation.
2024-07-25 14:19:16,811:INFO:Set up encoding of ordinal features.
2024-07-25 14:19:16,814:INFO:Set up encoding of categorical features.
2024-07-25 14:19:16,814:INFO:Set up imbalanced handling.
2024-07-25 14:19:16,815:INFO:Set up column name cleaning.
2024-07-25 14:19:17,152:INFO:Finished creating preprocessing pipeline.
2024-07-25 14:19:17,183:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 14:19:17,183:INFO:Creating final display dataframe.
2024-07-25 14:19:17,375:INFO:Setup _display_container:                     Description                    Value
0                    Session id                      123
1                        Target                    class
2                   Target type                   Binary
3                Target mapping  edible: 0, poisonous: 1
4           Original data shape               (8124, 23)
5        Transformed data shape              (8328, 111)
6   Transformed train set shape              (5890, 111)
7    Transformed test set shape              (2438, 111)
8          Categorical features                       22
9      Rows with missing values                     2.4%
10                   Preprocess                     True
11              Imputation type                   simple
12           Numeric imputation                     mean
13       Categorical imputation                     mode
14     Maximum one-hot encoding                       25
15              Encoding method                     None
16                Fix imbalance                     True
17         Fix imbalance method                    SMOTE
18               Fold Generator                    KFold
19                  Fold Number                       10
20                     CPU Jobs                       -1
21                      Use GPU                    False
22               Log Experiment             MlflowLogger
23              Experiment Name                 mushroom
24                          USI                     d9cf
2024-07-25 14:19:17,431:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:19:17,432:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:19:17,484:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:19:17,485:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:19:17,486:INFO:Logging experiment in loggers
2024-07-25 14:19:17,569:INFO:SubProcess save_model() called ==================================
2024-07-25 14:19:17,627:INFO:Initializing save_model()
2024-07-25 14:19:17,627:INFO:save_model(model=Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/tmp7nlty2c5/Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-07-25 14:19:17,627:INFO:Adding model into prep_pipe
2024-07-25 14:19:17,627:WARNING:Only Model saved as it was a pipeline.
2024-07-25 14:19:17,650:INFO:/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/tmp7nlty2c5/Transformation Pipeline.pkl saved in current working directory
2024-07-25 14:19:17,680:INFO:Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 14:19:17,680:INFO:save_model() successfully completed......................................
2024-07-25 14:19:17,774:INFO:SubProcess save_model() end ==================================
2024-07-25 14:19:17,806:INFO:setup() successfully completed in 1.03s...............
2024-07-25 14:19:22,814:INFO:Initializing compare_models()
2024-07-25 14:19:22,815:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x169dfde50>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x169dfde50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-25 14:19:22,815:INFO:Checking exceptions
2024-07-25 14:19:22,825:INFO:Preparing display monitor
2024-07-25 14:19:22,849:INFO:Initializing Logistic Regression
2024-07-25 14:19:22,849:INFO:Total runtime is 1.1217594146728515e-05 minutes
2024-07-25 14:19:22,852:INFO:SubProcess create_model() called ==================================
2024-07-25 14:19:22,853:INFO:Initializing create_model()
2024-07-25 14:19:22,853:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x169dfde50>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16769e280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:19:22,853:INFO:Checking exceptions
2024-07-25 14:19:22,853:INFO:Importing libraries
2024-07-25 14:19:22,854:INFO:Copying training dataset
2024-07-25 14:19:22,862:INFO:Defining folds
2024-07-25 14:19:22,862:INFO:Declaring metric variables
2024-07-25 14:19:22,864:INFO:Importing untrained model
2024-07-25 14:19:22,867:INFO:Logistic Regression Imported successfully
2024-07-25 14:19:22,872:INFO:Starting cross validation
2024-07-25 14:19:22,877:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:19:24,123:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,131:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,139:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,140:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,147:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,148:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,156:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,156:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,156:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,160:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,164:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,164:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,171:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,173:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,178:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,179:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,187:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,195:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,195:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,203:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,204:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,210:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,212:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,220:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,619:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,619:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,623:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,623:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,627:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,628:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:24,639:INFO:Calculating mean and std
2024-07-25 14:19:24,640:INFO:Creating metrics dataframe
2024-07-25 14:19:24,641:INFO:Uploading results into container
2024-07-25 14:19:24,642:INFO:Uploading model into container now
2024-07-25 14:19:24,642:INFO:_master_model_container: 1
2024-07-25 14:19:24,642:INFO:_display_container: 2
2024-07-25 14:19:24,643:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-25 14:19:24,643:INFO:create_model() successfully completed......................................
2024-07-25 14:19:24,719:INFO:SubProcess create_model() end ==================================
2024-07-25 14:19:24,719:INFO:Creating metrics dataframe
2024-07-25 14:19:24,723:INFO:Initializing K Neighbors Classifier
2024-07-25 14:19:24,723:INFO:Total runtime is 0.031243101755777995 minutes
2024-07-25 14:19:24,725:INFO:SubProcess create_model() called ==================================
2024-07-25 14:19:24,726:INFO:Initializing create_model()
2024-07-25 14:19:24,726:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x169dfde50>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16769e280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:19:24,726:INFO:Checking exceptions
2024-07-25 14:19:24,726:INFO:Importing libraries
2024-07-25 14:19:24,726:INFO:Copying training dataset
2024-07-25 14:19:24,730:INFO:Defining folds
2024-07-25 14:19:24,730:INFO:Declaring metric variables
2024-07-25 14:19:24,732:INFO:Importing untrained model
2024-07-25 14:19:24,734:INFO:K Neighbors Classifier Imported successfully
2024-07-25 14:19:24,738:INFO:Starting cross validation
2024-07-25 14:19:24,743:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:19:25,900:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:25,907:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:25,908:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:25,910:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:25,915:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:25,917:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:25,919:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:25,925:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:25,932:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:25,948:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:25,956:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:25,962:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:25,964:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:25,972:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:25,979:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:25,986:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:25,994:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:25,998:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:26,003:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:26,007:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:26,010:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:26,014:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:26,020:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:26,030:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:26,476:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:26,481:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:26,485:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:26,486:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:26,490:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:26,494:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:26,504:INFO:Calculating mean and std
2024-07-25 14:19:26,505:INFO:Creating metrics dataframe
2024-07-25 14:19:26,507:INFO:Uploading results into container
2024-07-25 14:19:26,507:INFO:Uploading model into container now
2024-07-25 14:19:26,507:INFO:_master_model_container: 2
2024-07-25 14:19:26,507:INFO:_display_container: 2
2024-07-25 14:19:26,508:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-25 14:19:26,508:INFO:create_model() successfully completed......................................
2024-07-25 14:19:26,580:INFO:SubProcess create_model() end ==================================
2024-07-25 14:19:26,580:INFO:Creating metrics dataframe
2024-07-25 14:19:26,585:INFO:Initializing Naive Bayes
2024-07-25 14:19:26,585:INFO:Total runtime is 0.06228026549021403 minutes
2024-07-25 14:19:26,588:INFO:SubProcess create_model() called ==================================
2024-07-25 14:19:26,588:INFO:Initializing create_model()
2024-07-25 14:19:26,588:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x169dfde50>, estimator=nb, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16769e280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:19:26,588:INFO:Checking exceptions
2024-07-25 14:19:26,588:INFO:Importing libraries
2024-07-25 14:19:26,588:INFO:Copying training dataset
2024-07-25 14:19:26,592:INFO:Defining folds
2024-07-25 14:19:26,592:INFO:Declaring metric variables
2024-07-25 14:19:26,594:INFO:Importing untrained model
2024-07-25 14:19:26,596:INFO:Naive Bayes Imported successfully
2024-07-25 14:19:26,601:INFO:Starting cross validation
2024-07-25 14:19:26,605:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:19:27,584:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:27,593:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:27,596:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:27,601:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:27,604:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:27,605:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:27,613:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:27,614:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:27,615:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:27,618:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:27,622:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:27,622:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:27,626:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:27,630:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:27,630:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:27,634:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:27,638:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:27,647:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:27,653:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:27,660:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:27,660:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:27,668:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:27,669:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:27,675:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:28,061:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:28,061:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:28,065:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:28,065:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:28,069:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:28,069:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:28,087:INFO:Calculating mean and std
2024-07-25 14:19:28,089:INFO:Creating metrics dataframe
2024-07-25 14:19:28,092:INFO:Uploading results into container
2024-07-25 14:19:28,093:INFO:Uploading model into container now
2024-07-25 14:19:28,094:INFO:_master_model_container: 3
2024-07-25 14:19:28,094:INFO:_display_container: 2
2024-07-25 14:19:28,094:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-25 14:19:28,094:INFO:create_model() successfully completed......................................
2024-07-25 14:19:28,186:INFO:SubProcess create_model() end ==================================
2024-07-25 14:19:28,186:INFO:Creating metrics dataframe
2024-07-25 14:19:28,191:INFO:Initializing Decision Tree Classifier
2024-07-25 14:19:28,191:INFO:Total runtime is 0.08904743591944377 minutes
2024-07-25 14:19:28,194:INFO:SubProcess create_model() called ==================================
2024-07-25 14:19:28,194:INFO:Initializing create_model()
2024-07-25 14:19:28,194:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x169dfde50>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16769e280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:19:28,194:INFO:Checking exceptions
2024-07-25 14:19:28,194:INFO:Importing libraries
2024-07-25 14:19:28,194:INFO:Copying training dataset
2024-07-25 14:19:28,199:INFO:Defining folds
2024-07-25 14:19:28,199:INFO:Declaring metric variables
2024-07-25 14:19:28,201:INFO:Importing untrained model
2024-07-25 14:19:28,204:INFO:Decision Tree Classifier Imported successfully
2024-07-25 14:19:28,208:INFO:Starting cross validation
2024-07-25 14:19:28,214:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:19:29,217:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,217:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,225:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,226:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,234:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,234:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,241:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,251:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,261:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,262:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,268:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,269:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,277:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,277:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,282:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,285:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,291:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,294:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,299:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,302:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,309:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,313:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,319:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,326:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,709:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,713:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,718:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,762:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,766:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,771:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:29,788:INFO:Calculating mean and std
2024-07-25 14:19:29,789:INFO:Creating metrics dataframe
2024-07-25 14:19:29,791:INFO:Uploading results into container
2024-07-25 14:19:29,791:INFO:Uploading model into container now
2024-07-25 14:19:29,792:INFO:_master_model_container: 4
2024-07-25 14:19:29,792:INFO:_display_container: 2
2024-07-25 14:19:29,792:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-07-25 14:19:29,792:INFO:create_model() successfully completed......................................
2024-07-25 14:19:29,884:INFO:SubProcess create_model() end ==================================
2024-07-25 14:19:29,884:INFO:Creating metrics dataframe
2024-07-25 14:19:29,889:INFO:Initializing SVM - Linear Kernel
2024-07-25 14:19:29,889:INFO:Total runtime is 0.11734344959259033 minutes
2024-07-25 14:19:29,891:INFO:SubProcess create_model() called ==================================
2024-07-25 14:19:29,891:INFO:Initializing create_model()
2024-07-25 14:19:29,892:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x169dfde50>, estimator=svm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16769e280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:19:29,892:INFO:Checking exceptions
2024-07-25 14:19:29,892:INFO:Importing libraries
2024-07-25 14:19:29,892:INFO:Copying training dataset
2024-07-25 14:19:29,896:INFO:Defining folds
2024-07-25 14:19:29,896:INFO:Declaring metric variables
2024-07-25 14:19:29,899:INFO:Importing untrained model
2024-07-25 14:19:29,902:INFO:SVM - Linear Kernel Imported successfully
2024-07-25 14:19:29,956:INFO:Starting cross validation
2024-07-25 14:19:29,965:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:19:31,016:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,027:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,031:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,035:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,039:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,046:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,048:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,055:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,068:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,069:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,077:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,086:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,091:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,101:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,109:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,110:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,113:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,117:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,121:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,125:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,129:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,134:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,142:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,150:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,526:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,528:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,531:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,532:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,535:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,536:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:31,548:INFO:Calculating mean and std
2024-07-25 14:19:31,549:INFO:Creating metrics dataframe
2024-07-25 14:19:31,550:INFO:Uploading results into container
2024-07-25 14:19:31,551:INFO:Uploading model into container now
2024-07-25 14:19:31,551:INFO:_master_model_container: 5
2024-07-25 14:19:31,551:INFO:_display_container: 2
2024-07-25 14:19:31,551:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-25 14:19:31,551:INFO:create_model() successfully completed......................................
2024-07-25 14:19:31,627:INFO:SubProcess create_model() end ==================================
2024-07-25 14:19:31,627:INFO:Creating metrics dataframe
2024-07-25 14:19:31,633:INFO:Initializing Ridge Classifier
2024-07-25 14:19:31,633:INFO:Total runtime is 0.14640645186106363 minutes
2024-07-25 14:19:31,635:INFO:SubProcess create_model() called ==================================
2024-07-25 14:19:31,635:INFO:Initializing create_model()
2024-07-25 14:19:31,635:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x169dfde50>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16769e280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:19:31,635:INFO:Checking exceptions
2024-07-25 14:19:31,635:INFO:Importing libraries
2024-07-25 14:19:31,636:INFO:Copying training dataset
2024-07-25 14:19:31,640:INFO:Defining folds
2024-07-25 14:19:31,640:INFO:Declaring metric variables
2024-07-25 14:19:31,642:INFO:Importing untrained model
2024-07-25 14:19:31,644:INFO:Ridge Classifier Imported successfully
2024-07-25 14:19:31,649:INFO:Starting cross validation
2024-07-25 14:19:31,654:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:19:32,617:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:32,626:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:32,634:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:32,634:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:32,641:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:32,642:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:32,649:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:32,650:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:32,653:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:32,661:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:32,662:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:32,662:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:32,663:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:32,669:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:32,670:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:32,671:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:32,679:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:32,680:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:32,685:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:32,688:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:32,693:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:32,696:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:32,701:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:32,704:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:33,098:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:33,102:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:33,106:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:33,107:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:33,112:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:33,116:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:33,127:INFO:Calculating mean and std
2024-07-25 14:19:33,128:INFO:Creating metrics dataframe
2024-07-25 14:19:33,130:INFO:Uploading results into container
2024-07-25 14:19:33,131:INFO:Uploading model into container now
2024-07-25 14:19:33,131:INFO:_master_model_container: 6
2024-07-25 14:19:33,131:INFO:_display_container: 2
2024-07-25 14:19:33,131:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-07-25 14:19:33,132:INFO:create_model() successfully completed......................................
2024-07-25 14:19:33,208:INFO:SubProcess create_model() end ==================================
2024-07-25 14:19:33,208:INFO:Creating metrics dataframe
2024-07-25 14:19:33,214:INFO:Initializing Random Forest Classifier
2024-07-25 14:19:33,214:INFO:Total runtime is 0.1727578004201253 minutes
2024-07-25 14:19:33,216:INFO:SubProcess create_model() called ==================================
2024-07-25 14:19:33,216:INFO:Initializing create_model()
2024-07-25 14:19:33,216:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x169dfde50>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16769e280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:19:33,216:INFO:Checking exceptions
2024-07-25 14:19:33,216:INFO:Importing libraries
2024-07-25 14:19:33,216:INFO:Copying training dataset
2024-07-25 14:19:33,221:INFO:Defining folds
2024-07-25 14:19:33,221:INFO:Declaring metric variables
2024-07-25 14:19:33,223:INFO:Importing untrained model
2024-07-25 14:19:33,225:INFO:Random Forest Classifier Imported successfully
2024-07-25 14:19:33,230:INFO:Starting cross validation
2024-07-25 14:19:33,234:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:19:34,772:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:34,779:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:34,780:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:34,788:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:34,789:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:34,790:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:34,798:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:34,800:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:34,801:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:34,807:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:34,809:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:34,809:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:34,816:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:34,815:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:34,819:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:34,823:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:34,826:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:34,833:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:34,848:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:34,856:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:34,864:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:35,091:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:35,098:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:35,104:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:35,636:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:35,642:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:35,647:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:35,653:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:35,659:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:35,664:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:35,679:INFO:Calculating mean and std
2024-07-25 14:19:35,680:INFO:Creating metrics dataframe
2024-07-25 14:19:35,682:INFO:Uploading results into container
2024-07-25 14:19:35,683:INFO:Uploading model into container now
2024-07-25 14:19:35,683:INFO:_master_model_container: 7
2024-07-25 14:19:35,684:INFO:_display_container: 2
2024-07-25 14:19:35,684:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-07-25 14:19:35,684:INFO:create_model() successfully completed......................................
2024-07-25 14:19:35,808:INFO:SubProcess create_model() end ==================================
2024-07-25 14:19:35,809:INFO:Creating metrics dataframe
2024-07-25 14:19:35,815:INFO:Initializing Quadratic Discriminant Analysis
2024-07-25 14:19:35,815:INFO:Total runtime is 0.21610854864120482 minutes
2024-07-25 14:19:35,818:INFO:SubProcess create_model() called ==================================
2024-07-25 14:19:35,818:INFO:Initializing create_model()
2024-07-25 14:19:35,818:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x169dfde50>, estimator=qda, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16769e280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:19:35,818:INFO:Checking exceptions
2024-07-25 14:19:35,818:INFO:Importing libraries
2024-07-25 14:19:35,818:INFO:Copying training dataset
2024-07-25 14:19:35,823:INFO:Defining folds
2024-07-25 14:19:35,823:INFO:Declaring metric variables
2024-07-25 14:19:35,826:INFO:Importing untrained model
2024-07-25 14:19:35,828:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-25 14:19:35,832:INFO:Starting cross validation
2024-07-25 14:19:35,836:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:19:36,789:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:19:36,925:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:19:36,947:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:19:36,956:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:19:36,989:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:19:37,009:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:19:37,016:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:19:37,052:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,061:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,069:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,086:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:19:37,115:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,126:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,136:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,137:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,146:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,147:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,154:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,157:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,168:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,181:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,187:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,190:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,195:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,196:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,200:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,204:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,206:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,213:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,252:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,261:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,268:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,573:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:19:37,597:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:19:37,647:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,651:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,655:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,670:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,674:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,678:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:37,695:INFO:Calculating mean and std
2024-07-25 14:19:37,697:INFO:Creating metrics dataframe
2024-07-25 14:19:37,698:INFO:Uploading results into container
2024-07-25 14:19:37,699:INFO:Uploading model into container now
2024-07-25 14:19:37,699:INFO:_master_model_container: 8
2024-07-25 14:19:37,699:INFO:_display_container: 2
2024-07-25 14:19:37,700:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-25 14:19:37,700:INFO:create_model() successfully completed......................................
2024-07-25 14:19:37,775:INFO:SubProcess create_model() end ==================================
2024-07-25 14:19:37,775:INFO:Creating metrics dataframe
2024-07-25 14:19:37,781:INFO:Initializing Ada Boost Classifier
2024-07-25 14:19:37,781:INFO:Total runtime is 0.2488783836364746 minutes
2024-07-25 14:19:37,783:INFO:SubProcess create_model() called ==================================
2024-07-25 14:19:37,783:INFO:Initializing create_model()
2024-07-25 14:19:37,783:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x169dfde50>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16769e280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:19:37,784:INFO:Checking exceptions
2024-07-25 14:19:37,784:INFO:Importing libraries
2024-07-25 14:19:37,784:INFO:Copying training dataset
2024-07-25 14:19:37,788:INFO:Defining folds
2024-07-25 14:19:37,788:INFO:Declaring metric variables
2024-07-25 14:19:37,790:INFO:Importing untrained model
2024-07-25 14:19:37,792:INFO:Ada Boost Classifier Imported successfully
2024-07-25 14:19:37,796:INFO:Starting cross validation
2024-07-25 14:19:37,800:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:19:38,625:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:19:38,688:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:19:38,709:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:19:38,719:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:19:38,746:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:19:38,752:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:19:38,837:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:19:38,839:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:19:39,490:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:39,500:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:39,510:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:39,557:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:39,562:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:39,566:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:39,570:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:39,575:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:39,580:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:39,580:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:39,590:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:39,595:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:39,599:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:39,600:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:39,605:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:39,607:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:39,612:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:39,617:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:39,657:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:39,665:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:39,673:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:39,679:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:39,686:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:39,693:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:39,970:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:19:39,997:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:19:40,352:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:40,356:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:40,360:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:40,370:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:40,374:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:40,379:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:40,392:INFO:Calculating mean and std
2024-07-25 14:19:40,393:INFO:Creating metrics dataframe
2024-07-25 14:19:40,394:INFO:Uploading results into container
2024-07-25 14:19:40,395:INFO:Uploading model into container now
2024-07-25 14:19:40,395:INFO:_master_model_container: 9
2024-07-25 14:19:40,395:INFO:_display_container: 2
2024-07-25 14:19:40,395:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-07-25 14:19:40,395:INFO:create_model() successfully completed......................................
2024-07-25 14:19:40,477:INFO:SubProcess create_model() end ==================================
2024-07-25 14:19:40,478:INFO:Creating metrics dataframe
2024-07-25 14:19:40,484:INFO:Initializing Gradient Boosting Classifier
2024-07-25 14:19:40,484:INFO:Total runtime is 0.29392651716868085 minutes
2024-07-25 14:19:40,486:INFO:SubProcess create_model() called ==================================
2024-07-25 14:19:40,486:INFO:Initializing create_model()
2024-07-25 14:19:40,486:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x169dfde50>, estimator=gbc, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16769e280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:19:40,486:INFO:Checking exceptions
2024-07-25 14:19:40,486:INFO:Importing libraries
2024-07-25 14:19:40,487:INFO:Copying training dataset
2024-07-25 14:19:40,491:INFO:Defining folds
2024-07-25 14:19:40,491:INFO:Declaring metric variables
2024-07-25 14:19:40,493:INFO:Importing untrained model
2024-07-25 14:19:40,495:INFO:Gradient Boosting Classifier Imported successfully
2024-07-25 14:19:40,500:INFO:Starting cross validation
2024-07-25 14:19:40,504:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:19:43,046:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:43,047:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:43,055:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:43,055:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:43,061:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:43,063:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:43,063:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:43,069:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:43,074:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:43,077:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:43,083:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:43,091:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:43,112:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:43,120:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:43,128:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:43,137:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:43,147:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:43,156:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:43,176:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:43,183:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:43,189:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:43,197:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:43,203:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:43,210:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:44,493:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:44,493:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:44,498:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:44,498:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:44,502:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:44,502:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:44,521:INFO:Calculating mean and std
2024-07-25 14:19:44,521:INFO:Creating metrics dataframe
2024-07-25 14:19:44,524:INFO:Uploading results into container
2024-07-25 14:19:44,524:INFO:Uploading model into container now
2024-07-25 14:19:44,525:INFO:_master_model_container: 10
2024-07-25 14:19:44,525:INFO:_display_container: 2
2024-07-25 14:19:44,525:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-25 14:19:44,525:INFO:create_model() successfully completed......................................
2024-07-25 14:19:44,627:INFO:SubProcess create_model() end ==================================
2024-07-25 14:19:44,627:INFO:Creating metrics dataframe
2024-07-25 14:19:44,634:INFO:Initializing Linear Discriminant Analysis
2024-07-25 14:19:44,634:INFO:Total runtime is 0.3630837877591451 minutes
2024-07-25 14:19:44,636:INFO:SubProcess create_model() called ==================================
2024-07-25 14:19:44,636:INFO:Initializing create_model()
2024-07-25 14:19:44,636:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x169dfde50>, estimator=lda, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16769e280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:19:44,636:INFO:Checking exceptions
2024-07-25 14:19:44,636:INFO:Importing libraries
2024-07-25 14:19:44,636:INFO:Copying training dataset
2024-07-25 14:19:44,641:INFO:Defining folds
2024-07-25 14:19:44,641:INFO:Declaring metric variables
2024-07-25 14:19:44,643:INFO:Importing untrained model
2024-07-25 14:19:44,645:INFO:Linear Discriminant Analysis Imported successfully
2024-07-25 14:19:44,649:INFO:Starting cross validation
2024-07-25 14:19:44,653:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:19:45,747:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:45,759:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:45,765:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:45,768:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:45,774:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:45,774:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:45,783:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:45,783:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:45,792:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:45,821:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:45,830:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:45,830:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:45,830:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:45,839:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:45,840:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:45,840:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:45,847:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:45,849:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:45,850:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:45,858:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:45,866:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:45,867:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:45,875:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:45,883:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:46,337:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:46,341:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:46,345:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:46,364:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/model_selection/_validation.py:547: FitFailedWarning: 
1 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/joblib/memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py", line 628, in fit
    self._solve_svd(X, y)
  File "/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py", line 522, in _solve_svd
    U, S, Vt = svd(X, full_matrices=False)
  File "/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/scipy/linalg/_decomp_svd.py", line 131, in svd
    raise LinAlgError("SVD did not converge")
numpy.linalg.LinAlgError: SVD did not converge

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2024-07-25 14:19:46,364:INFO:Calculating mean and std
2024-07-25 14:19:46,365:INFO:Creating metrics dataframe
2024-07-25 14:19:46,367:INFO:Uploading results into container
2024-07-25 14:19:46,367:INFO:Uploading model into container now
2024-07-25 14:19:46,367:INFO:_master_model_container: 11
2024-07-25 14:19:46,367:INFO:_display_container: 2
2024-07-25 14:19:46,368:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-25 14:19:46,368:INFO:create_model() successfully completed......................................
2024-07-25 14:19:46,442:INFO:SubProcess create_model() end ==================================
2024-07-25 14:19:46,442:INFO:Creating metrics dataframe
2024-07-25 14:19:46,449:INFO:Initializing Extra Trees Classifier
2024-07-25 14:19:46,449:INFO:Total runtime is 0.39333903392155967 minutes
2024-07-25 14:19:46,451:INFO:SubProcess create_model() called ==================================
2024-07-25 14:19:46,451:INFO:Initializing create_model()
2024-07-25 14:19:46,451:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x169dfde50>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16769e280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:19:46,451:INFO:Checking exceptions
2024-07-25 14:19:46,451:INFO:Importing libraries
2024-07-25 14:19:46,452:INFO:Copying training dataset
2024-07-25 14:19:46,456:INFO:Defining folds
2024-07-25 14:19:46,456:INFO:Declaring metric variables
2024-07-25 14:19:46,458:INFO:Importing untrained model
2024-07-25 14:19:46,460:INFO:Extra Trees Classifier Imported successfully
2024-07-25 14:19:46,463:INFO:Starting cross validation
2024-07-25 14:19:46,468:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:19:47,989:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:47,998:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,001:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,006:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,009:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,017:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,038:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,040:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,041:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,046:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,048:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,049:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,054:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,056:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,057:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,121:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,129:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,137:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,149:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,155:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,162:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,177:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,184:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,191:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,681:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,685:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,686:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,690:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,690:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,694:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:48,711:INFO:Calculating mean and std
2024-07-25 14:19:48,713:INFO:Creating metrics dataframe
2024-07-25 14:19:48,717:INFO:Uploading results into container
2024-07-25 14:19:48,718:INFO:Uploading model into container now
2024-07-25 14:19:48,718:INFO:_master_model_container: 12
2024-07-25 14:19:48,718:INFO:_display_container: 2
2024-07-25 14:19:48,719:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-07-25 14:19:48,719:INFO:create_model() successfully completed......................................
2024-07-25 14:19:48,799:INFO:SubProcess create_model() end ==================================
2024-07-25 14:19:48,799:INFO:Creating metrics dataframe
2024-07-25 14:19:48,806:INFO:Initializing Light Gradient Boosting Machine
2024-07-25 14:19:48,806:INFO:Total runtime is 0.4326273322105408 minutes
2024-07-25 14:19:48,808:INFO:SubProcess create_model() called ==================================
2024-07-25 14:19:48,809:INFO:Initializing create_model()
2024-07-25 14:19:48,809:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x169dfde50>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16769e280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:19:48,809:INFO:Checking exceptions
2024-07-25 14:19:48,809:INFO:Importing libraries
2024-07-25 14:19:48,809:INFO:Copying training dataset
2024-07-25 14:19:48,813:INFO:Defining folds
2024-07-25 14:19:48,813:INFO:Declaring metric variables
2024-07-25 14:19:48,816:INFO:Importing untrained model
2024-07-25 14:19:48,818:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-25 14:19:48,822:INFO:Starting cross validation
2024-07-25 14:19:48,826:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:19:52,443:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:52,447:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:52,462:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:52,494:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:52,499:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:52,503:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:52,509:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:52,514:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:52,514:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:52,519:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:52,519:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:52,520:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:52,525:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:52,531:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:52,531:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:52,532:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:52,536:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:52,536:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:52,537:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:52,540:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:52,541:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:52,621:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:52,626:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:52,630:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:53,571:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:53,576:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:53,581:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:53,608:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:53,612:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:53,616:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:53,628:INFO:Calculating mean and std
2024-07-25 14:19:53,629:INFO:Creating metrics dataframe
2024-07-25 14:19:53,631:INFO:Uploading results into container
2024-07-25 14:19:53,631:INFO:Uploading model into container now
2024-07-25 14:19:53,632:INFO:_master_model_container: 13
2024-07-25 14:19:53,632:INFO:_display_container: 2
2024-07-25 14:19:53,632:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-25 14:19:53,632:INFO:create_model() successfully completed......................................
2024-07-25 14:19:53,736:INFO:SubProcess create_model() end ==================================
2024-07-25 14:19:53,736:INFO:Creating metrics dataframe
2024-07-25 14:19:53,743:INFO:Initializing Dummy Classifier
2024-07-25 14:19:53,743:INFO:Total runtime is 0.514910900592804 minutes
2024-07-25 14:19:53,745:INFO:SubProcess create_model() called ==================================
2024-07-25 14:19:53,746:INFO:Initializing create_model()
2024-07-25 14:19:53,746:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x169dfde50>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16769e280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:19:53,746:INFO:Checking exceptions
2024-07-25 14:19:53,746:INFO:Importing libraries
2024-07-25 14:19:53,746:INFO:Copying training dataset
2024-07-25 14:19:53,751:INFO:Defining folds
2024-07-25 14:19:53,751:INFO:Declaring metric variables
2024-07-25 14:19:53,753:INFO:Importing untrained model
2024-07-25 14:19:53,755:INFO:Dummy Classifier Imported successfully
2024-07-25 14:19:53,759:INFO:Starting cross validation
2024-07-25 14:19:53,764:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:19:54,837:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:54,856:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:54,864:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:19:54,868:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:54,870:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:54,878:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:54,880:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:54,883:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:19:54,887:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:54,890:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:54,891:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:54,897:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:19:54,899:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:54,901:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:54,905:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:19:54,909:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:54,924:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:54,933:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:54,937:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:19:54,942:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:54,946:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:54,955:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:54,959:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:19:54,960:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:54,963:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:54,970:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:54,974:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:19:54,977:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:55,008:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:55,015:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:55,019:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:19:55,023:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:55,388:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:55,393:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:55,395:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:19:55,396:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:55,397:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:55,400:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:55,402:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:19:55,404:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:55,413:INFO:Calculating mean and std
2024-07-25 14:19:55,414:INFO:Creating metrics dataframe
2024-07-25 14:19:55,416:INFO:Uploading results into container
2024-07-25 14:19:55,417:INFO:Uploading model into container now
2024-07-25 14:19:55,417:INFO:_master_model_container: 14
2024-07-25 14:19:55,417:INFO:_display_container: 2
2024-07-25 14:19:55,418:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-07-25 14:19:55,418:INFO:create_model() successfully completed......................................
2024-07-25 14:19:55,498:INFO:SubProcess create_model() end ==================================
2024-07-25 14:19:55,499:INFO:Creating metrics dataframe
2024-07-25 14:19:55,507:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-25 14:19:55,512:INFO:Initializing create_model()
2024-07-25 14:19:55,512:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x169dfde50>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:19:55,512:INFO:Checking exceptions
2024-07-25 14:19:55,513:INFO:Importing libraries
2024-07-25 14:19:55,513:INFO:Copying training dataset
2024-07-25 14:19:55,517:INFO:Defining folds
2024-07-25 14:19:55,518:INFO:Declaring metric variables
2024-07-25 14:19:55,518:INFO:Importing untrained model
2024-07-25 14:19:55,518:INFO:Declaring custom model
2024-07-25 14:19:55,518:INFO:K Neighbors Classifier Imported successfully
2024-07-25 14:19:55,521:INFO:Cross validation set to False
2024-07-25 14:19:55,521:INFO:Fitting Model
2024-07-25 14:19:55,835:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-25 14:19:55,835:INFO:create_model() successfully completed......................................
2024-07-25 14:19:55,911:INFO:Creating Dashboard logs
2024-07-25 14:19:55,914:INFO:Model: K Neighbors Classifier
2024-07-25 14:19:55,953:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-07-25 14:19:56,081:INFO:Initializing predict_model()
2024-07-25 14:19:56,081:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x169dfde50>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x169d63ee0>)
2024-07-25 14:19:56,081:INFO:Checking exceptions
2024-07-25 14:19:56,081:INFO:Preloading libraries
2024-07-25 14:19:56,317:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:56,333:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:56,348:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:19:56,566:INFO:Creating Dashboard logs
2024-07-25 14:19:56,569:INFO:Model: Random Forest Classifier
2024-07-25 14:19:56,585:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-07-25 14:19:56,789:INFO:Creating Dashboard logs
2024-07-25 14:19:56,791:INFO:Model: Quadratic Discriminant Analysis
2024-07-25 14:19:56,809:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2024-07-25 14:19:57,023:INFO:Creating Dashboard logs
2024-07-25 14:19:57,025:INFO:Model: Extra Trees Classifier
2024-07-25 14:19:57,043:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-07-25 14:19:57,254:INFO:Creating Dashboard logs
2024-07-25 14:19:57,257:INFO:Model: Light Gradient Boosting Machine
2024-07-25 14:19:57,274:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-07-25 14:19:57,485:INFO:Creating Dashboard logs
2024-07-25 14:19:57,487:INFO:Model: Decision Tree Classifier
2024-07-25 14:19:57,504:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 123, 'splitter': 'best'}
2024-07-25 14:19:57,716:INFO:Creating Dashboard logs
2024-07-25 14:19:57,718:INFO:Model: SVM - Linear Kernel
2024-07-25 14:19:57,735:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 123, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-07-25 14:19:57,932:INFO:Creating Dashboard logs
2024-07-25 14:19:57,934:INFO:Model: Ada Boost Classifier
2024-07-25 14:19:57,951:INFO:Logged params: {'algorithm': 'SAMME.R', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 123}
2024-07-25 14:19:58,146:INFO:Creating Dashboard logs
2024-07-25 14:19:58,148:INFO:Model: Ridge Classifier
2024-07-25 14:19:58,165:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 123, 'solver': 'auto', 'tol': 0.0001}
2024-07-25 14:19:58,360:INFO:Creating Dashboard logs
2024-07-25 14:19:58,362:INFO:Model: Gradient Boosting Classifier
2024-07-25 14:19:58,379:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-07-25 14:19:58,587:INFO:Creating Dashboard logs
2024-07-25 14:19:58,590:INFO:Model: Logistic Regression
2024-07-25 14:19:58,607:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-07-25 14:19:58,805:INFO:Creating Dashboard logs
2024-07-25 14:19:58,807:INFO:Model: Naive Bayes
2024-07-25 14:19:58,823:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2024-07-25 14:19:59,018:INFO:Creating Dashboard logs
2024-07-25 14:19:59,020:INFO:Model: Linear Discriminant Analysis
2024-07-25 14:19:59,038:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2024-07-25 14:19:59,235:INFO:Creating Dashboard logs
2024-07-25 14:19:59,237:INFO:Model: Dummy Classifier
2024-07-25 14:19:59,254:INFO:Logged params: {'constant': None, 'random_state': 123, 'strategy': 'prior'}
2024-07-25 14:19:59,454:INFO:_master_model_container: 14
2024-07-25 14:19:59,454:INFO:_display_container: 2
2024-07-25 14:19:59,454:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-25 14:19:59,454:INFO:compare_models() successfully completed......................................
2024-07-25 14:22:15,571:INFO:PyCaret ClassificationExperiment
2024-07-25 14:22:15,572:INFO:Logging name: mushroom2
2024-07-25 14:22:15,572:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-25 14:22:15,572:INFO:version 3.3.2
2024-07-25 14:22:15,572:INFO:Initializing setup()
2024-07-25 14:22:15,572:INFO:self.USI: f9b4
2024-07-25 14:22:15,572:INFO:self._variable_keys: {'X_test', 'n_jobs_param', 'pipeline', 'idx', 'logging_param', 'X_train', 'seed', 'gpu_n_jobs_param', 'y_test', 'fold_shuffle_param', '_available_plots', 'data', 'memory', 'html_param', '_ml_usecase', 'exp_id', 'gpu_param', 'log_plots_param', 'fix_imbalance', 'exp_name_log', 'X', 'target_param', 'y_train', 'USI', 'fold_groups_param', 'is_multiclass', 'y', 'fold_generator'}
2024-07-25 14:22:15,572:INFO:Checking environment
2024-07-25 14:22:15,572:INFO:python_version: 3.9.19
2024-07-25 14:22:15,572:INFO:python_build: ('main', 'Mar 20 2024 12:55:20')
2024-07-25 14:22:15,572:INFO:machine: arm64
2024-07-25 14:22:15,572:INFO:platform: macOS-13.3.1-arm64-arm-64bit
2024-07-25 14:22:15,572:INFO:Memory: svmem(total=8589934592, available=1867120640, percent=78.3, used=3010314240, free=70320128, active=1809006592, inactive=1795440640, wired=1201307648)
2024-07-25 14:22:15,572:INFO:Physical Core: 8
2024-07-25 14:22:15,573:INFO:Logical Core: 8
2024-07-25 14:22:15,573:INFO:Checking libraries
2024-07-25 14:22:15,573:INFO:System:
2024-07-25 14:22:15,573:INFO:    python: 3.9.19 | packaged by conda-forge | (main, Mar 20 2024, 12:55:20)  [Clang 16.0.6 ]
2024-07-25 14:22:15,573:INFO:executable: /opt/anaconda3/envs/mlops/bin/python
2024-07-25 14:22:15,573:INFO:   machine: macOS-13.3.1-arm64-arm-64bit
2024-07-25 14:22:15,573:INFO:PyCaret required dependencies:
2024-07-25 14:22:15,573:INFO:                 pip: 24.0
2024-07-25 14:22:15,573:INFO:          setuptools: 70.1.1
2024-07-25 14:22:15,573:INFO:             pycaret: 3.3.2
2024-07-25 14:22:15,573:INFO:             IPython: 8.18.1
2024-07-25 14:22:15,573:INFO:          ipywidgets: 8.1.3
2024-07-25 14:22:15,573:INFO:                tqdm: 4.66.4
2024-07-25 14:22:15,573:INFO:               numpy: 1.26.4
2024-07-25 14:22:15,574:INFO:              pandas: 2.1.4
2024-07-25 14:22:15,574:INFO:              jinja2: 3.1.4
2024-07-25 14:22:15,574:INFO:               scipy: 1.11.4
2024-07-25 14:22:15,574:INFO:              joblib: 1.3.2
2024-07-25 14:22:15,574:INFO:             sklearn: 1.4.2
2024-07-25 14:22:15,574:INFO:                pyod: 2.0.1
2024-07-25 14:22:15,574:INFO:            imblearn: 0.12.3
2024-07-25 14:22:15,574:INFO:   category_encoders: 2.6.3
2024-07-25 14:22:15,574:INFO:            lightgbm: 4.4.0
2024-07-25 14:22:15,574:INFO:               numba: 0.59.1
2024-07-25 14:22:15,574:INFO:            requests: 2.32.3
2024-07-25 14:22:15,574:INFO:          matplotlib: 3.7.2
2024-07-25 14:22:15,574:INFO:          scikitplot: 0.3.7
2024-07-25 14:22:15,574:INFO:         yellowbrick: 1.5
2024-07-25 14:22:15,574:INFO:              plotly: 5.22.0
2024-07-25 14:22:15,574:INFO:    plotly-resampler: Not installed
2024-07-25 14:22:15,574:INFO:             kaleido: 0.2.1
2024-07-25 14:22:15,574:INFO:           schemdraw: 0.15
2024-07-25 14:22:15,574:INFO:         statsmodels: 0.14.2
2024-07-25 14:22:15,574:INFO:              sktime: 0.26.0
2024-07-25 14:22:15,574:INFO:               tbats: 1.1.3
2024-07-25 14:22:15,574:INFO:            pmdarima: 2.0.4
2024-07-25 14:22:15,574:INFO:              psutil: 6.0.0
2024-07-25 14:22:15,574:INFO:          markupsafe: 2.1.5
2024-07-25 14:22:15,574:INFO:             pickle5: Not installed
2024-07-25 14:22:15,574:INFO:         cloudpickle: 3.0.0
2024-07-25 14:22:15,574:INFO:         deprecation: 2.1.0
2024-07-25 14:22:15,574:INFO:              xxhash: 3.4.1
2024-07-25 14:22:15,574:INFO:           wurlitzer: 3.1.1
2024-07-25 14:22:15,574:INFO:PyCaret optional dependencies:
2024-07-25 14:22:15,574:INFO:                shap: Not installed
2024-07-25 14:22:15,574:INFO:           interpret: Not installed
2024-07-25 14:22:15,574:INFO:                umap: 0.5.5
2024-07-25 14:22:15,574:INFO:     ydata_profiling: Not installed
2024-07-25 14:22:15,574:INFO:  explainerdashboard: Not installed
2024-07-25 14:22:15,574:INFO:             autoviz: Not installed
2024-07-25 14:22:15,574:INFO:           fairlearn: Not installed
2024-07-25 14:22:15,574:INFO:          deepchecks: Not installed
2024-07-25 14:22:15,574:INFO:             xgboost: Not installed
2024-07-25 14:22:15,575:INFO:            catboost: Not installed
2024-07-25 14:22:15,575:INFO:              kmodes: Not installed
2024-07-25 14:22:15,575:INFO:             mlxtend: Not installed
2024-07-25 14:22:15,575:INFO:       statsforecast: Not installed
2024-07-25 14:22:15,575:INFO:        tune_sklearn: Not installed
2024-07-25 14:22:15,575:INFO:                 ray: Not installed
2024-07-25 14:22:15,575:INFO:            hyperopt: Not installed
2024-07-25 14:22:15,575:INFO:              optuna: Not installed
2024-07-25 14:22:15,575:INFO:               skopt: Not installed
2024-07-25 14:22:15,575:INFO:              mlflow: 2.14.2
2024-07-25 14:22:15,575:INFO:              gradio: Not installed
2024-07-25 14:22:15,575:INFO:             fastapi: Not installed
2024-07-25 14:22:15,575:INFO:             uvicorn: Not installed
2024-07-25 14:22:15,575:INFO:              m2cgen: Not installed
2024-07-25 14:22:15,575:INFO:           evidently: Not installed
2024-07-25 14:22:15,575:INFO:               fugue: Not installed
2024-07-25 14:22:15,575:INFO:           streamlit: Not installed
2024-07-25 14:22:15,575:INFO:             prophet: Not installed
2024-07-25 14:22:15,575:INFO:None
2024-07-25 14:22:15,575:INFO:Set up data.
2024-07-25 14:22:15,586:INFO:Set up folding strategy.
2024-07-25 14:22:15,586:INFO:Set up train/test split.
2024-07-25 14:22:15,597:INFO:Set up index.
2024-07-25 14:22:15,598:INFO:Assigning column types.
2024-07-25 14:22:15,600:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-25 14:22:15,632:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 14:22:15,633:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:22:15,654:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:22:15,654:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:22:15,686:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 14:22:15,687:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:22:15,706:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:22:15,706:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:22:15,707:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-25 14:22:15,738:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:22:15,758:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:22:15,758:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:22:15,790:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:22:15,810:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:22:15,810:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:22:15,810:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-25 14:22:15,862:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:22:15,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:22:15,915:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:22:15,915:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:22:15,916:INFO:Preparing preprocessing pipeline...
2024-07-25 14:22:15,917:INFO:Set up label encoding.
2024-07-25 14:22:15,917:INFO:Set up simple imputation.
2024-07-25 14:22:15,921:INFO:Set up encoding of ordinal features.
2024-07-25 14:22:15,924:INFO:Set up encoding of categorical features.
2024-07-25 14:22:15,925:INFO:Set up column name cleaning.
2024-07-25 14:22:16,182:INFO:Finished creating preprocessing pipeline.
2024-07-25 14:22:16,211:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                                    'veil-type',
                                                                    'veil-color',
                                                                    'ring-number',
                                                                    'ring-type',
                                                                    'spore-print-color',
                                                                    'population',
                                                                    'habitat'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 14:22:16,211:INFO:Creating final display dataframe.
2024-07-25 14:22:16,833:INFO:Setup _display_container:                     Description                    Value
0                    Session id                      123
1                        Target                    class
2                   Target type                   Binary
3                Target mapping  edible: 0, poisonous: 1
4           Original data shape               (8124, 23)
5        Transformed data shape              (8124, 111)
6   Transformed train set shape              (5686, 111)
7    Transformed test set shape              (2438, 111)
8          Categorical features                       22
9      Rows with missing values                     2.4%
10                   Preprocess                     True
11              Imputation type                   simple
12           Numeric imputation                     mean
13       Categorical imputation                     mode
14     Maximum one-hot encoding                       25
15              Encoding method                     None
16               Fold Generator                    KFold
17                  Fold Number                       10
18                     CPU Jobs                       -1
19                      Use GPU                    False
20               Log Experiment             MlflowLogger
21              Experiment Name                mushroom2
22                          USI                     f9b4
2024-07-25 14:22:16,891:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:22:16,891:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:22:16,944:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:22:16,945:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:22:16,946:INFO:Logging experiment in loggers
2024-07-25 14:22:17,036:INFO:SubProcess save_model() called ==================================
2024-07-25 14:22:17,092:INFO:Initializing save_model()
2024-07-25 14:22:17,092:INFO:save_model(model=Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                                    'veil-type',
                                                                    'veil-color',
                                                                    'ring-number',
                                                                    'ring-type',
                                                                    'spore-print-color',
                                                                    'population',
                                                                    'habitat'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/tmpi67mvuwu/Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                                    'veil-type',
                                                                    'veil-color',
                                                                    'ring-number',
                                                                    'ring-type',
                                                                    'spore-print-color',
                                                                    'population',
                                                                    'habitat'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-07-25 14:22:17,092:INFO:Adding model into prep_pipe
2024-07-25 14:22:17,092:WARNING:Only Model saved as it was a pipeline.
2024-07-25 14:22:17,114:INFO:/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/tmpi67mvuwu/Transformation Pipeline.pkl saved in current working directory
2024-07-25 14:22:17,142:INFO:Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                                    'veil-type',
                                                                    'veil-color',
                                                                    'ring-number',
                                                                    'ring-type',
                                                                    'spore-print-color',
                                                                    'population',
                                                                    'habitat'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 14:22:17,142:INFO:save_model() successfully completed......................................
2024-07-25 14:22:17,256:INFO:SubProcess save_model() end ==================================
2024-07-25 14:22:17,269:INFO:setup() successfully completed in 1.38s...............
2024-07-25 14:22:30,836:INFO:Initializing compare_models()
2024-07-25 14:22:30,836:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x167315100>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x167315100>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-25 14:22:30,836:INFO:Checking exceptions
2024-07-25 14:22:30,843:INFO:Preparing display monitor
2024-07-25 14:22:30,872:INFO:Initializing Logistic Regression
2024-07-25 14:22:30,872:INFO:Total runtime is 5.634625752766927e-06 minutes
2024-07-25 14:22:30,877:INFO:SubProcess create_model() called ==================================
2024-07-25 14:22:30,877:INFO:Initializing create_model()
2024-07-25 14:22:30,877:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x167315100>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169221be0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:22:30,877:INFO:Checking exceptions
2024-07-25 14:22:30,878:INFO:Importing libraries
2024-07-25 14:22:30,878:INFO:Copying training dataset
2024-07-25 14:22:30,893:INFO:Defining folds
2024-07-25 14:22:30,893:INFO:Declaring metric variables
2024-07-25 14:22:30,897:INFO:Importing untrained model
2024-07-25 14:22:30,901:INFO:Logistic Regression Imported successfully
2024-07-25 14:22:30,908:INFO:Starting cross validation
2024-07-25 14:22:30,916:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:22:31,961:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:31,973:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:31,989:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:31,986:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:31,999:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:32,000:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:32,005:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:32,010:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:32,012:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:32,015:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:32,016:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:32,022:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:32,026:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:32,028:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:32,036:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:32,054:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:32,064:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:32,074:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:32,080:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:32,082:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:32,090:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:32,091:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:32,101:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:32,101:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:32,427:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:32,429:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:32,431:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:32,433:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:32,436:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:32,437:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:32,453:INFO:Calculating mean and std
2024-07-25 14:22:32,455:INFO:Creating metrics dataframe
2024-07-25 14:22:32,456:INFO:Uploading results into container
2024-07-25 14:22:32,456:INFO:Uploading model into container now
2024-07-25 14:22:32,456:INFO:_master_model_container: 1
2024-07-25 14:22:32,456:INFO:_display_container: 2
2024-07-25 14:22:32,457:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-25 14:22:32,457:INFO:create_model() successfully completed......................................
2024-07-25 14:22:32,534:INFO:SubProcess create_model() end ==================================
2024-07-25 14:22:32,534:INFO:Creating metrics dataframe
2024-07-25 14:22:32,539:INFO:Initializing K Neighbors Classifier
2024-07-25 14:22:32,540:INFO:Total runtime is 0.027798787752787272 minutes
2024-07-25 14:22:32,542:INFO:SubProcess create_model() called ==================================
2024-07-25 14:22:32,542:INFO:Initializing create_model()
2024-07-25 14:22:32,542:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x167315100>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169221be0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:22:32,542:INFO:Checking exceptions
2024-07-25 14:22:32,542:INFO:Importing libraries
2024-07-25 14:22:32,542:INFO:Copying training dataset
2024-07-25 14:22:32,546:INFO:Defining folds
2024-07-25 14:22:32,546:INFO:Declaring metric variables
2024-07-25 14:22:32,549:INFO:Importing untrained model
2024-07-25 14:22:32,552:INFO:K Neighbors Classifier Imported successfully
2024-07-25 14:22:32,556:INFO:Starting cross validation
2024-07-25 14:22:32,560:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:22:33,482:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:33,498:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:33,508:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:33,561:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:33,571:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:33,577:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:33,586:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:33,586:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:33,590:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:33,591:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:33,596:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:33,598:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:33,601:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:33,607:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:33,609:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:33,615:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:33,622:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:33,632:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:33,662:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:33,672:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:33,683:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:33,693:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:33,702:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:33,711:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:34,061:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:34,065:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:34,070:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:34,077:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:34,081:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:34,085:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:34,101:INFO:Calculating mean and std
2024-07-25 14:22:34,102:INFO:Creating metrics dataframe
2024-07-25 14:22:34,103:INFO:Uploading results into container
2024-07-25 14:22:34,103:INFO:Uploading model into container now
2024-07-25 14:22:34,104:INFO:_master_model_container: 2
2024-07-25 14:22:34,104:INFO:_display_container: 2
2024-07-25 14:22:34,104:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-25 14:22:34,104:INFO:create_model() successfully completed......................................
2024-07-25 14:22:34,180:INFO:SubProcess create_model() end ==================================
2024-07-25 14:22:34,180:INFO:Creating metrics dataframe
2024-07-25 14:22:34,185:INFO:Initializing Naive Bayes
2024-07-25 14:22:34,185:INFO:Total runtime is 0.05522490342458089 minutes
2024-07-25 14:22:34,187:INFO:SubProcess create_model() called ==================================
2024-07-25 14:22:34,188:INFO:Initializing create_model()
2024-07-25 14:22:34,188:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x167315100>, estimator=nb, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169221be0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:22:34,188:INFO:Checking exceptions
2024-07-25 14:22:34,188:INFO:Importing libraries
2024-07-25 14:22:34,188:INFO:Copying training dataset
2024-07-25 14:22:34,192:INFO:Defining folds
2024-07-25 14:22:34,192:INFO:Declaring metric variables
2024-07-25 14:22:34,194:INFO:Importing untrained model
2024-07-25 14:22:34,196:INFO:Naive Bayes Imported successfully
2024-07-25 14:22:34,201:INFO:Starting cross validation
2024-07-25 14:22:34,205:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:22:34,957:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:34,966:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:34,969:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:34,971:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:34,975:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:34,976:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:34,978:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:34,982:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:34,986:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:34,988:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:34,990:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:34,994:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:34,995:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:34,999:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:35,006:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:35,008:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:35,015:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:35,018:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:35,036:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:35,042:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:35,044:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:35,049:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:35,052:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:35,057:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:35,367:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:35,371:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:35,371:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:35,375:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:35,376:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:35,380:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:35,399:INFO:Calculating mean and std
2024-07-25 14:22:35,401:INFO:Creating metrics dataframe
2024-07-25 14:22:35,402:INFO:Uploading results into container
2024-07-25 14:22:35,403:INFO:Uploading model into container now
2024-07-25 14:22:35,403:INFO:_master_model_container: 3
2024-07-25 14:22:35,403:INFO:_display_container: 2
2024-07-25 14:22:35,403:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-25 14:22:35,403:INFO:create_model() successfully completed......................................
2024-07-25 14:22:35,481:INFO:SubProcess create_model() end ==================================
2024-07-25 14:22:35,481:INFO:Creating metrics dataframe
2024-07-25 14:22:35,486:INFO:Initializing Decision Tree Classifier
2024-07-25 14:22:35,487:INFO:Total runtime is 0.07691386540730794 minutes
2024-07-25 14:22:35,488:INFO:SubProcess create_model() called ==================================
2024-07-25 14:22:35,489:INFO:Initializing create_model()
2024-07-25 14:22:35,489:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x167315100>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169221be0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:22:35,489:INFO:Checking exceptions
2024-07-25 14:22:35,489:INFO:Importing libraries
2024-07-25 14:22:35,489:INFO:Copying training dataset
2024-07-25 14:22:35,493:INFO:Defining folds
2024-07-25 14:22:35,493:INFO:Declaring metric variables
2024-07-25 14:22:35,495:INFO:Importing untrained model
2024-07-25 14:22:35,497:INFO:Decision Tree Classifier Imported successfully
2024-07-25 14:22:35,501:INFO:Starting cross validation
2024-07-25 14:22:35,505:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:22:36,195:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,203:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,213:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,222:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,232:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,239:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,242:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,246:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,247:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,254:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,255:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,264:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,264:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,265:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,272:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,275:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,281:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,286:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,294:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,301:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,303:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,309:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,311:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,316:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,610:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,615:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,619:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,631:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,636:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,640:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:36,658:INFO:Calculating mean and std
2024-07-25 14:22:36,659:INFO:Creating metrics dataframe
2024-07-25 14:22:36,661:INFO:Uploading results into container
2024-07-25 14:22:36,661:INFO:Uploading model into container now
2024-07-25 14:22:36,662:INFO:_master_model_container: 4
2024-07-25 14:22:36,662:INFO:_display_container: 2
2024-07-25 14:22:36,662:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-07-25 14:22:36,662:INFO:create_model() successfully completed......................................
2024-07-25 14:22:36,749:INFO:SubProcess create_model() end ==================================
2024-07-25 14:22:36,749:INFO:Creating metrics dataframe
2024-07-25 14:22:36,755:INFO:Initializing SVM - Linear Kernel
2024-07-25 14:22:36,755:INFO:Total runtime is 0.09804948568344116 minutes
2024-07-25 14:22:36,757:INFO:SubProcess create_model() called ==================================
2024-07-25 14:22:36,757:INFO:Initializing create_model()
2024-07-25 14:22:36,757:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x167315100>, estimator=svm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169221be0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:22:36,757:INFO:Checking exceptions
2024-07-25 14:22:36,757:INFO:Importing libraries
2024-07-25 14:22:36,757:INFO:Copying training dataset
2024-07-25 14:22:36,762:INFO:Defining folds
2024-07-25 14:22:36,762:INFO:Declaring metric variables
2024-07-25 14:22:36,764:INFO:Importing untrained model
2024-07-25 14:22:36,766:INFO:SVM - Linear Kernel Imported successfully
2024-07-25 14:22:36,771:INFO:Starting cross validation
2024-07-25 14:22:36,775:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:22:37,475:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,484:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,487:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,494:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,498:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,507:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,508:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,511:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,513:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,519:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,521:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,523:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,528:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,529:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,531:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,533:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,536:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,547:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,555:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,560:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,566:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,569:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,574:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,577:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,881:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,885:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,889:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,891:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,895:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,899:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:37,913:INFO:Calculating mean and std
2024-07-25 14:22:37,914:INFO:Creating metrics dataframe
2024-07-25 14:22:37,916:INFO:Uploading results into container
2024-07-25 14:22:37,916:INFO:Uploading model into container now
2024-07-25 14:22:37,916:INFO:_master_model_container: 5
2024-07-25 14:22:37,916:INFO:_display_container: 2
2024-07-25 14:22:37,917:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-25 14:22:37,917:INFO:create_model() successfully completed......................................
2024-07-25 14:22:38,016:INFO:SubProcess create_model() end ==================================
2024-07-25 14:22:38,016:INFO:Creating metrics dataframe
2024-07-25 14:22:38,022:INFO:Initializing Ridge Classifier
2024-07-25 14:22:38,022:INFO:Total runtime is 0.11917280356089274 minutes
2024-07-25 14:22:38,024:INFO:SubProcess create_model() called ==================================
2024-07-25 14:22:38,025:INFO:Initializing create_model()
2024-07-25 14:22:38,025:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x167315100>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169221be0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:22:38,025:INFO:Checking exceptions
2024-07-25 14:22:38,025:INFO:Importing libraries
2024-07-25 14:22:38,025:INFO:Copying training dataset
2024-07-25 14:22:38,030:INFO:Defining folds
2024-07-25 14:22:38,030:INFO:Declaring metric variables
2024-07-25 14:22:38,032:INFO:Importing untrained model
2024-07-25 14:22:38,035:INFO:Ridge Classifier Imported successfully
2024-07-25 14:22:38,040:INFO:Starting cross validation
2024-07-25 14:22:38,044:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:22:38,866:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:38,872:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:38,875:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:38,878:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:38,881:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:38,881:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:38,885:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:38,886:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:38,891:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:38,891:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:38,897:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:38,900:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:38,910:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:38,920:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:38,929:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:38,952:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:38,958:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:38,960:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:38,964:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:38,967:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:38,968:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:38,972:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:38,974:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:38,980:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:39,281:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:39,281:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:39,285:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:39,285:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:39,289:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:39,289:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:39,300:INFO:Calculating mean and std
2024-07-25 14:22:39,300:INFO:Creating metrics dataframe
2024-07-25 14:22:39,302:INFO:Uploading results into container
2024-07-25 14:22:39,302:INFO:Uploading model into container now
2024-07-25 14:22:39,302:INFO:_master_model_container: 6
2024-07-25 14:22:39,303:INFO:_display_container: 2
2024-07-25 14:22:39,303:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-07-25 14:22:39,303:INFO:create_model() successfully completed......................................
2024-07-25 14:22:39,384:INFO:SubProcess create_model() end ==================================
2024-07-25 14:22:39,384:INFO:Creating metrics dataframe
2024-07-25 14:22:39,390:INFO:Initializing Random Forest Classifier
2024-07-25 14:22:39,390:INFO:Total runtime is 0.14197056690851848 minutes
2024-07-25 14:22:39,392:INFO:SubProcess create_model() called ==================================
2024-07-25 14:22:39,392:INFO:Initializing create_model()
2024-07-25 14:22:39,392:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x167315100>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169221be0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:22:39,392:INFO:Checking exceptions
2024-07-25 14:22:39,392:INFO:Importing libraries
2024-07-25 14:22:39,393:INFO:Copying training dataset
2024-07-25 14:22:39,397:INFO:Defining folds
2024-07-25 14:22:39,397:INFO:Declaring metric variables
2024-07-25 14:22:39,399:INFO:Importing untrained model
2024-07-25 14:22:39,401:INFO:Random Forest Classifier Imported successfully
2024-07-25 14:22:39,406:INFO:Starting cross validation
2024-07-25 14:22:39,410:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:22:40,618:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:40,627:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:40,631:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:40,635:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:40,639:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:40,647:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:40,677:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:40,685:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:40,693:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:40,704:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:40,713:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:40,716:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:40,724:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:40,726:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:40,730:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:40,734:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:40,738:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:40,746:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:40,871:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:40,877:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:40,882:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:40,882:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:40,888:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:40,893:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:41,269:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:41,272:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:41,274:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:41,276:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:41,278:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:41,280:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:41,290:INFO:Calculating mean and std
2024-07-25 14:22:41,290:INFO:Creating metrics dataframe
2024-07-25 14:22:41,292:INFO:Uploading results into container
2024-07-25 14:22:41,292:INFO:Uploading model into container now
2024-07-25 14:22:41,292:INFO:_master_model_container: 7
2024-07-25 14:22:41,292:INFO:_display_container: 2
2024-07-25 14:22:41,293:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-07-25 14:22:41,293:INFO:create_model() successfully completed......................................
2024-07-25 14:22:41,369:INFO:SubProcess create_model() end ==================================
2024-07-25 14:22:41,369:INFO:Creating metrics dataframe
2024-07-25 14:22:41,375:INFO:Initializing Quadratic Discriminant Analysis
2024-07-25 14:22:41,375:INFO:Total runtime is 0.1750602682431539 minutes
2024-07-25 14:22:41,377:INFO:SubProcess create_model() called ==================================
2024-07-25 14:22:41,378:INFO:Initializing create_model()
2024-07-25 14:22:41,378:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x167315100>, estimator=qda, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169221be0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:22:41,378:INFO:Checking exceptions
2024-07-25 14:22:41,378:INFO:Importing libraries
2024-07-25 14:22:41,378:INFO:Copying training dataset
2024-07-25 14:22:41,382:INFO:Defining folds
2024-07-25 14:22:41,382:INFO:Declaring metric variables
2024-07-25 14:22:41,384:INFO:Importing untrained model
2024-07-25 14:22:41,387:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-25 14:22:41,391:INFO:Starting cross validation
2024-07-25 14:22:41,395:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:22:42,075:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:22:42,100:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:22:42,166:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:22:42,177:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:22:42,191:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:22:42,195:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:22:42,220:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:22:42,257:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:22:42,273:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,283:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,294:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,311:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,327:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,343:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,390:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,403:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,405:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,405:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,412:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,414:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,415:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,415:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,421:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,426:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,428:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,429:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,439:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,441:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,448:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,455:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,464:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,474:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,710:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:22:42,737:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:22:42,782:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,786:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,791:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,808:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,813:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,817:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:42,829:INFO:Calculating mean and std
2024-07-25 14:22:42,830:INFO:Creating metrics dataframe
2024-07-25 14:22:42,832:INFO:Uploading results into container
2024-07-25 14:22:42,832:INFO:Uploading model into container now
2024-07-25 14:22:42,832:INFO:_master_model_container: 8
2024-07-25 14:22:42,833:INFO:_display_container: 2
2024-07-25 14:22:42,833:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-25 14:22:42,833:INFO:create_model() successfully completed......................................
2024-07-25 14:22:42,909:INFO:SubProcess create_model() end ==================================
2024-07-25 14:22:42,909:INFO:Creating metrics dataframe
2024-07-25 14:22:42,915:INFO:Initializing Ada Boost Classifier
2024-07-25 14:22:42,915:INFO:Total runtime is 0.20072678724924725 minutes
2024-07-25 14:22:42,917:INFO:SubProcess create_model() called ==================================
2024-07-25 14:22:42,918:INFO:Initializing create_model()
2024-07-25 14:22:42,918:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x167315100>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169221be0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:22:42,918:INFO:Checking exceptions
2024-07-25 14:22:42,918:INFO:Importing libraries
2024-07-25 14:22:42,918:INFO:Copying training dataset
2024-07-25 14:22:42,922:INFO:Defining folds
2024-07-25 14:22:42,922:INFO:Declaring metric variables
2024-07-25 14:22:42,924:INFO:Importing untrained model
2024-07-25 14:22:42,926:INFO:Ada Boost Classifier Imported successfully
2024-07-25 14:22:42,930:INFO:Starting cross validation
2024-07-25 14:22:42,933:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:22:43,424:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:22:43,494:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:22:43,500:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:22:43,538:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:22:43,551:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:22:43,587:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:22:43,587:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:22:43,611:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:22:44,400:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:44,411:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:44,422:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:44,440:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:44,447:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:44,452:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:44,462:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:44,463:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:44,470:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:44,473:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:44,481:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:44,492:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:44,498:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:44,507:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:44,515:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:44,516:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:44,523:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:44,524:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:44,533:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:44,534:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:44,539:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:44,541:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:44,547:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:44,555:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:44,847:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:22:44,871:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:22:45,277:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:45,281:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:45,285:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:45,296:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:45,300:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:45,304:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:45,313:INFO:Calculating mean and std
2024-07-25 14:22:45,315:INFO:Creating metrics dataframe
2024-07-25 14:22:45,319:INFO:Uploading results into container
2024-07-25 14:22:45,320:INFO:Uploading model into container now
2024-07-25 14:22:45,321:INFO:_master_model_container: 9
2024-07-25 14:22:45,321:INFO:_display_container: 2
2024-07-25 14:22:45,321:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-07-25 14:22:45,321:INFO:create_model() successfully completed......................................
2024-07-25 14:22:45,439:INFO:SubProcess create_model() end ==================================
2024-07-25 14:22:45,440:INFO:Creating metrics dataframe
2024-07-25 14:22:45,446:INFO:Initializing Gradient Boosting Classifier
2024-07-25 14:22:45,446:INFO:Total runtime is 0.24290486971537273 minutes
2024-07-25 14:22:45,448:INFO:SubProcess create_model() called ==================================
2024-07-25 14:22:45,448:INFO:Initializing create_model()
2024-07-25 14:22:45,448:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x167315100>, estimator=gbc, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169221be0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:22:45,448:INFO:Checking exceptions
2024-07-25 14:22:45,448:INFO:Importing libraries
2024-07-25 14:22:45,448:INFO:Copying training dataset
2024-07-25 14:22:45,453:INFO:Defining folds
2024-07-25 14:22:45,453:INFO:Declaring metric variables
2024-07-25 14:22:45,455:INFO:Importing untrained model
2024-07-25 14:22:45,458:INFO:Gradient Boosting Classifier Imported successfully
2024-07-25 14:22:45,461:INFO:Starting cross validation
2024-07-25 14:22:45,465:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:22:47,832:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:47,841:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:47,842:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:47,843:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:47,849:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:47,850:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:47,852:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:47,856:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:47,858:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:47,859:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:47,864:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:47,874:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:47,874:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:47,883:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:47,892:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:47,907:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:47,913:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:47,915:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:47,921:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:47,923:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:47,927:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:47,929:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:47,934:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:47,942:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:49,123:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:49,128:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:49,132:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:49,175:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:49,180:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:49,184:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:49,192:INFO:Calculating mean and std
2024-07-25 14:22:49,193:INFO:Creating metrics dataframe
2024-07-25 14:22:49,195:INFO:Uploading results into container
2024-07-25 14:22:49,195:INFO:Uploading model into container now
2024-07-25 14:22:49,195:INFO:_master_model_container: 10
2024-07-25 14:22:49,195:INFO:_display_container: 2
2024-07-25 14:22:49,196:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-25 14:22:49,196:INFO:create_model() successfully completed......................................
2024-07-25 14:22:49,272:INFO:SubProcess create_model() end ==================================
2024-07-25 14:22:49,273:INFO:Creating metrics dataframe
2024-07-25 14:22:49,279:INFO:Initializing Linear Discriminant Analysis
2024-07-25 14:22:49,279:INFO:Total runtime is 0.30679154793421426 minutes
2024-07-25 14:22:49,281:INFO:SubProcess create_model() called ==================================
2024-07-25 14:22:49,281:INFO:Initializing create_model()
2024-07-25 14:22:49,281:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x167315100>, estimator=lda, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169221be0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:22:49,281:INFO:Checking exceptions
2024-07-25 14:22:49,281:INFO:Importing libraries
2024-07-25 14:22:49,281:INFO:Copying training dataset
2024-07-25 14:22:49,286:INFO:Defining folds
2024-07-25 14:22:49,286:INFO:Declaring metric variables
2024-07-25 14:22:49,288:INFO:Importing untrained model
2024-07-25 14:22:49,290:INFO:Linear Discriminant Analysis Imported successfully
2024-07-25 14:22:49,293:INFO:Starting cross validation
2024-07-25 14:22:49,297:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:22:50,173:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,179:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,184:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,185:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,191:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,195:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,196:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,202:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,205:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,209:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,223:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,232:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,234:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,240:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,241:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,248:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,250:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,254:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,256:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,262:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,270:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,306:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,313:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,319:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,642:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,644:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,646:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,649:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,650:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,653:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:50,667:INFO:Calculating mean and std
2024-07-25 14:22:50,668:INFO:Creating metrics dataframe
2024-07-25 14:22:50,670:INFO:Uploading results into container
2024-07-25 14:22:50,670:INFO:Uploading model into container now
2024-07-25 14:22:50,671:INFO:_master_model_container: 11
2024-07-25 14:22:50,671:INFO:_display_container: 2
2024-07-25 14:22:50,671:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-25 14:22:50,671:INFO:create_model() successfully completed......................................
2024-07-25 14:22:50,748:INFO:SubProcess create_model() end ==================================
2024-07-25 14:22:50,748:INFO:Creating metrics dataframe
2024-07-25 14:22:50,754:INFO:Initializing Extra Trees Classifier
2024-07-25 14:22:50,754:INFO:Total runtime is 0.33138012091318764 minutes
2024-07-25 14:22:50,757:INFO:SubProcess create_model() called ==================================
2024-07-25 14:22:50,757:INFO:Initializing create_model()
2024-07-25 14:22:50,757:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x167315100>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169221be0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:22:50,757:INFO:Checking exceptions
2024-07-25 14:22:50,757:INFO:Importing libraries
2024-07-25 14:22:50,757:INFO:Copying training dataset
2024-07-25 14:22:50,761:INFO:Defining folds
2024-07-25 14:22:50,761:INFO:Declaring metric variables
2024-07-25 14:22:50,763:INFO:Importing untrained model
2024-07-25 14:22:50,765:INFO:Extra Trees Classifier Imported successfully
2024-07-25 14:22:50,769:INFO:Starting cross validation
2024-07-25 14:22:50,772:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:22:52,105:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,113:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,121:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,148:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,156:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,160:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,164:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,178:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,186:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,189:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,190:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,199:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,200:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,208:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,208:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,318:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,324:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,331:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,353:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,353:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,360:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,360:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,366:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,366:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,738:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,742:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,746:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,755:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,759:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,763:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:52,782:INFO:Calculating mean and std
2024-07-25 14:22:52,784:INFO:Creating metrics dataframe
2024-07-25 14:22:52,788:INFO:Uploading results into container
2024-07-25 14:22:52,788:INFO:Uploading model into container now
2024-07-25 14:22:52,789:INFO:_master_model_container: 12
2024-07-25 14:22:52,789:INFO:_display_container: 2
2024-07-25 14:22:52,790:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-07-25 14:22:52,790:INFO:create_model() successfully completed......................................
2024-07-25 14:22:52,876:INFO:SubProcess create_model() end ==================================
2024-07-25 14:22:52,876:INFO:Creating metrics dataframe
2024-07-25 14:22:52,883:INFO:Initializing Light Gradient Boosting Machine
2024-07-25 14:22:52,883:INFO:Total runtime is 0.36685711940129595 minutes
2024-07-25 14:22:52,885:INFO:SubProcess create_model() called ==================================
2024-07-25 14:22:52,885:INFO:Initializing create_model()
2024-07-25 14:22:52,885:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x167315100>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169221be0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:22:52,885:INFO:Checking exceptions
2024-07-25 14:22:52,886:INFO:Importing libraries
2024-07-25 14:22:52,886:INFO:Copying training dataset
2024-07-25 14:22:52,890:INFO:Defining folds
2024-07-25 14:22:52,890:INFO:Declaring metric variables
2024-07-25 14:22:52,892:INFO:Importing untrained model
2024-07-25 14:22:52,894:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-25 14:22:52,898:INFO:Starting cross validation
2024-07-25 14:22:52,902:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:22:55,835:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:55,841:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:55,849:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:56,057:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:56,072:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:56,090:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:56,091:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:56,096:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:56,103:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:56,133:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:56,133:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:56,142:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:56,142:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:56,150:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:56,155:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:56,166:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:56,176:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:56,186:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:56,271:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:56,272:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:56,282:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:56,283:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:56,297:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:56,299:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:57,228:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:57,232:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:57,236:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:57,241:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:57,246:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:57,250:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:57,260:INFO:Calculating mean and std
2024-07-25 14:22:57,261:INFO:Creating metrics dataframe
2024-07-25 14:22:57,262:INFO:Uploading results into container
2024-07-25 14:22:57,262:INFO:Uploading model into container now
2024-07-25 14:22:57,263:INFO:_master_model_container: 13
2024-07-25 14:22:57,263:INFO:_display_container: 2
2024-07-25 14:22:57,263:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-25 14:22:57,263:INFO:create_model() successfully completed......................................
2024-07-25 14:22:57,354:INFO:SubProcess create_model() end ==================================
2024-07-25 14:22:57,354:INFO:Creating metrics dataframe
2024-07-25 14:22:57,361:INFO:Initializing Dummy Classifier
2024-07-25 14:22:57,361:INFO:Total runtime is 0.44149181445439656 minutes
2024-07-25 14:22:57,363:INFO:SubProcess create_model() called ==================================
2024-07-25 14:22:57,364:INFO:Initializing create_model()
2024-07-25 14:22:57,364:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x167315100>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169221be0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:22:57,364:INFO:Checking exceptions
2024-07-25 14:22:57,364:INFO:Importing libraries
2024-07-25 14:22:57,364:INFO:Copying training dataset
2024-07-25 14:22:57,369:INFO:Defining folds
2024-07-25 14:22:57,369:INFO:Declaring metric variables
2024-07-25 14:22:57,371:INFO:Importing untrained model
2024-07-25 14:22:57,374:INFO:Dummy Classifier Imported successfully
2024-07-25 14:22:57,378:INFO:Starting cross validation
2024-07-25 14:22:57,383:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:22:58,111:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,120:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,124:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:22:58,130:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,158:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,165:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,168:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,174:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:22:58,175:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,180:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:22:58,182:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,182:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,185:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,186:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,192:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,196:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:22:58,197:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,200:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,200:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,202:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:22:58,205:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,208:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,209:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,214:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:22:58,215:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,219:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,221:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:22:58,225:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,256:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,264:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,268:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:22:58,272:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,566:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,570:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,573:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:22:58,575:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,581:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,585:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,587:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:22:58,589:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:58,603:INFO:Calculating mean and std
2024-07-25 14:22:58,604:INFO:Creating metrics dataframe
2024-07-25 14:22:58,605:INFO:Uploading results into container
2024-07-25 14:22:58,605:INFO:Uploading model into container now
2024-07-25 14:22:58,606:INFO:_master_model_container: 14
2024-07-25 14:22:58,606:INFO:_display_container: 2
2024-07-25 14:22:58,606:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-07-25 14:22:58,606:INFO:create_model() successfully completed......................................
2024-07-25 14:22:58,685:INFO:SubProcess create_model() end ==================================
2024-07-25 14:22:58,685:INFO:Creating metrics dataframe
2024-07-25 14:22:58,693:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-25 14:22:58,698:INFO:Initializing create_model()
2024-07-25 14:22:58,698:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x167315100>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:22:58,698:INFO:Checking exceptions
2024-07-25 14:22:58,699:INFO:Importing libraries
2024-07-25 14:22:58,699:INFO:Copying training dataset
2024-07-25 14:22:58,703:INFO:Defining folds
2024-07-25 14:22:58,704:INFO:Declaring metric variables
2024-07-25 14:22:58,704:INFO:Importing untrained model
2024-07-25 14:22:58,704:INFO:Declaring custom model
2024-07-25 14:22:58,704:INFO:K Neighbors Classifier Imported successfully
2024-07-25 14:22:58,707:INFO:Cross validation set to False
2024-07-25 14:22:58,707:INFO:Fitting Model
2024-07-25 14:22:58,957:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-25 14:22:58,957:INFO:create_model() successfully completed......................................
2024-07-25 14:22:59,036:INFO:Creating Dashboard logs
2024-07-25 14:22:59,038:INFO:Model: K Neighbors Classifier
2024-07-25 14:22:59,073:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-07-25 14:22:59,183:INFO:Initializing predict_model()
2024-07-25 14:22:59,183:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x167315100>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16a43e310>)
2024-07-25 14:22:59,183:INFO:Checking exceptions
2024-07-25 14:22:59,183:INFO:Preloading libraries
2024-07-25 14:22:59,418:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:59,434:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:59,449:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:22:59,668:INFO:Creating Dashboard logs
2024-07-25 14:22:59,671:INFO:Model: SVM - Linear Kernel
2024-07-25 14:22:59,687:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 123, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-07-25 14:22:59,883:INFO:Creating Dashboard logs
2024-07-25 14:22:59,885:INFO:Model: Random Forest Classifier
2024-07-25 14:22:59,903:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-07-25 14:23:00,110:INFO:Creating Dashboard logs
2024-07-25 14:23:00,112:INFO:Model: Quadratic Discriminant Analysis
2024-07-25 14:23:00,129:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2024-07-25 14:23:00,339:INFO:Creating Dashboard logs
2024-07-25 14:23:00,341:INFO:Model: Extra Trees Classifier
2024-07-25 14:23:00,360:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-07-25 14:23:00,571:INFO:Creating Dashboard logs
2024-07-25 14:23:00,573:INFO:Model: Light Gradient Boosting Machine
2024-07-25 14:23:00,590:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-07-25 14:23:00,787:INFO:Creating Dashboard logs
2024-07-25 14:23:00,789:INFO:Model: Decision Tree Classifier
2024-07-25 14:23:00,807:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 123, 'splitter': 'best'}
2024-07-25 14:23:01,002:INFO:Creating Dashboard logs
2024-07-25 14:23:01,004:INFO:Model: Ada Boost Classifier
2024-07-25 14:23:01,021:INFO:Logged params: {'algorithm': 'SAMME.R', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 123}
2024-07-25 14:23:01,213:INFO:Creating Dashboard logs
2024-07-25 14:23:01,215:INFO:Model: Ridge Classifier
2024-07-25 14:23:01,232:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 123, 'solver': 'auto', 'tol': 0.0001}
2024-07-25 14:23:01,425:INFO:Creating Dashboard logs
2024-07-25 14:23:01,428:INFO:Model: Gradient Boosting Classifier
2024-07-25 14:23:01,444:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-07-25 14:23:01,640:INFO:Creating Dashboard logs
2024-07-25 14:23:01,642:INFO:Model: Linear Discriminant Analysis
2024-07-25 14:23:01,659:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2024-07-25 14:23:01,851:INFO:Creating Dashboard logs
2024-07-25 14:23:01,854:INFO:Model: Logistic Regression
2024-07-25 14:23:01,870:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-07-25 14:23:02,066:INFO:Creating Dashboard logs
2024-07-25 14:23:02,068:INFO:Model: Naive Bayes
2024-07-25 14:23:02,084:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2024-07-25 14:23:02,276:INFO:Creating Dashboard logs
2024-07-25 14:23:02,279:INFO:Model: Dummy Classifier
2024-07-25 14:23:02,295:INFO:Logged params: {'constant': None, 'random_state': 123, 'strategy': 'prior'}
2024-07-25 14:23:02,498:INFO:_master_model_container: 14
2024-07-25 14:23:02,498:INFO:_display_container: 2
2024-07-25 14:23:02,498:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-25 14:23:02,498:INFO:compare_models() successfully completed......................................
2024-07-25 14:23:31,498:INFO:PyCaret ClassificationExperiment
2024-07-25 14:23:31,498:INFO:Logging name: mushroom3
2024-07-25 14:23:31,498:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-25 14:23:31,498:INFO:version 3.3.2
2024-07-25 14:23:31,498:INFO:Initializing setup()
2024-07-25 14:23:31,498:INFO:self.USI: 550a
2024-07-25 14:23:31,499:INFO:self._variable_keys: {'X_test', 'n_jobs_param', 'pipeline', 'idx', 'logging_param', 'X_train', 'seed', 'gpu_n_jobs_param', 'y_test', 'fold_shuffle_param', '_available_plots', 'data', 'memory', 'html_param', '_ml_usecase', 'exp_id', 'gpu_param', 'log_plots_param', 'fix_imbalance', 'exp_name_log', 'X', 'target_param', 'y_train', 'USI', 'fold_groups_param', 'is_multiclass', 'y', 'fold_generator'}
2024-07-25 14:23:31,499:INFO:Checking environment
2024-07-25 14:23:31,499:INFO:python_version: 3.9.19
2024-07-25 14:23:31,499:INFO:python_build: ('main', 'Mar 20 2024 12:55:20')
2024-07-25 14:23:31,499:INFO:machine: arm64
2024-07-25 14:23:31,499:INFO:platform: macOS-13.3.1-arm64-arm-64bit
2024-07-25 14:23:31,499:INFO:Memory: svmem(total=8589934592, available=1812365312, percent=78.9, used=3126542336, free=96960512, active=1734180864, inactive=1697726464, wired=1392361472)
2024-07-25 14:23:31,499:INFO:Physical Core: 8
2024-07-25 14:23:31,499:INFO:Logical Core: 8
2024-07-25 14:23:31,499:INFO:Checking libraries
2024-07-25 14:23:31,499:INFO:System:
2024-07-25 14:23:31,499:INFO:    python: 3.9.19 | packaged by conda-forge | (main, Mar 20 2024, 12:55:20)  [Clang 16.0.6 ]
2024-07-25 14:23:31,499:INFO:executable: /opt/anaconda3/envs/mlops/bin/python
2024-07-25 14:23:31,500:INFO:   machine: macOS-13.3.1-arm64-arm-64bit
2024-07-25 14:23:31,500:INFO:PyCaret required dependencies:
2024-07-25 14:23:31,500:INFO:                 pip: 24.0
2024-07-25 14:23:31,500:INFO:          setuptools: 70.1.1
2024-07-25 14:23:31,500:INFO:             pycaret: 3.3.2
2024-07-25 14:23:31,500:INFO:             IPython: 8.18.1
2024-07-25 14:23:31,500:INFO:          ipywidgets: 8.1.3
2024-07-25 14:23:31,500:INFO:                tqdm: 4.66.4
2024-07-25 14:23:31,500:INFO:               numpy: 1.26.4
2024-07-25 14:23:31,500:INFO:              pandas: 2.1.4
2024-07-25 14:23:31,500:INFO:              jinja2: 3.1.4
2024-07-25 14:23:31,500:INFO:               scipy: 1.11.4
2024-07-25 14:23:31,500:INFO:              joblib: 1.3.2
2024-07-25 14:23:31,500:INFO:             sklearn: 1.4.2
2024-07-25 14:23:31,501:INFO:                pyod: 2.0.1
2024-07-25 14:23:31,501:INFO:            imblearn: 0.12.3
2024-07-25 14:23:31,501:INFO:   category_encoders: 2.6.3
2024-07-25 14:23:31,501:INFO:            lightgbm: 4.4.0
2024-07-25 14:23:31,501:INFO:               numba: 0.59.1
2024-07-25 14:23:31,501:INFO:            requests: 2.32.3
2024-07-25 14:23:31,501:INFO:          matplotlib: 3.7.2
2024-07-25 14:23:31,501:INFO:          scikitplot: 0.3.7
2024-07-25 14:23:31,501:INFO:         yellowbrick: 1.5
2024-07-25 14:23:31,501:INFO:              plotly: 5.22.0
2024-07-25 14:23:31,501:INFO:    plotly-resampler: Not installed
2024-07-25 14:23:31,501:INFO:             kaleido: 0.2.1
2024-07-25 14:23:31,501:INFO:           schemdraw: 0.15
2024-07-25 14:23:31,501:INFO:         statsmodels: 0.14.2
2024-07-25 14:23:31,501:INFO:              sktime: 0.26.0
2024-07-25 14:23:31,501:INFO:               tbats: 1.1.3
2024-07-25 14:23:31,502:INFO:            pmdarima: 2.0.4
2024-07-25 14:23:31,502:INFO:              psutil: 6.0.0
2024-07-25 14:23:31,502:INFO:          markupsafe: 2.1.5
2024-07-25 14:23:31,502:INFO:             pickle5: Not installed
2024-07-25 14:23:31,502:INFO:         cloudpickle: 3.0.0
2024-07-25 14:23:31,502:INFO:         deprecation: 2.1.0
2024-07-25 14:23:31,502:INFO:              xxhash: 3.4.1
2024-07-25 14:23:31,502:INFO:           wurlitzer: 3.1.1
2024-07-25 14:23:31,502:INFO:PyCaret optional dependencies:
2024-07-25 14:23:31,502:INFO:                shap: Not installed
2024-07-25 14:23:31,502:INFO:           interpret: Not installed
2024-07-25 14:23:31,502:INFO:                umap: 0.5.5
2024-07-25 14:23:31,502:INFO:     ydata_profiling: Not installed
2024-07-25 14:23:31,502:INFO:  explainerdashboard: Not installed
2024-07-25 14:23:31,502:INFO:             autoviz: Not installed
2024-07-25 14:23:31,502:INFO:           fairlearn: Not installed
2024-07-25 14:23:31,503:INFO:          deepchecks: Not installed
2024-07-25 14:23:31,503:INFO:             xgboost: Not installed
2024-07-25 14:23:31,503:INFO:            catboost: Not installed
2024-07-25 14:23:31,503:INFO:              kmodes: Not installed
2024-07-25 14:23:31,503:INFO:             mlxtend: Not installed
2024-07-25 14:23:31,503:INFO:       statsforecast: Not installed
2024-07-25 14:23:31,503:INFO:        tune_sklearn: Not installed
2024-07-25 14:23:31,503:INFO:                 ray: Not installed
2024-07-25 14:23:31,503:INFO:            hyperopt: Not installed
2024-07-25 14:23:31,503:INFO:              optuna: Not installed
2024-07-25 14:23:31,503:INFO:               skopt: Not installed
2024-07-25 14:23:31,503:INFO:              mlflow: 2.14.2
2024-07-25 14:23:31,503:INFO:              gradio: Not installed
2024-07-25 14:23:31,503:INFO:             fastapi: Not installed
2024-07-25 14:23:31,503:INFO:             uvicorn: Not installed
2024-07-25 14:23:31,503:INFO:              m2cgen: Not installed
2024-07-25 14:23:31,503:INFO:           evidently: Not installed
2024-07-25 14:23:31,503:INFO:               fugue: Not installed
2024-07-25 14:23:31,503:INFO:           streamlit: Not installed
2024-07-25 14:23:31,503:INFO:             prophet: Not installed
2024-07-25 14:23:31,503:INFO:None
2024-07-25 14:23:31,503:INFO:Set up data.
2024-07-25 14:23:31,511:INFO:Set up folding strategy.
2024-07-25 14:23:31,511:INFO:Set up train/test split.
2024-07-25 14:23:31,523:INFO:Set up index.
2024-07-25 14:23:31,523:INFO:Assigning column types.
2024-07-25 14:23:31,526:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-25 14:23:31,559:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 14:23:31,560:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:23:31,581:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:23:31,581:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:23:31,613:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 14:23:31,613:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:23:31,633:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:23:31,633:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:23:31,634:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-25 14:23:31,665:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:23:31,685:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:23:31,685:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:23:31,717:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:23:31,737:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:23:31,737:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:23:31,737:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-25 14:23:31,789:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:23:31,789:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:23:31,841:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:23:31,841:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:23:31,842:INFO:Preparing preprocessing pipeline...
2024-07-25 14:23:31,843:INFO:Set up label encoding.
2024-07-25 14:23:31,843:INFO:Set up simple imputation.
2024-07-25 14:23:31,847:INFO:Set up encoding of ordinal features.
2024-07-25 14:23:31,850:INFO:Set up encoding of categorical features.
2024-07-25 14:23:31,850:INFO:Set up column name cleaning.
2024-07-25 14:23:32,112:INFO:Finished creating preprocessing pipeline.
2024-07-25 14:23:32,141:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                                    'veil-type',
                                                                    'veil-color',
                                                                    'ring-number',
                                                                    'ring-type',
                                                                    'spore-print-color',
                                                                    'population',
                                                                    'habitat'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 14:23:32,141:INFO:Creating final display dataframe.
2024-07-25 14:23:32,327:INFO:Setup _display_container:                     Description                    Value
0                    Session id                      123
1                        Target                    class
2                   Target type                   Binary
3                Target mapping  edible: 0, poisonous: 1
4           Original data shape               (8124, 23)
5        Transformed data shape              (8124, 111)
6   Transformed train set shape              (5686, 111)
7    Transformed test set shape              (2438, 111)
8          Categorical features                       22
9      Rows with missing values                     2.4%
10                   Preprocess                     True
11              Imputation type                   simple
12           Numeric imputation                     mean
13       Categorical imputation                     mode
14     Maximum one-hot encoding                       25
15              Encoding method                     None
16               Fold Generator                    KFold
17                  Fold Number                       10
18                     CPU Jobs                       -1
19                      Use GPU                    False
20               Log Experiment             MlflowLogger
21              Experiment Name                mushroom3
22                          USI                     550a
2024-07-25 14:23:32,384:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:23:32,384:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:23:32,437:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:23:32,437:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:23:32,438:INFO:Logging experiment in loggers
2024-07-25 14:23:32,507:INFO:SubProcess save_model() called ==================================
2024-07-25 14:23:32,563:INFO:Initializing save_model()
2024-07-25 14:23:32,563:INFO:save_model(model=Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                                    'veil-type',
                                                                    'veil-color',
                                                                    'ring-number',
                                                                    'ring-type',
                                                                    'spore-print-color',
                                                                    'population',
                                                                    'habitat'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/tmpgxakfn42/Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                                    'veil-type',
                                                                    'veil-color',
                                                                    'ring-number',
                                                                    'ring-type',
                                                                    'spore-print-color',
                                                                    'population',
                                                                    'habitat'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-07-25 14:23:32,563:INFO:Adding model into prep_pipe
2024-07-25 14:23:32,563:WARNING:Only Model saved as it was a pipeline.
2024-07-25 14:23:32,585:INFO:/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/tmpgxakfn42/Transformation Pipeline.pkl saved in current working directory
2024-07-25 14:23:32,613:INFO:Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                                    'veil-type',
                                                                    'veil-color',
                                                                    'ring-number',
                                                                    'ring-type',
                                                                    'spore-print-color',
                                                                    'population',
                                                                    'habitat'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 14:23:32,613:INFO:save_model() successfully completed......................................
2024-07-25 14:23:32,721:INFO:SubProcess save_model() end ==================================
2024-07-25 14:23:32,733:INFO:setup() successfully completed in 0.95s...............
2024-07-25 14:26:10,380:INFO:PyCaret ClassificationExperiment
2024-07-25 14:26:10,381:INFO:Logging name: mushroom
2024-07-25 14:26:10,381:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-25 14:26:10,381:INFO:version 3.3.2
2024-07-25 14:26:10,381:INFO:Initializing setup()
2024-07-25 14:26:10,381:INFO:self.USI: 0e88
2024-07-25 14:26:10,381:INFO:self._variable_keys: {'X_test', 'n_jobs_param', 'pipeline', 'idx', 'logging_param', 'X_train', 'seed', 'gpu_n_jobs_param', 'y_test', 'fold_shuffle_param', '_available_plots', 'data', 'memory', 'html_param', '_ml_usecase', 'exp_id', 'gpu_param', 'log_plots_param', 'fix_imbalance', 'exp_name_log', 'X', 'target_param', 'y_train', 'USI', 'fold_groups_param', 'is_multiclass', 'y', 'fold_generator'}
2024-07-25 14:26:10,381:INFO:Checking environment
2024-07-25 14:26:10,381:INFO:python_version: 3.9.19
2024-07-25 14:26:10,381:INFO:python_build: ('main', 'Mar 20 2024 12:55:20')
2024-07-25 14:26:10,382:INFO:machine: arm64
2024-07-25 14:26:10,382:INFO:platform: macOS-13.3.1-arm64-arm-64bit
2024-07-25 14:26:10,382:INFO:Memory: svmem(total=8589934592, available=2179153920, percent=74.6, used=3315630080, free=90734592, active=2117189632, inactive=2085797888, wired=1198440448)
2024-07-25 14:26:10,382:INFO:Physical Core: 8
2024-07-25 14:26:10,382:INFO:Logical Core: 8
2024-07-25 14:26:10,382:INFO:Checking libraries
2024-07-25 14:26:10,382:INFO:System:
2024-07-25 14:26:10,382:INFO:    python: 3.9.19 | packaged by conda-forge | (main, Mar 20 2024, 12:55:20)  [Clang 16.0.6 ]
2024-07-25 14:26:10,382:INFO:executable: /opt/anaconda3/envs/mlops/bin/python
2024-07-25 14:26:10,382:INFO:   machine: macOS-13.3.1-arm64-arm-64bit
2024-07-25 14:26:10,382:INFO:PyCaret required dependencies:
2024-07-25 14:26:10,383:INFO:                 pip: 24.0
2024-07-25 14:26:10,383:INFO:          setuptools: 70.1.1
2024-07-25 14:26:10,383:INFO:             pycaret: 3.3.2
2024-07-25 14:26:10,383:INFO:             IPython: 8.18.1
2024-07-25 14:26:10,383:INFO:          ipywidgets: 8.1.3
2024-07-25 14:26:10,383:INFO:                tqdm: 4.66.4
2024-07-25 14:26:10,383:INFO:               numpy: 1.26.4
2024-07-25 14:26:10,383:INFO:              pandas: 2.1.4
2024-07-25 14:26:10,383:INFO:              jinja2: 3.1.4
2024-07-25 14:26:10,383:INFO:               scipy: 1.11.4
2024-07-25 14:26:10,383:INFO:              joblib: 1.3.2
2024-07-25 14:26:10,383:INFO:             sklearn: 1.4.2
2024-07-25 14:26:10,383:INFO:                pyod: 2.0.1
2024-07-25 14:26:10,384:INFO:            imblearn: 0.12.3
2024-07-25 14:26:10,384:INFO:   category_encoders: 2.6.3
2024-07-25 14:26:10,384:INFO:            lightgbm: 4.4.0
2024-07-25 14:26:10,384:INFO:               numba: 0.59.1
2024-07-25 14:26:10,384:INFO:            requests: 2.32.3
2024-07-25 14:26:10,384:INFO:          matplotlib: 3.7.2
2024-07-25 14:26:10,384:INFO:          scikitplot: 0.3.7
2024-07-25 14:26:10,384:INFO:         yellowbrick: 1.5
2024-07-25 14:26:10,384:INFO:              plotly: 5.22.0
2024-07-25 14:26:10,384:INFO:    plotly-resampler: Not installed
2024-07-25 14:26:10,384:INFO:             kaleido: 0.2.1
2024-07-25 14:26:10,384:INFO:           schemdraw: 0.15
2024-07-25 14:26:10,384:INFO:         statsmodels: 0.14.2
2024-07-25 14:26:10,384:INFO:              sktime: 0.26.0
2024-07-25 14:26:10,385:INFO:               tbats: 1.1.3
2024-07-25 14:26:10,385:INFO:            pmdarima: 2.0.4
2024-07-25 14:26:10,385:INFO:              psutil: 6.0.0
2024-07-25 14:26:10,385:INFO:          markupsafe: 2.1.5
2024-07-25 14:26:10,385:INFO:             pickle5: Not installed
2024-07-25 14:26:10,385:INFO:         cloudpickle: 3.0.0
2024-07-25 14:26:10,385:INFO:         deprecation: 2.1.0
2024-07-25 14:26:10,385:INFO:              xxhash: 3.4.1
2024-07-25 14:26:10,385:INFO:           wurlitzer: 3.1.1
2024-07-25 14:26:10,385:INFO:PyCaret optional dependencies:
2024-07-25 14:26:10,385:INFO:                shap: Not installed
2024-07-25 14:26:10,385:INFO:           interpret: Not installed
2024-07-25 14:26:10,385:INFO:                umap: 0.5.5
2024-07-25 14:26:10,385:INFO:     ydata_profiling: Not installed
2024-07-25 14:26:10,385:INFO:  explainerdashboard: Not installed
2024-07-25 14:26:10,385:INFO:             autoviz: Not installed
2024-07-25 14:26:10,386:INFO:           fairlearn: Not installed
2024-07-25 14:26:10,386:INFO:          deepchecks: Not installed
2024-07-25 14:26:10,386:INFO:             xgboost: Not installed
2024-07-25 14:26:10,386:INFO:            catboost: Not installed
2024-07-25 14:26:10,386:INFO:              kmodes: Not installed
2024-07-25 14:26:10,386:INFO:             mlxtend: Not installed
2024-07-25 14:26:10,386:INFO:       statsforecast: Not installed
2024-07-25 14:26:10,386:INFO:        tune_sklearn: Not installed
2024-07-25 14:26:10,386:INFO:                 ray: Not installed
2024-07-25 14:26:10,386:INFO:            hyperopt: Not installed
2024-07-25 14:26:10,386:INFO:              optuna: Not installed
2024-07-25 14:26:10,386:INFO:               skopt: Not installed
2024-07-25 14:26:10,386:INFO:              mlflow: 2.14.2
2024-07-25 14:26:10,386:INFO:              gradio: Not installed
2024-07-25 14:26:10,386:INFO:             fastapi: Not installed
2024-07-25 14:26:10,386:INFO:             uvicorn: Not installed
2024-07-25 14:26:10,387:INFO:              m2cgen: Not installed
2024-07-25 14:26:10,387:INFO:           evidently: Not installed
2024-07-25 14:26:10,387:INFO:               fugue: Not installed
2024-07-25 14:26:10,387:INFO:           streamlit: Not installed
2024-07-25 14:26:10,387:INFO:             prophet: Not installed
2024-07-25 14:26:10,387:INFO:None
2024-07-25 14:26:10,387:INFO:Set up data.
2024-07-25 14:26:10,395:INFO:Set up folding strategy.
2024-07-25 14:26:10,396:INFO:Set up train/test split.
2024-07-25 14:26:10,407:INFO:Set up index.
2024-07-25 14:26:10,408:INFO:Assigning column types.
2024-07-25 14:26:10,410:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-25 14:26:10,445:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 14:26:10,445:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:26:10,465:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:10,465:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:10,497:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 14:26:10,497:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:26:10,518:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:10,518:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:10,518:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-25 14:26:10,550:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:26:10,569:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:10,569:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:10,601:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:26:10,621:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:10,621:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:10,621:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-25 14:26:10,672:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:10,672:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:10,724:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:10,724:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:10,725:INFO:Preparing preprocessing pipeline...
2024-07-25 14:26:10,725:INFO:Set up label encoding.
2024-07-25 14:26:10,725:INFO:Set up simple imputation.
2024-07-25 14:26:10,729:INFO:Set up encoding of ordinal features.
2024-07-25 14:26:10,733:INFO:Set up encoding of categorical features.
2024-07-25 14:26:10,733:INFO:Set up column name cleaning.
2024-07-25 14:26:10,991:INFO:Finished creating preprocessing pipeline.
2024-07-25 14:26:11,020:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                                    'veil-type',
                                                                    'veil-color',
                                                                    'ring-number',
                                                                    'ring-type',
                                                                    'spore-print-color',
                                                                    'population',
                                                                    'habitat'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 14:26:11,020:INFO:Creating final display dataframe.
2024-07-25 14:26:11,207:INFO:Setup _display_container:                     Description                    Value
0                    Session id                      123
1                        Target                    class
2                   Target type                   Binary
3                Target mapping  edible: 0, poisonous: 1
4           Original data shape               (8124, 23)
5        Transformed data shape              (8124, 111)
6   Transformed train set shape              (5686, 111)
7    Transformed test set shape              (2438, 111)
8          Categorical features                       22
9      Rows with missing values                     2.4%
10                   Preprocess                     True
11              Imputation type                   simple
12           Numeric imputation                     mean
13       Categorical imputation                     mode
14     Maximum one-hot encoding                       25
15              Encoding method                     None
16               Fold Generator                    KFold
17                  Fold Number                       10
18                     CPU Jobs                       -1
19                      Use GPU                    False
20               Log Experiment             MlflowLogger
21              Experiment Name                 mushroom
22                          USI                     0e88
2024-07-25 14:26:11,264:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:11,264:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:11,316:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:11,316:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:11,317:INFO:Logging experiment in loggers
2024-07-25 14:26:26,653:INFO:PyCaret ClassificationExperiment
2024-07-25 14:26:26,653:INFO:Logging name: mushroom2
2024-07-25 14:26:26,653:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-25 14:26:26,653:INFO:version 3.3.2
2024-07-25 14:26:26,653:INFO:Initializing setup()
2024-07-25 14:26:26,653:INFO:self.USI: 10a3
2024-07-25 14:26:26,653:INFO:self._variable_keys: {'X_test', 'n_jobs_param', 'pipeline', 'idx', 'logging_param', 'X_train', 'seed', 'gpu_n_jobs_param', 'y_test', 'fold_shuffle_param', '_available_plots', 'data', 'memory', 'html_param', '_ml_usecase', 'exp_id', 'gpu_param', 'log_plots_param', 'fix_imbalance', 'exp_name_log', 'X', 'target_param', 'y_train', 'USI', 'fold_groups_param', 'is_multiclass', 'y', 'fold_generator'}
2024-07-25 14:26:26,654:INFO:Checking environment
2024-07-25 14:26:26,654:INFO:python_version: 3.9.19
2024-07-25 14:26:26,654:INFO:python_build: ('main', 'Mar 20 2024 12:55:20')
2024-07-25 14:26:26,654:INFO:machine: arm64
2024-07-25 14:26:26,654:INFO:platform: macOS-13.3.1-arm64-arm-64bit
2024-07-25 14:26:26,654:INFO:Memory: svmem(total=8589934592, available=2172420096, percent=74.7, used=3331293184, free=98369536, active=2220638208, inactive=2070937600, wired=1110654976)
2024-07-25 14:26:26,654:INFO:Physical Core: 8
2024-07-25 14:26:26,654:INFO:Logical Core: 8
2024-07-25 14:26:26,654:INFO:Checking libraries
2024-07-25 14:26:26,654:INFO:System:
2024-07-25 14:26:26,654:INFO:    python: 3.9.19 | packaged by conda-forge | (main, Mar 20 2024, 12:55:20)  [Clang 16.0.6 ]
2024-07-25 14:26:26,654:INFO:executable: /opt/anaconda3/envs/mlops/bin/python
2024-07-25 14:26:26,655:INFO:   machine: macOS-13.3.1-arm64-arm-64bit
2024-07-25 14:26:26,655:INFO:PyCaret required dependencies:
2024-07-25 14:26:26,655:INFO:                 pip: 24.0
2024-07-25 14:26:26,655:INFO:          setuptools: 70.1.1
2024-07-25 14:26:26,655:INFO:             pycaret: 3.3.2
2024-07-25 14:26:26,655:INFO:             IPython: 8.18.1
2024-07-25 14:26:26,655:INFO:          ipywidgets: 8.1.3
2024-07-25 14:26:26,655:INFO:                tqdm: 4.66.4
2024-07-25 14:26:26,655:INFO:               numpy: 1.26.4
2024-07-25 14:26:26,655:INFO:              pandas: 2.1.4
2024-07-25 14:26:26,655:INFO:              jinja2: 3.1.4
2024-07-25 14:26:26,655:INFO:               scipy: 1.11.4
2024-07-25 14:26:26,656:INFO:              joblib: 1.3.2
2024-07-25 14:26:26,656:INFO:             sklearn: 1.4.2
2024-07-25 14:26:26,656:INFO:                pyod: 2.0.1
2024-07-25 14:26:26,656:INFO:            imblearn: 0.12.3
2024-07-25 14:26:26,656:INFO:   category_encoders: 2.6.3
2024-07-25 14:26:26,656:INFO:            lightgbm: 4.4.0
2024-07-25 14:26:26,656:INFO:               numba: 0.59.1
2024-07-25 14:26:26,656:INFO:            requests: 2.32.3
2024-07-25 14:26:26,656:INFO:          matplotlib: 3.7.2
2024-07-25 14:26:26,656:INFO:          scikitplot: 0.3.7
2024-07-25 14:26:26,656:INFO:         yellowbrick: 1.5
2024-07-25 14:26:26,656:INFO:              plotly: 5.22.0
2024-07-25 14:26:26,656:INFO:    plotly-resampler: Not installed
2024-07-25 14:26:26,656:INFO:             kaleido: 0.2.1
2024-07-25 14:26:26,656:INFO:           schemdraw: 0.15
2024-07-25 14:26:26,657:INFO:         statsmodels: 0.14.2
2024-07-25 14:26:26,657:INFO:              sktime: 0.26.0
2024-07-25 14:26:26,657:INFO:               tbats: 1.1.3
2024-07-25 14:26:26,657:INFO:            pmdarima: 2.0.4
2024-07-25 14:26:26,657:INFO:              psutil: 6.0.0
2024-07-25 14:26:26,657:INFO:          markupsafe: 2.1.5
2024-07-25 14:26:26,657:INFO:             pickle5: Not installed
2024-07-25 14:26:26,657:INFO:         cloudpickle: 3.0.0
2024-07-25 14:26:26,657:INFO:         deprecation: 2.1.0
2024-07-25 14:26:26,657:INFO:              xxhash: 3.4.1
2024-07-25 14:26:26,657:INFO:           wurlitzer: 3.1.1
2024-07-25 14:26:26,657:INFO:PyCaret optional dependencies:
2024-07-25 14:26:26,657:INFO:                shap: Not installed
2024-07-25 14:26:26,657:INFO:           interpret: Not installed
2024-07-25 14:26:26,657:INFO:                umap: 0.5.5
2024-07-25 14:26:26,657:INFO:     ydata_profiling: Not installed
2024-07-25 14:26:26,658:INFO:  explainerdashboard: Not installed
2024-07-25 14:26:26,658:INFO:             autoviz: Not installed
2024-07-25 14:26:26,658:INFO:           fairlearn: Not installed
2024-07-25 14:26:26,658:INFO:          deepchecks: Not installed
2024-07-25 14:26:26,658:INFO:             xgboost: Not installed
2024-07-25 14:26:26,658:INFO:            catboost: Not installed
2024-07-25 14:26:26,658:INFO:              kmodes: Not installed
2024-07-25 14:26:26,658:INFO:             mlxtend: Not installed
2024-07-25 14:26:26,658:INFO:       statsforecast: Not installed
2024-07-25 14:26:26,658:INFO:        tune_sklearn: Not installed
2024-07-25 14:26:26,658:INFO:                 ray: Not installed
2024-07-25 14:26:26,658:INFO:            hyperopt: Not installed
2024-07-25 14:26:26,658:INFO:              optuna: Not installed
2024-07-25 14:26:26,658:INFO:               skopt: Not installed
2024-07-25 14:26:26,658:INFO:              mlflow: 2.14.2
2024-07-25 14:26:26,658:INFO:              gradio: Not installed
2024-07-25 14:26:26,658:INFO:             fastapi: Not installed
2024-07-25 14:26:26,658:INFO:             uvicorn: Not installed
2024-07-25 14:26:26,659:INFO:              m2cgen: Not installed
2024-07-25 14:26:26,659:INFO:           evidently: Not installed
2024-07-25 14:26:26,659:INFO:               fugue: Not installed
2024-07-25 14:26:26,659:INFO:           streamlit: Not installed
2024-07-25 14:26:26,659:INFO:             prophet: Not installed
2024-07-25 14:26:26,659:INFO:None
2024-07-25 14:26:26,659:INFO:Set up data.
2024-07-25 14:26:26,667:INFO:Set up folding strategy.
2024-07-25 14:26:26,667:INFO:Set up train/test split.
2024-07-25 14:26:26,678:INFO:Set up index.
2024-07-25 14:26:26,678:INFO:Assigning column types.
2024-07-25 14:26:26,681:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-25 14:26:26,716:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 14:26:26,716:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:26:26,736:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:26,736:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:26,767:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 14:26:26,768:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:26:26,787:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:26,788:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:26,788:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-25 14:26:26,819:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:26:26,839:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:26,839:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:26,871:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:26:26,890:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:26,890:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:26,890:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-25 14:26:26,941:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:26,941:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:26,991:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:26,991:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:26,992:INFO:Preparing preprocessing pipeline...
2024-07-25 14:26:26,992:INFO:Set up label encoding.
2024-07-25 14:26:26,992:INFO:Set up simple imputation.
2024-07-25 14:26:26,997:INFO:Set up encoding of ordinal features.
2024-07-25 14:26:27,000:INFO:Set up encoding of categorical features.
2024-07-25 14:26:27,001:INFO:Set up column name cleaning.
2024-07-25 14:26:27,255:INFO:Finished creating preprocessing pipeline.
2024-07-25 14:26:27,283:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                                    'veil-type',
                                                                    'veil-color',
                                                                    'ring-number',
                                                                    'ring-type',
                                                                    'spore-print-color',
                                                                    'population',
                                                                    'habitat'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 14:26:27,283:INFO:Creating final display dataframe.
2024-07-25 14:26:27,464:INFO:Setup _display_container:                     Description                    Value
0                    Session id                      123
1                        Target                    class
2                   Target type                   Binary
3                Target mapping  edible: 0, poisonous: 1
4           Original data shape               (8124, 23)
5        Transformed data shape              (8124, 111)
6   Transformed train set shape              (5686, 111)
7    Transformed test set shape              (2438, 111)
8          Categorical features                       22
9      Rows with missing values                     2.4%
10                   Preprocess                     True
11              Imputation type                   simple
12           Numeric imputation                     mean
13       Categorical imputation                     mode
14     Maximum one-hot encoding                       25
15              Encoding method                     None
16               Fold Generator                    KFold
17                  Fold Number                       10
18                     CPU Jobs                       -1
19                      Use GPU                    False
20               Log Experiment             MlflowLogger
21              Experiment Name                mushroom2
22                          USI                     10a3
2024-07-25 14:26:27,519:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:27,519:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:27,570:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:27,571:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:27,571:INFO:Logging experiment in loggers
2024-07-25 14:26:33,076:INFO:PyCaret ClassificationExperiment
2024-07-25 14:26:33,076:INFO:Logging name: mushroom3
2024-07-25 14:26:33,076:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-25 14:26:33,076:INFO:version 3.3.2
2024-07-25 14:26:33,076:INFO:Initializing setup()
2024-07-25 14:26:33,076:INFO:self.USI: 99e7
2024-07-25 14:26:33,076:INFO:self._variable_keys: {'X_test', 'n_jobs_param', 'pipeline', 'idx', 'logging_param', 'X_train', 'seed', 'gpu_n_jobs_param', 'y_test', 'fold_shuffle_param', '_available_plots', 'data', 'memory', 'html_param', '_ml_usecase', 'exp_id', 'gpu_param', 'log_plots_param', 'fix_imbalance', 'exp_name_log', 'X', 'target_param', 'y_train', 'USI', 'fold_groups_param', 'is_multiclass', 'y', 'fold_generator'}
2024-07-25 14:26:33,076:INFO:Checking environment
2024-07-25 14:26:33,076:INFO:python_version: 3.9.19
2024-07-25 14:26:33,077:INFO:python_build: ('main', 'Mar 20 2024 12:55:20')
2024-07-25 14:26:33,077:INFO:machine: arm64
2024-07-25 14:26:33,077:INFO:platform: macOS-13.3.1-arm64-arm-64bit
2024-07-25 14:26:33,077:INFO:Memory: svmem(total=8589934592, available=2176663552, percent=74.7, used=3338141696, free=74088448, active=2122579968, inactive=2102280192, wired=1215561728)
2024-07-25 14:26:33,077:INFO:Physical Core: 8
2024-07-25 14:26:33,077:INFO:Logical Core: 8
2024-07-25 14:26:33,077:INFO:Checking libraries
2024-07-25 14:26:33,077:INFO:System:
2024-07-25 14:26:33,077:INFO:    python: 3.9.19 | packaged by conda-forge | (main, Mar 20 2024, 12:55:20)  [Clang 16.0.6 ]
2024-07-25 14:26:33,077:INFO:executable: /opt/anaconda3/envs/mlops/bin/python
2024-07-25 14:26:33,077:INFO:   machine: macOS-13.3.1-arm64-arm-64bit
2024-07-25 14:26:33,077:INFO:PyCaret required dependencies:
2024-07-25 14:26:33,078:INFO:                 pip: 24.0
2024-07-25 14:26:33,078:INFO:          setuptools: 70.1.1
2024-07-25 14:26:33,078:INFO:             pycaret: 3.3.2
2024-07-25 14:26:33,078:INFO:             IPython: 8.18.1
2024-07-25 14:26:33,078:INFO:          ipywidgets: 8.1.3
2024-07-25 14:26:33,078:INFO:                tqdm: 4.66.4
2024-07-25 14:26:33,078:INFO:               numpy: 1.26.4
2024-07-25 14:26:33,078:INFO:              pandas: 2.1.4
2024-07-25 14:26:33,078:INFO:              jinja2: 3.1.4
2024-07-25 14:26:33,078:INFO:               scipy: 1.11.4
2024-07-25 14:26:33,078:INFO:              joblib: 1.3.2
2024-07-25 14:26:33,078:INFO:             sklearn: 1.4.2
2024-07-25 14:26:33,079:INFO:                pyod: 2.0.1
2024-07-25 14:26:33,079:INFO:            imblearn: 0.12.3
2024-07-25 14:26:33,079:INFO:   category_encoders: 2.6.3
2024-07-25 14:26:33,079:INFO:            lightgbm: 4.4.0
2024-07-25 14:26:33,079:INFO:               numba: 0.59.1
2024-07-25 14:26:33,079:INFO:            requests: 2.32.3
2024-07-25 14:26:33,079:INFO:          matplotlib: 3.7.2
2024-07-25 14:26:33,079:INFO:          scikitplot: 0.3.7
2024-07-25 14:26:33,079:INFO:         yellowbrick: 1.5
2024-07-25 14:26:33,079:INFO:              plotly: 5.22.0
2024-07-25 14:26:33,079:INFO:    plotly-resampler: Not installed
2024-07-25 14:26:33,079:INFO:             kaleido: 0.2.1
2024-07-25 14:26:33,079:INFO:           schemdraw: 0.15
2024-07-25 14:26:33,079:INFO:         statsmodels: 0.14.2
2024-07-25 14:26:33,079:INFO:              sktime: 0.26.0
2024-07-25 14:26:33,080:INFO:               tbats: 1.1.3
2024-07-25 14:26:33,080:INFO:            pmdarima: 2.0.4
2024-07-25 14:26:33,080:INFO:              psutil: 6.0.0
2024-07-25 14:26:33,080:INFO:          markupsafe: 2.1.5
2024-07-25 14:26:33,080:INFO:             pickle5: Not installed
2024-07-25 14:26:33,080:INFO:         cloudpickle: 3.0.0
2024-07-25 14:26:33,080:INFO:         deprecation: 2.1.0
2024-07-25 14:26:33,080:INFO:              xxhash: 3.4.1
2024-07-25 14:26:33,080:INFO:           wurlitzer: 3.1.1
2024-07-25 14:26:33,080:INFO:PyCaret optional dependencies:
2024-07-25 14:26:33,080:INFO:                shap: Not installed
2024-07-25 14:26:33,080:INFO:           interpret: Not installed
2024-07-25 14:26:33,080:INFO:                umap: 0.5.5
2024-07-25 14:26:33,081:INFO:     ydata_profiling: Not installed
2024-07-25 14:26:33,081:INFO:  explainerdashboard: Not installed
2024-07-25 14:26:33,081:INFO:             autoviz: Not installed
2024-07-25 14:26:33,081:INFO:           fairlearn: Not installed
2024-07-25 14:26:33,081:INFO:          deepchecks: Not installed
2024-07-25 14:26:33,081:INFO:             xgboost: Not installed
2024-07-25 14:26:33,081:INFO:            catboost: Not installed
2024-07-25 14:26:33,081:INFO:              kmodes: Not installed
2024-07-25 14:26:33,081:INFO:             mlxtend: Not installed
2024-07-25 14:26:33,081:INFO:       statsforecast: Not installed
2024-07-25 14:26:33,081:INFO:        tune_sklearn: Not installed
2024-07-25 14:26:33,081:INFO:                 ray: Not installed
2024-07-25 14:26:33,081:INFO:            hyperopt: Not installed
2024-07-25 14:26:33,081:INFO:              optuna: Not installed
2024-07-25 14:26:33,081:INFO:               skopt: Not installed
2024-07-25 14:26:33,082:INFO:              mlflow: 2.14.2
2024-07-25 14:26:33,082:INFO:              gradio: Not installed
2024-07-25 14:26:33,082:INFO:             fastapi: Not installed
2024-07-25 14:26:33,082:INFO:             uvicorn: Not installed
2024-07-25 14:26:33,082:INFO:              m2cgen: Not installed
2024-07-25 14:26:33,082:INFO:           evidently: Not installed
2024-07-25 14:26:33,082:INFO:               fugue: Not installed
2024-07-25 14:26:33,082:INFO:           streamlit: Not installed
2024-07-25 14:26:33,082:INFO:             prophet: Not installed
2024-07-25 14:26:33,082:INFO:None
2024-07-25 14:26:33,082:INFO:Set up data.
2024-07-25 14:26:33,091:INFO:Set up folding strategy.
2024-07-25 14:26:33,091:INFO:Set up train/test split.
2024-07-25 14:26:33,103:INFO:Set up index.
2024-07-25 14:26:33,103:INFO:Assigning column types.
2024-07-25 14:26:33,106:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-25 14:26:33,141:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 14:26:33,142:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:26:33,161:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:33,162:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:33,194:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 14:26:33,194:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:26:33,214:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:33,214:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:33,214:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-25 14:26:33,245:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:26:33,265:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:33,265:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:33,297:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:26:33,317:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:33,317:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:33,317:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-25 14:26:33,368:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:33,368:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:33,420:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:33,421:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:33,421:INFO:Preparing preprocessing pipeline...
2024-07-25 14:26:33,422:INFO:Set up label encoding.
2024-07-25 14:26:33,422:INFO:Set up simple imputation.
2024-07-25 14:26:33,426:INFO:Set up encoding of ordinal features.
2024-07-25 14:26:33,429:INFO:Set up encoding of categorical features.
2024-07-25 14:26:33,430:INFO:Set up column name cleaning.
2024-07-25 14:26:33,680:INFO:Finished creating preprocessing pipeline.
2024-07-25 14:26:33,708:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                                    'veil-type',
                                                                    'veil-color',
                                                                    'ring-number',
                                                                    'ring-type',
                                                                    'spore-print-color',
                                                                    'population',
                                                                    'habitat'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 14:26:33,708:INFO:Creating final display dataframe.
2024-07-25 14:26:33,886:INFO:Setup _display_container:                     Description                    Value
0                    Session id                      123
1                        Target                    class
2                   Target type                   Binary
3                Target mapping  edible: 0, poisonous: 1
4           Original data shape               (8124, 23)
5        Transformed data shape              (8124, 111)
6   Transformed train set shape              (5686, 111)
7    Transformed test set shape              (2438, 111)
8          Categorical features                       22
9      Rows with missing values                     2.4%
10                   Preprocess                     True
11              Imputation type                   simple
12           Numeric imputation                     mean
13       Categorical imputation                     mode
14     Maximum one-hot encoding                       25
15              Encoding method                     None
16               Fold Generator                    KFold
17                  Fold Number                       10
18                     CPU Jobs                       -1
19                      Use GPU                    False
20               Log Experiment             MlflowLogger
21              Experiment Name                mushroom3
22                          USI                     99e7
2024-07-25 14:26:33,941:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:33,941:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:33,992:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:33,993:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:26:33,993:INFO:Logging experiment in loggers
2024-07-25 14:27:03,980:INFO:PyCaret ClassificationExperiment
2024-07-25 14:27:03,981:INFO:Logging name: mushroom6
2024-07-25 14:27:03,981:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-25 14:27:03,981:INFO:version 3.3.2
2024-07-25 14:27:03,981:INFO:Initializing setup()
2024-07-25 14:27:03,981:INFO:self.USI: f04e
2024-07-25 14:27:03,981:INFO:self._variable_keys: {'X_test', 'n_jobs_param', 'pipeline', 'idx', 'logging_param', 'X_train', 'seed', 'gpu_n_jobs_param', 'y_test', 'fold_shuffle_param', '_available_plots', 'data', 'memory', 'html_param', '_ml_usecase', 'exp_id', 'gpu_param', 'log_plots_param', 'fix_imbalance', 'exp_name_log', 'X', 'target_param', 'y_train', 'USI', 'fold_groups_param', 'is_multiclass', 'y', 'fold_generator'}
2024-07-25 14:27:03,981:INFO:Checking environment
2024-07-25 14:27:03,981:INFO:python_version: 3.9.19
2024-07-25 14:27:03,981:INFO:python_build: ('main', 'Mar 20 2024 12:55:20')
2024-07-25 14:27:03,981:INFO:machine: arm64
2024-07-25 14:27:03,982:INFO:platform: macOS-13.3.1-arm64-arm-64bit
2024-07-25 14:27:03,982:INFO:Memory: svmem(total=8589934592, available=2207449088, percent=74.3, used=3293331456, free=119472128, active=2097381376, inactive=2085617664, wired=1195950080)
2024-07-25 14:27:03,982:INFO:Physical Core: 8
2024-07-25 14:27:03,982:INFO:Logical Core: 8
2024-07-25 14:27:03,982:INFO:Checking libraries
2024-07-25 14:27:03,982:INFO:System:
2024-07-25 14:27:03,982:INFO:    python: 3.9.19 | packaged by conda-forge | (main, Mar 20 2024, 12:55:20)  [Clang 16.0.6 ]
2024-07-25 14:27:03,982:INFO:executable: /opt/anaconda3/envs/mlops/bin/python
2024-07-25 14:27:03,982:INFO:   machine: macOS-13.3.1-arm64-arm-64bit
2024-07-25 14:27:03,982:INFO:PyCaret required dependencies:
2024-07-25 14:27:03,983:INFO:                 pip: 24.0
2024-07-25 14:27:03,983:INFO:          setuptools: 70.1.1
2024-07-25 14:27:03,983:INFO:             pycaret: 3.3.2
2024-07-25 14:27:03,983:INFO:             IPython: 8.18.1
2024-07-25 14:27:03,983:INFO:          ipywidgets: 8.1.3
2024-07-25 14:27:03,983:INFO:                tqdm: 4.66.4
2024-07-25 14:27:03,983:INFO:               numpy: 1.26.4
2024-07-25 14:27:03,983:INFO:              pandas: 2.1.4
2024-07-25 14:27:03,983:INFO:              jinja2: 3.1.4
2024-07-25 14:27:03,983:INFO:               scipy: 1.11.4
2024-07-25 14:27:03,983:INFO:              joblib: 1.3.2
2024-07-25 14:27:03,983:INFO:             sklearn: 1.4.2
2024-07-25 14:27:03,983:INFO:                pyod: 2.0.1
2024-07-25 14:27:03,983:INFO:            imblearn: 0.12.3
2024-07-25 14:27:03,983:INFO:   category_encoders: 2.6.3
2024-07-25 14:27:03,983:INFO:            lightgbm: 4.4.0
2024-07-25 14:27:03,983:INFO:               numba: 0.59.1
2024-07-25 14:27:03,984:INFO:            requests: 2.32.3
2024-07-25 14:27:03,984:INFO:          matplotlib: 3.7.2
2024-07-25 14:27:03,984:INFO:          scikitplot: 0.3.7
2024-07-25 14:27:03,984:INFO:         yellowbrick: 1.5
2024-07-25 14:27:03,984:INFO:              plotly: 5.22.0
2024-07-25 14:27:03,984:INFO:    plotly-resampler: Not installed
2024-07-25 14:27:03,984:INFO:             kaleido: 0.2.1
2024-07-25 14:27:03,984:INFO:           schemdraw: 0.15
2024-07-25 14:27:03,984:INFO:         statsmodels: 0.14.2
2024-07-25 14:27:03,984:INFO:              sktime: 0.26.0
2024-07-25 14:27:03,984:INFO:               tbats: 1.1.3
2024-07-25 14:27:03,984:INFO:            pmdarima: 2.0.4
2024-07-25 14:27:03,984:INFO:              psutil: 6.0.0
2024-07-25 14:27:03,984:INFO:          markupsafe: 2.1.5
2024-07-25 14:27:03,984:INFO:             pickle5: Not installed
2024-07-25 14:27:03,984:INFO:         cloudpickle: 3.0.0
2024-07-25 14:27:03,984:INFO:         deprecation: 2.1.0
2024-07-25 14:27:03,984:INFO:              xxhash: 3.4.1
2024-07-25 14:27:03,984:INFO:           wurlitzer: 3.1.1
2024-07-25 14:27:03,984:INFO:PyCaret optional dependencies:
2024-07-25 14:27:03,985:INFO:                shap: Not installed
2024-07-25 14:27:03,985:INFO:           interpret: Not installed
2024-07-25 14:27:03,985:INFO:                umap: 0.5.5
2024-07-25 14:27:03,985:INFO:     ydata_profiling: Not installed
2024-07-25 14:27:03,985:INFO:  explainerdashboard: Not installed
2024-07-25 14:27:03,985:INFO:             autoviz: Not installed
2024-07-25 14:27:03,985:INFO:           fairlearn: Not installed
2024-07-25 14:27:03,985:INFO:          deepchecks: Not installed
2024-07-25 14:27:03,985:INFO:             xgboost: Not installed
2024-07-25 14:27:03,985:INFO:            catboost: Not installed
2024-07-25 14:27:03,985:INFO:              kmodes: Not installed
2024-07-25 14:27:03,985:INFO:             mlxtend: Not installed
2024-07-25 14:27:03,985:INFO:       statsforecast: Not installed
2024-07-25 14:27:03,985:INFO:        tune_sklearn: Not installed
2024-07-25 14:27:03,985:INFO:                 ray: Not installed
2024-07-25 14:27:03,985:INFO:            hyperopt: Not installed
2024-07-25 14:27:03,985:INFO:              optuna: Not installed
2024-07-25 14:27:03,986:INFO:               skopt: Not installed
2024-07-25 14:27:03,986:INFO:              mlflow: 2.14.2
2024-07-25 14:27:03,986:INFO:              gradio: Not installed
2024-07-25 14:27:03,986:INFO:             fastapi: Not installed
2024-07-25 14:27:03,986:INFO:             uvicorn: Not installed
2024-07-25 14:27:03,986:INFO:              m2cgen: Not installed
2024-07-25 14:27:03,986:INFO:           evidently: Not installed
2024-07-25 14:27:03,986:INFO:               fugue: Not installed
2024-07-25 14:27:03,986:INFO:           streamlit: Not installed
2024-07-25 14:27:03,986:INFO:             prophet: Not installed
2024-07-25 14:27:03,986:INFO:None
2024-07-25 14:27:03,986:INFO:Set up data.
2024-07-25 14:27:03,995:INFO:Set up folding strategy.
2024-07-25 14:27:03,995:INFO:Set up train/test split.
2024-07-25 14:27:04,006:INFO:Set up index.
2024-07-25 14:27:04,007:INFO:Assigning column types.
2024-07-25 14:27:04,009:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-25 14:27:04,044:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 14:27:04,045:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:27:04,064:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:27:04,065:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:27:04,096:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 14:27:04,096:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:27:04,116:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:27:04,116:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:27:04,116:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-25 14:27:04,148:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:27:04,167:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:27:04,167:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:27:04,199:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:27:04,218:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:27:04,218:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:27:04,218:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-25 14:27:04,268:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:27:04,268:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:27:04,319:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:27:04,320:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:27:04,320:INFO:Preparing preprocessing pipeline...
2024-07-25 14:27:04,321:INFO:Set up label encoding.
2024-07-25 14:27:04,321:INFO:Set up simple imputation.
2024-07-25 14:27:04,326:INFO:Set up encoding of ordinal features.
2024-07-25 14:27:04,329:INFO:Set up encoding of categorical features.
2024-07-25 14:27:04,329:INFO:Set up column name cleaning.
2024-07-25 14:27:04,589:INFO:Finished creating preprocessing pipeline.
2024-07-25 14:27:04,617:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                                    'veil-type',
                                                                    'veil-color',
                                                                    'ring-number',
                                                                    'ring-type',
                                                                    'spore-print-color',
                                                                    'population',
                                                                    'habitat'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 14:27:04,617:INFO:Creating final display dataframe.
2024-07-25 14:27:04,802:INFO:Setup _display_container:                     Description                    Value
0                    Session id                      123
1                        Target                    class
2                   Target type                   Binary
3                Target mapping  edible: 0, poisonous: 1
4           Original data shape               (8124, 23)
5        Transformed data shape              (8124, 111)
6   Transformed train set shape              (5686, 111)
7    Transformed test set shape              (2438, 111)
8          Categorical features                       22
9      Rows with missing values                     2.4%
10                   Preprocess                     True
11              Imputation type                   simple
12           Numeric imputation                     mean
13       Categorical imputation                     mode
14     Maximum one-hot encoding                       25
15              Encoding method                     None
16               Fold Generator                    KFold
17                  Fold Number                       10
18                     CPU Jobs                       -1
19                      Use GPU                    False
20               Log Experiment             MlflowLogger
21              Experiment Name                mushroom6
22                          USI                     f04e
2024-07-25 14:27:04,858:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:27:04,859:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:27:04,910:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:27:04,910:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:27:04,911:INFO:Logging experiment in loggers
2024-07-25 14:27:04,985:INFO:SubProcess save_model() called ==================================
2024-07-25 14:27:05,041:INFO:Initializing save_model()
2024-07-25 14:27:05,041:INFO:save_model(model=Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                                    'veil-type',
                                                                    'veil-color',
                                                                    'ring-number',
                                                                    'ring-type',
                                                                    'spore-print-color',
                                                                    'population',
                                                                    'habitat'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/tmp9hptkwyk/Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                                    'veil-type',
                                                                    'veil-color',
                                                                    'ring-number',
                                                                    'ring-type',
                                                                    'spore-print-color',
                                                                    'population',
                                                                    'habitat'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-07-25 14:27:05,041:INFO:Adding model into prep_pipe
2024-07-25 14:27:05,041:WARNING:Only Model saved as it was a pipeline.
2024-07-25 14:27:05,064:INFO:/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/tmp9hptkwyk/Transformation Pipeline.pkl saved in current working directory
2024-07-25 14:27:05,092:INFO:Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                                    'veil-type',
                                                                    'veil-color',
                                                                    'ring-number',
                                                                    'ring-type',
                                                                    'spore-print-color',
                                                                    'population',
                                                                    'habitat'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 14:27:05,092:INFO:save_model() successfully completed......................................
2024-07-25 14:27:05,186:INFO:SubProcess save_model() end ==================================
2024-07-25 14:27:05,199:INFO:setup() successfully completed in 0.94s...............
2024-07-25 14:27:15,188:INFO:Initializing compare_models()
2024-07-25 14:27:15,188:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177aaff10>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x177aaff10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-25 14:27:15,188:INFO:Checking exceptions
2024-07-25 14:27:15,195:INFO:Preparing display monitor
2024-07-25 14:27:15,213:INFO:Initializing Logistic Regression
2024-07-25 14:27:15,213:INFO:Total runtime is 2.753734588623047e-06 minutes
2024-07-25 14:27:15,215:INFO:SubProcess create_model() called ==================================
2024-07-25 14:27:15,215:INFO:Initializing create_model()
2024-07-25 14:27:15,216:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177aaff10>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169d7fdf0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:27:15,216:INFO:Checking exceptions
2024-07-25 14:27:15,216:INFO:Importing libraries
2024-07-25 14:27:15,216:INFO:Copying training dataset
2024-07-25 14:27:15,225:INFO:Defining folds
2024-07-25 14:27:15,225:INFO:Declaring metric variables
2024-07-25 14:27:15,227:INFO:Importing untrained model
2024-07-25 14:27:15,230:INFO:Logistic Regression Imported successfully
2024-07-25 14:27:15,234:INFO:Starting cross validation
2024-07-25 14:27:15,238:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:27:16,232:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,243:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,244:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,252:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,255:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,264:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,298:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,315:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,319:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,325:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,326:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,332:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,335:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,335:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,340:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,346:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,349:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,349:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,356:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,359:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,365:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,370:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,380:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,390:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,696:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,697:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,700:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,701:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,705:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,705:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:16,715:INFO:Calculating mean and std
2024-07-25 14:27:16,716:INFO:Creating metrics dataframe
2024-07-25 14:27:16,718:INFO:Uploading results into container
2024-07-25 14:27:16,718:INFO:Uploading model into container now
2024-07-25 14:27:16,718:INFO:_master_model_container: 1
2024-07-25 14:27:16,718:INFO:_display_container: 2
2024-07-25 14:27:16,719:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-25 14:27:16,719:INFO:create_model() successfully completed......................................
2024-07-25 14:27:16,806:INFO:SubProcess create_model() end ==================================
2024-07-25 14:27:16,806:INFO:Creating metrics dataframe
2024-07-25 14:27:16,810:INFO:Initializing K Neighbors Classifier
2024-07-25 14:27:16,810:INFO:Total runtime is 0.026629269123077393 minutes
2024-07-25 14:27:16,812:INFO:SubProcess create_model() called ==================================
2024-07-25 14:27:16,813:INFO:Initializing create_model()
2024-07-25 14:27:16,813:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177aaff10>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169d7fdf0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:27:16,813:INFO:Checking exceptions
2024-07-25 14:27:16,813:INFO:Importing libraries
2024-07-25 14:27:16,813:INFO:Copying training dataset
2024-07-25 14:27:16,817:INFO:Defining folds
2024-07-25 14:27:16,818:INFO:Declaring metric variables
2024-07-25 14:27:16,820:INFO:Importing untrained model
2024-07-25 14:27:16,822:INFO:K Neighbors Classifier Imported successfully
2024-07-25 14:27:16,826:INFO:Starting cross validation
2024-07-25 14:27:16,830:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:27:17,655:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:17,664:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:17,674:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:17,712:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:17,713:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:17,722:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:17,723:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:17,731:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:17,731:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:17,740:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:17,742:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:17,749:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:17,751:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:17,753:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:17,758:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:17,763:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:17,769:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:17,772:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:17,775:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:17,785:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:17,795:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:17,803:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:17,813:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:17,822:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:18,154:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:18,158:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:18,162:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:18,185:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:18,189:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:18,194:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:18,203:INFO:Calculating mean and std
2024-07-25 14:27:18,204:INFO:Creating metrics dataframe
2024-07-25 14:27:18,205:INFO:Uploading results into container
2024-07-25 14:27:18,206:INFO:Uploading model into container now
2024-07-25 14:27:18,206:INFO:_master_model_container: 2
2024-07-25 14:27:18,206:INFO:_display_container: 2
2024-07-25 14:27:18,207:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-25 14:27:18,207:INFO:create_model() successfully completed......................................
2024-07-25 14:27:18,284:INFO:SubProcess create_model() end ==================================
2024-07-25 14:27:18,284:INFO:Creating metrics dataframe
2024-07-25 14:27:18,288:INFO:Initializing Naive Bayes
2024-07-25 14:27:18,289:INFO:Total runtime is 0.05126491785049438 minutes
2024-07-25 14:27:18,290:INFO:SubProcess create_model() called ==================================
2024-07-25 14:27:18,291:INFO:Initializing create_model()
2024-07-25 14:27:18,291:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177aaff10>, estimator=nb, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169d7fdf0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:27:18,291:INFO:Checking exceptions
2024-07-25 14:27:18,291:INFO:Importing libraries
2024-07-25 14:27:18,291:INFO:Copying training dataset
2024-07-25 14:27:18,295:INFO:Defining folds
2024-07-25 14:27:18,295:INFO:Declaring metric variables
2024-07-25 14:27:18,297:INFO:Importing untrained model
2024-07-25 14:27:18,299:INFO:Naive Bayes Imported successfully
2024-07-25 14:27:18,304:INFO:Starting cross validation
2024-07-25 14:27:18,308:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:27:18,956:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:18,967:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:18,977:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:18,987:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:18,999:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:19,009:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:19,013:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:19,023:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:19,026:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:19,034:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:19,034:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:19,040:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:19,044:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:19,044:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:19,044:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:19,048:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:19,053:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:19,056:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:19,058:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:19,062:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:19,063:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:19,084:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:19,092:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:19,099:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:19,380:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:19,384:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:19,388:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:19,454:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:19,458:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:19,462:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:19,470:INFO:Calculating mean and std
2024-07-25 14:27:19,471:INFO:Creating metrics dataframe
2024-07-25 14:27:19,472:INFO:Uploading results into container
2024-07-25 14:27:19,473:INFO:Uploading model into container now
2024-07-25 14:27:19,473:INFO:_master_model_container: 3
2024-07-25 14:27:19,473:INFO:_display_container: 2
2024-07-25 14:27:19,473:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-25 14:27:19,474:INFO:create_model() successfully completed......................................
2024-07-25 14:27:19,551:INFO:SubProcess create_model() end ==================================
2024-07-25 14:27:19,551:INFO:Creating metrics dataframe
2024-07-25 14:27:19,556:INFO:Initializing Decision Tree Classifier
2024-07-25 14:27:19,557:INFO:Total runtime is 0.0723987340927124 minutes
2024-07-25 14:27:19,559:INFO:SubProcess create_model() called ==================================
2024-07-25 14:27:19,559:INFO:Initializing create_model()
2024-07-25 14:27:19,559:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177aaff10>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169d7fdf0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:27:19,559:INFO:Checking exceptions
2024-07-25 14:27:19,559:INFO:Importing libraries
2024-07-25 14:27:19,559:INFO:Copying training dataset
2024-07-25 14:27:19,563:INFO:Defining folds
2024-07-25 14:27:19,563:INFO:Declaring metric variables
2024-07-25 14:27:19,565:INFO:Importing untrained model
2024-07-25 14:27:19,567:INFO:Decision Tree Classifier Imported successfully
2024-07-25 14:27:19,571:INFO:Starting cross validation
2024-07-25 14:27:19,576:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:27:20,386:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,396:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,405:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,407:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,407:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,411:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,415:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,416:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,418:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,423:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,425:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,425:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,430:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,436:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,440:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,443:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,448:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,457:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,489:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,498:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,506:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,600:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,607:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,613:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,842:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,846:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,850:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,853:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,858:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,862:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:20,874:INFO:Calculating mean and std
2024-07-25 14:27:20,875:INFO:Creating metrics dataframe
2024-07-25 14:27:20,877:INFO:Uploading results into container
2024-07-25 14:27:20,877:INFO:Uploading model into container now
2024-07-25 14:27:20,878:INFO:_master_model_container: 4
2024-07-25 14:27:20,878:INFO:_display_container: 2
2024-07-25 14:27:20,878:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-07-25 14:27:20,878:INFO:create_model() successfully completed......................................
2024-07-25 14:27:20,956:INFO:SubProcess create_model() end ==================================
2024-07-25 14:27:20,956:INFO:Creating metrics dataframe
2024-07-25 14:27:20,961:INFO:Initializing SVM - Linear Kernel
2024-07-25 14:27:20,962:INFO:Total runtime is 0.09581590096155802 minutes
2024-07-25 14:27:20,964:INFO:SubProcess create_model() called ==================================
2024-07-25 14:27:20,964:INFO:Initializing create_model()
2024-07-25 14:27:20,964:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177aaff10>, estimator=svm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169d7fdf0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:27:20,964:INFO:Checking exceptions
2024-07-25 14:27:20,964:INFO:Importing libraries
2024-07-25 14:27:20,964:INFO:Copying training dataset
2024-07-25 14:27:20,968:INFO:Defining folds
2024-07-25 14:27:20,968:INFO:Declaring metric variables
2024-07-25 14:27:20,970:INFO:Importing untrained model
2024-07-25 14:27:20,972:INFO:SVM - Linear Kernel Imported successfully
2024-07-25 14:27:20,976:INFO:Starting cross validation
2024-07-25 14:27:20,980:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:27:21,700:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:21,708:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:21,711:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:21,718:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:21,719:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:21,728:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:21,731:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:21,733:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:21,741:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:21,743:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:21,750:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:21,751:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:21,754:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:21,755:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:21,763:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:21,763:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:21,771:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:21,771:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:21,790:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:21,792:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:21,798:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:21,800:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:21,806:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:21,808:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:22,100:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:22,104:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:22,108:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:22,112:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:22,116:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:22,120:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:22,128:INFO:Calculating mean and std
2024-07-25 14:27:22,129:INFO:Creating metrics dataframe
2024-07-25 14:27:22,130:INFO:Uploading results into container
2024-07-25 14:27:22,130:INFO:Uploading model into container now
2024-07-25 14:27:22,130:INFO:_master_model_container: 5
2024-07-25 14:27:22,131:INFO:_display_container: 2
2024-07-25 14:27:22,131:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-25 14:27:22,131:INFO:create_model() successfully completed......................................
2024-07-25 14:27:22,208:INFO:SubProcess create_model() end ==================================
2024-07-25 14:27:22,208:INFO:Creating metrics dataframe
2024-07-25 14:27:22,213:INFO:Initializing Ridge Classifier
2024-07-25 14:27:22,214:INFO:Total runtime is 0.11668180227279663 minutes
2024-07-25 14:27:22,216:INFO:SubProcess create_model() called ==================================
2024-07-25 14:27:22,217:INFO:Initializing create_model()
2024-07-25 14:27:22,217:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177aaff10>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169d7fdf0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:27:22,217:INFO:Checking exceptions
2024-07-25 14:27:22,217:INFO:Importing libraries
2024-07-25 14:27:22,217:INFO:Copying training dataset
2024-07-25 14:27:22,221:INFO:Defining folds
2024-07-25 14:27:22,221:INFO:Declaring metric variables
2024-07-25 14:27:22,223:INFO:Importing untrained model
2024-07-25 14:27:22,228:INFO:Ridge Classifier Imported successfully
2024-07-25 14:27:22,236:INFO:Starting cross validation
2024-07-25 14:27:22,240:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:27:23,006:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,015:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,022:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,026:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,036:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,047:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,049:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,050:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,057:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,058:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,067:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,068:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,072:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,081:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,082:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,090:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,090:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,094:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,096:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,098:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,101:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,104:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,110:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,112:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,419:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,423:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,427:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,432:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,436:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,440:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:23,447:INFO:Calculating mean and std
2024-07-25 14:27:23,447:INFO:Creating metrics dataframe
2024-07-25 14:27:23,449:INFO:Uploading results into container
2024-07-25 14:27:23,449:INFO:Uploading model into container now
2024-07-25 14:27:23,450:INFO:_master_model_container: 6
2024-07-25 14:27:23,450:INFO:_display_container: 2
2024-07-25 14:27:23,450:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-07-25 14:27:23,450:INFO:create_model() successfully completed......................................
2024-07-25 14:27:23,527:INFO:SubProcess create_model() end ==================================
2024-07-25 14:27:23,527:INFO:Creating metrics dataframe
2024-07-25 14:27:23,532:INFO:Initializing Random Forest Classifier
2024-07-25 14:27:23,533:INFO:Total runtime is 0.13866640329360963 minutes
2024-07-25 14:27:23,535:INFO:SubProcess create_model() called ==================================
2024-07-25 14:27:23,535:INFO:Initializing create_model()
2024-07-25 14:27:23,535:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177aaff10>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169d7fdf0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:27:23,535:INFO:Checking exceptions
2024-07-25 14:27:23,535:INFO:Importing libraries
2024-07-25 14:27:23,535:INFO:Copying training dataset
2024-07-25 14:27:23,539:INFO:Defining folds
2024-07-25 14:27:23,539:INFO:Declaring metric variables
2024-07-25 14:27:23,541:INFO:Importing untrained model
2024-07-25 14:27:23,543:INFO:Random Forest Classifier Imported successfully
2024-07-25 14:27:23,548:INFO:Starting cross validation
2024-07-25 14:27:23,551:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:27:24,728:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:24,736:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:24,744:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:24,759:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:24,767:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:24,768:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:24,775:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:24,776:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:24,783:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:24,783:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:24,792:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:24,802:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:24,822:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:24,830:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:24,842:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:24,853:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:24,861:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:24,869:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:24,905:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:24,913:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:24,921:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:24,964:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:24,971:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:24,977:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:25,381:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:25,386:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:25,390:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:25,405:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:25,410:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:25,414:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:25,433:INFO:Calculating mean and std
2024-07-25 14:27:25,434:INFO:Creating metrics dataframe
2024-07-25 14:27:25,435:INFO:Uploading results into container
2024-07-25 14:27:25,435:INFO:Uploading model into container now
2024-07-25 14:27:25,436:INFO:_master_model_container: 7
2024-07-25 14:27:25,436:INFO:_display_container: 2
2024-07-25 14:27:25,436:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-07-25 14:27:25,436:INFO:create_model() successfully completed......................................
2024-07-25 14:27:25,513:INFO:SubProcess create_model() end ==================================
2024-07-25 14:27:25,513:INFO:Creating metrics dataframe
2024-07-25 14:27:25,519:INFO:Initializing Quadratic Discriminant Analysis
2024-07-25 14:27:25,519:INFO:Total runtime is 0.1717804511388143 minutes
2024-07-25 14:27:25,522:INFO:SubProcess create_model() called ==================================
2024-07-25 14:27:25,522:INFO:Initializing create_model()
2024-07-25 14:27:25,523:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177aaff10>, estimator=qda, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169d7fdf0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:27:25,523:INFO:Checking exceptions
2024-07-25 14:27:25,523:INFO:Importing libraries
2024-07-25 14:27:25,523:INFO:Copying training dataset
2024-07-25 14:27:25,528:INFO:Defining folds
2024-07-25 14:27:25,528:INFO:Declaring metric variables
2024-07-25 14:27:25,530:INFO:Importing untrained model
2024-07-25 14:27:25,532:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-25 14:27:25,537:INFO:Starting cross validation
2024-07-25 14:27:25,540:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:27:26,260:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:27:26,302:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:27:26,336:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:27:26,345:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:27:26,350:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:27:26,352:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:27:26,374:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:27:26,390:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:27:26,454:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:26,463:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:26,476:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:26,507:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:26,519:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:26,529:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:26,552:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:26,552:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:26,563:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:26,564:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:26,576:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:26,577:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:26,578:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:26,588:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:26,596:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:26,598:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:26,601:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:26,608:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:26,611:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:26,619:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:26,622:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:26,633:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:26,642:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:26,651:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:26,952:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:27:26,973:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:27:27,032:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:27,037:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:27,041:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:27,051:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:27,055:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:27,060:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:27,075:INFO:Calculating mean and std
2024-07-25 14:27:27,076:INFO:Creating metrics dataframe
2024-07-25 14:27:27,077:INFO:Uploading results into container
2024-07-25 14:27:27,078:INFO:Uploading model into container now
2024-07-25 14:27:27,078:INFO:_master_model_container: 8
2024-07-25 14:27:27,078:INFO:_display_container: 2
2024-07-25 14:27:27,079:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-25 14:27:27,079:INFO:create_model() successfully completed......................................
2024-07-25 14:27:27,160:INFO:SubProcess create_model() end ==================================
2024-07-25 14:27:27,161:INFO:Creating metrics dataframe
2024-07-25 14:27:27,167:INFO:Initializing Ada Boost Classifier
2024-07-25 14:27:27,167:INFO:Total runtime is 0.19923574924468995 minutes
2024-07-25 14:27:27,169:INFO:SubProcess create_model() called ==================================
2024-07-25 14:27:27,170:INFO:Initializing create_model()
2024-07-25 14:27:27,170:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177aaff10>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169d7fdf0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:27:27,170:INFO:Checking exceptions
2024-07-25 14:27:27,170:INFO:Importing libraries
2024-07-25 14:27:27,170:INFO:Copying training dataset
2024-07-25 14:27:27,174:INFO:Defining folds
2024-07-25 14:27:27,174:INFO:Declaring metric variables
2024-07-25 14:27:27,176:INFO:Importing untrained model
2024-07-25 14:27:27,178:INFO:Ada Boost Classifier Imported successfully
2024-07-25 14:27:27,184:INFO:Starting cross validation
2024-07-25 14:27:27,188:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:27:27,841:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:27:27,873:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:27:27,898:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:27:27,931:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:27:27,956:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:27:27,978:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:27:27,984:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:27:27,990:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:27:28,748:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:28,755:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:28,756:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:28,765:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:28,766:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:28,773:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:28,799:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:28,810:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:28,833:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:28,844:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:28,846:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:28,854:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:28,855:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:28,856:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:28,865:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:28,868:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:28,869:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:28,875:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:28,891:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:28,902:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:28,906:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:28,914:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:28,920:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:28,932:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:29,187:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:27:29,212:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:27:29,692:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:29,701:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:29,708:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:29,734:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:29,741:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:29,747:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:29,787:INFO:Calculating mean and std
2024-07-25 14:27:29,788:INFO:Creating metrics dataframe
2024-07-25 14:27:29,791:INFO:Uploading results into container
2024-07-25 14:27:29,796:INFO:Uploading model into container now
2024-07-25 14:27:29,796:INFO:_master_model_container: 9
2024-07-25 14:27:29,796:INFO:_display_container: 2
2024-07-25 14:27:29,797:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-07-25 14:27:29,797:INFO:create_model() successfully completed......................................
2024-07-25 14:27:29,895:INFO:SubProcess create_model() end ==================================
2024-07-25 14:27:29,895:INFO:Creating metrics dataframe
2024-07-25 14:27:29,902:INFO:Initializing Gradient Boosting Classifier
2024-07-25 14:27:29,902:INFO:Total runtime is 0.2448307514190674 minutes
2024-07-25 14:27:29,905:INFO:SubProcess create_model() called ==================================
2024-07-25 14:27:29,905:INFO:Initializing create_model()
2024-07-25 14:27:29,905:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177aaff10>, estimator=gbc, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169d7fdf0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:27:29,906:INFO:Checking exceptions
2024-07-25 14:27:29,906:INFO:Importing libraries
2024-07-25 14:27:29,906:INFO:Copying training dataset
2024-07-25 14:27:29,911:INFO:Defining folds
2024-07-25 14:27:29,911:INFO:Declaring metric variables
2024-07-25 14:27:29,914:INFO:Importing untrained model
2024-07-25 14:27:29,916:INFO:Gradient Boosting Classifier Imported successfully
2024-07-25 14:27:29,921:INFO:Starting cross validation
2024-07-25 14:27:29,925:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:27:32,214:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:32,222:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:32,230:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:32,276:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:32,284:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:32,292:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:32,318:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:32,326:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:32,335:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:32,349:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:32,350:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:32,358:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:32,358:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:32,366:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:32,366:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:32,369:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:32,377:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:32,377:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:32,385:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:32,386:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:32,394:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:32,401:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:32,409:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:32,416:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:33,792:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:33,802:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:33,814:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:33,864:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:33,876:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:33,886:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:33,908:INFO:Calculating mean and std
2024-07-25 14:27:33,910:INFO:Creating metrics dataframe
2024-07-25 14:27:33,913:INFO:Uploading results into container
2024-07-25 14:27:33,914:INFO:Uploading model into container now
2024-07-25 14:27:33,915:INFO:_master_model_container: 10
2024-07-25 14:27:33,915:INFO:_display_container: 2
2024-07-25 14:27:33,916:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-25 14:27:33,916:INFO:create_model() successfully completed......................................
2024-07-25 14:27:34,074:INFO:SubProcess create_model() end ==================================
2024-07-25 14:27:34,075:INFO:Creating metrics dataframe
2024-07-25 14:27:34,088:INFO:Initializing Linear Discriminant Analysis
2024-07-25 14:27:34,089:INFO:Total runtime is 0.3146003325780233 minutes
2024-07-25 14:27:34,098:INFO:SubProcess create_model() called ==================================
2024-07-25 14:27:34,098:INFO:Initializing create_model()
2024-07-25 14:27:34,098:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177aaff10>, estimator=lda, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169d7fdf0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:27:34,099:INFO:Checking exceptions
2024-07-25 14:27:34,099:INFO:Importing libraries
2024-07-25 14:27:34,099:INFO:Copying training dataset
2024-07-25 14:27:34,109:INFO:Defining folds
2024-07-25 14:27:34,109:INFO:Declaring metric variables
2024-07-25 14:27:34,115:INFO:Importing untrained model
2024-07-25 14:27:34,121:INFO:Linear Discriminant Analysis Imported successfully
2024-07-25 14:27:34,135:INFO:Starting cross validation
2024-07-25 14:27:34,147:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:27:35,323:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,334:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,342:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,397:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,400:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,409:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,410:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,418:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,420:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,422:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,427:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,434:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,435:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,436:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,445:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,445:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,455:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,458:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,484:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,493:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,500:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,522:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,528:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,535:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,897:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,902:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,907:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,924:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,929:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,935:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:35,956:INFO:Calculating mean and std
2024-07-25 14:27:35,958:INFO:Creating metrics dataframe
2024-07-25 14:27:35,960:INFO:Uploading results into container
2024-07-25 14:27:35,961:INFO:Uploading model into container now
2024-07-25 14:27:35,961:INFO:_master_model_container: 11
2024-07-25 14:27:35,961:INFO:_display_container: 2
2024-07-25 14:27:35,962:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-25 14:27:35,962:INFO:create_model() successfully completed......................................
2024-07-25 14:27:36,064:INFO:SubProcess create_model() end ==================================
2024-07-25 14:27:36,065:INFO:Creating metrics dataframe
2024-07-25 14:27:36,073:INFO:Initializing Extra Trees Classifier
2024-07-25 14:27:36,073:INFO:Total runtime is 0.3476731022198995 minutes
2024-07-25 14:27:36,076:INFO:SubProcess create_model() called ==================================
2024-07-25 14:27:36,076:INFO:Initializing create_model()
2024-07-25 14:27:36,076:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177aaff10>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169d7fdf0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:27:36,076:INFO:Checking exceptions
2024-07-25 14:27:36,076:INFO:Importing libraries
2024-07-25 14:27:36,076:INFO:Copying training dataset
2024-07-25 14:27:36,082:INFO:Defining folds
2024-07-25 14:27:36,082:INFO:Declaring metric variables
2024-07-25 14:27:36,085:INFO:Importing untrained model
2024-07-25 14:27:36,089:INFO:Extra Trees Classifier Imported successfully
2024-07-25 14:27:36,094:INFO:Starting cross validation
2024-07-25 14:27:36,098:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:27:37,609:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:37,617:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:37,617:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:37,625:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:37,625:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:37,633:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:37,640:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:37,649:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:37,653:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:37,657:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:37,671:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:37,676:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:37,681:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:37,683:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:37,684:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:37,691:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:37,692:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:37,694:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:37,700:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:37,703:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:37,711:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:37,761:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:37,767:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:37,774:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:38,186:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:38,189:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:38,190:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:38,193:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:38,194:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:38,198:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:38,214:INFO:Calculating mean and std
2024-07-25 14:27:38,215:INFO:Creating metrics dataframe
2024-07-25 14:27:38,216:INFO:Uploading results into container
2024-07-25 14:27:38,217:INFO:Uploading model into container now
2024-07-25 14:27:38,217:INFO:_master_model_container: 12
2024-07-25 14:27:38,217:INFO:_display_container: 2
2024-07-25 14:27:38,217:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-07-25 14:27:38,217:INFO:create_model() successfully completed......................................
2024-07-25 14:27:38,296:INFO:SubProcess create_model() end ==================================
2024-07-25 14:27:38,296:INFO:Creating metrics dataframe
2024-07-25 14:27:38,303:INFO:Initializing Light Gradient Boosting Machine
2024-07-25 14:27:38,304:INFO:Total runtime is 0.3848483165105184 minutes
2024-07-25 14:27:38,306:INFO:SubProcess create_model() called ==================================
2024-07-25 14:27:38,306:INFO:Initializing create_model()
2024-07-25 14:27:38,306:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177aaff10>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169d7fdf0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:27:38,306:INFO:Checking exceptions
2024-07-25 14:27:38,306:INFO:Importing libraries
2024-07-25 14:27:38,306:INFO:Copying training dataset
2024-07-25 14:27:38,310:INFO:Defining folds
2024-07-25 14:27:38,310:INFO:Declaring metric variables
2024-07-25 14:27:38,312:INFO:Importing untrained model
2024-07-25 14:27:38,314:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-25 14:27:38,318:INFO:Starting cross validation
2024-07-25 14:27:38,322:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:27:41,552:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:41,557:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:41,562:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:41,598:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:41,603:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:41,610:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:41,664:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:41,669:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:41,674:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:41,723:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:41,728:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:41,733:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:41,733:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:41,739:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:41,743:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:41,744:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:41,745:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:41,749:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:41,749:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:41,750:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:41,754:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:41,754:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:41,756:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:41,760:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:42,660:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:42,664:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:42,669:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:42,698:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:42,702:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:42,706:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:42,714:INFO:Calculating mean and std
2024-07-25 14:27:42,715:INFO:Creating metrics dataframe
2024-07-25 14:27:42,717:INFO:Uploading results into container
2024-07-25 14:27:42,717:INFO:Uploading model into container now
2024-07-25 14:27:42,717:INFO:_master_model_container: 13
2024-07-25 14:27:42,717:INFO:_display_container: 2
2024-07-25 14:27:42,718:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-25 14:27:42,718:INFO:create_model() successfully completed......................................
2024-07-25 14:27:42,809:INFO:SubProcess create_model() end ==================================
2024-07-25 14:27:42,810:INFO:Creating metrics dataframe
2024-07-25 14:27:42,817:INFO:Initializing Dummy Classifier
2024-07-25 14:27:42,817:INFO:Total runtime is 0.46007311741511026 minutes
2024-07-25 14:27:42,819:INFO:SubProcess create_model() called ==================================
2024-07-25 14:27:42,819:INFO:Initializing create_model()
2024-07-25 14:27:42,819:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177aaff10>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169d7fdf0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:27:42,819:INFO:Checking exceptions
2024-07-25 14:27:42,819:INFO:Importing libraries
2024-07-25 14:27:42,819:INFO:Copying training dataset
2024-07-25 14:27:42,824:INFO:Defining folds
2024-07-25 14:27:42,824:INFO:Declaring metric variables
2024-07-25 14:27:42,827:INFO:Importing untrained model
2024-07-25 14:27:42,829:INFO:Dummy Classifier Imported successfully
2024-07-25 14:27:42,833:INFO:Starting cross validation
2024-07-25 14:27:42,837:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:27:43,522:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,533:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,539:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:27:43,539:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,544:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,550:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,555:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:27:43,560:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,606:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,610:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,615:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,619:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,621:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:27:43,624:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:27:43,626:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,633:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,639:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,642:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,649:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,652:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,655:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:27:43,658:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:27:43,659:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,659:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,663:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,670:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,675:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:27:43,680:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,715:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,723:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,728:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:27:43,731:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,980:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,984:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,986:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:27:43,988:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,989:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,993:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:43,996:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:27:43,998:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:44,017:INFO:Calculating mean and std
2024-07-25 14:27:44,018:INFO:Creating metrics dataframe
2024-07-25 14:27:44,019:INFO:Uploading results into container
2024-07-25 14:27:44,020:INFO:Uploading model into container now
2024-07-25 14:27:44,020:INFO:_master_model_container: 14
2024-07-25 14:27:44,020:INFO:_display_container: 2
2024-07-25 14:27:44,020:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-07-25 14:27:44,020:INFO:create_model() successfully completed......................................
2024-07-25 14:27:44,105:INFO:SubProcess create_model() end ==================================
2024-07-25 14:27:44,105:INFO:Creating metrics dataframe
2024-07-25 14:27:44,112:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-25 14:27:44,117:INFO:Initializing create_model()
2024-07-25 14:27:44,117:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177aaff10>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:27:44,117:INFO:Checking exceptions
2024-07-25 14:27:44,119:INFO:Importing libraries
2024-07-25 14:27:44,119:INFO:Copying training dataset
2024-07-25 14:27:44,124:INFO:Defining folds
2024-07-25 14:27:44,124:INFO:Declaring metric variables
2024-07-25 14:27:44,124:INFO:Importing untrained model
2024-07-25 14:27:44,124:INFO:Declaring custom model
2024-07-25 14:27:44,124:INFO:K Neighbors Classifier Imported successfully
2024-07-25 14:27:44,127:INFO:Cross validation set to False
2024-07-25 14:27:44,127:INFO:Fitting Model
2024-07-25 14:27:44,377:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-25 14:27:44,378:INFO:create_model() successfully completed......................................
2024-07-25 14:27:44,460:INFO:Creating Dashboard logs
2024-07-25 14:27:44,462:INFO:Model: K Neighbors Classifier
2024-07-25 14:27:44,486:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-07-25 14:27:44,593:INFO:Initializing predict_model()
2024-07-25 14:27:44,594:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177aaff10>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16aaa7dc0>)
2024-07-25 14:27:44,594:INFO:Checking exceptions
2024-07-25 14:27:44,594:INFO:Preloading libraries
2024-07-25 14:27:44,826:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:44,841:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:44,856:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:27:45,096:INFO:Creating Dashboard logs
2024-07-25 14:27:45,098:INFO:Model: SVM - Linear Kernel
2024-07-25 14:27:45,115:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 123, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-07-25 14:27:45,332:INFO:Creating Dashboard logs
2024-07-25 14:27:45,334:INFO:Model: Random Forest Classifier
2024-07-25 14:27:45,352:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-07-25 14:27:45,568:INFO:Creating Dashboard logs
2024-07-25 14:27:45,570:INFO:Model: Quadratic Discriminant Analysis
2024-07-25 14:27:45,586:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2024-07-25 14:27:45,784:INFO:Creating Dashboard logs
2024-07-25 14:27:45,786:INFO:Model: Extra Trees Classifier
2024-07-25 14:27:45,803:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-07-25 14:27:46,005:INFO:Creating Dashboard logs
2024-07-25 14:27:46,007:INFO:Model: Light Gradient Boosting Machine
2024-07-25 14:27:46,026:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-07-25 14:27:46,232:INFO:Creating Dashboard logs
2024-07-25 14:27:46,234:INFO:Model: Decision Tree Classifier
2024-07-25 14:27:46,251:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 123, 'splitter': 'best'}
2024-07-25 14:27:46,450:INFO:Creating Dashboard logs
2024-07-25 14:27:46,452:INFO:Model: Ada Boost Classifier
2024-07-25 14:27:46,469:INFO:Logged params: {'algorithm': 'SAMME.R', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 123}
2024-07-25 14:27:46,664:INFO:Creating Dashboard logs
2024-07-25 14:27:46,667:INFO:Model: Ridge Classifier
2024-07-25 14:27:46,683:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 123, 'solver': 'auto', 'tol': 0.0001}
2024-07-25 14:27:46,881:INFO:Creating Dashboard logs
2024-07-25 14:27:46,883:INFO:Model: Gradient Boosting Classifier
2024-07-25 14:27:46,900:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-07-25 14:27:47,100:INFO:Creating Dashboard logs
2024-07-25 14:27:47,103:INFO:Model: Linear Discriminant Analysis
2024-07-25 14:27:47,119:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2024-07-25 14:27:47,316:INFO:Creating Dashboard logs
2024-07-25 14:27:47,319:INFO:Model: Logistic Regression
2024-07-25 14:27:47,335:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-07-25 14:27:47,534:INFO:Creating Dashboard logs
2024-07-25 14:27:47,536:INFO:Model: Naive Bayes
2024-07-25 14:27:47,552:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2024-07-25 14:27:47,745:INFO:Creating Dashboard logs
2024-07-25 14:27:47,748:INFO:Model: Dummy Classifier
2024-07-25 14:27:47,764:INFO:Logged params: {'constant': None, 'random_state': 123, 'strategy': 'prior'}
2024-07-25 14:27:47,968:INFO:_master_model_container: 14
2024-07-25 14:27:47,969:INFO:_display_container: 2
2024-07-25 14:27:47,969:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-25 14:27:47,969:INFO:compare_models() successfully completed......................................
2024-07-25 14:30:09,824:INFO:PyCaret ClassificationExperiment
2024-07-25 14:30:09,825:INFO:Logging name: mushroom7
2024-07-25 14:30:09,825:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-25 14:30:09,825:INFO:version 3.3.2
2024-07-25 14:30:09,825:INFO:Initializing setup()
2024-07-25 14:30:09,825:INFO:self.USI: c885
2024-07-25 14:30:09,825:INFO:self._variable_keys: {'X_test', 'n_jobs_param', 'pipeline', 'idx', 'logging_param', 'X_train', 'seed', 'gpu_n_jobs_param', 'y_test', 'fold_shuffle_param', '_available_plots', 'data', 'memory', 'html_param', '_ml_usecase', 'exp_id', 'gpu_param', 'log_plots_param', 'fix_imbalance', 'exp_name_log', 'X', 'target_param', 'y_train', 'USI', 'fold_groups_param', 'is_multiclass', 'y', 'fold_generator'}
2024-07-25 14:30:09,825:INFO:Checking environment
2024-07-25 14:30:09,825:INFO:python_version: 3.9.19
2024-07-25 14:30:09,825:INFO:python_build: ('main', 'Mar 20 2024 12:55:20')
2024-07-25 14:30:09,825:INFO:machine: arm64
2024-07-25 14:30:09,825:INFO:platform: macOS-13.3.1-arm64-arm-64bit
2024-07-25 14:30:09,825:INFO:Memory: svmem(total=8589934592, available=1970765824, percent=77.1, used=2954903552, free=176553984, active=1807761408, inactive=1786855424, wired=1147142144)
2024-07-25 14:30:09,825:INFO:Physical Core: 8
2024-07-25 14:30:09,825:INFO:Logical Core: 8
2024-07-25 14:30:09,825:INFO:Checking libraries
2024-07-25 14:30:09,826:INFO:System:
2024-07-25 14:30:09,826:INFO:    python: 3.9.19 | packaged by conda-forge | (main, Mar 20 2024, 12:55:20)  [Clang 16.0.6 ]
2024-07-25 14:30:09,826:INFO:executable: /opt/anaconda3/envs/mlops/bin/python
2024-07-25 14:30:09,826:INFO:   machine: macOS-13.3.1-arm64-arm-64bit
2024-07-25 14:30:09,826:INFO:PyCaret required dependencies:
2024-07-25 14:30:09,826:INFO:                 pip: 24.0
2024-07-25 14:30:09,826:INFO:          setuptools: 70.1.1
2024-07-25 14:30:09,826:INFO:             pycaret: 3.3.2
2024-07-25 14:30:09,826:INFO:             IPython: 8.18.1
2024-07-25 14:30:09,826:INFO:          ipywidgets: 8.1.3
2024-07-25 14:30:09,826:INFO:                tqdm: 4.66.4
2024-07-25 14:30:09,826:INFO:               numpy: 1.26.4
2024-07-25 14:30:09,826:INFO:              pandas: 2.1.4
2024-07-25 14:30:09,826:INFO:              jinja2: 3.1.4
2024-07-25 14:30:09,826:INFO:               scipy: 1.11.4
2024-07-25 14:30:09,826:INFO:              joblib: 1.3.2
2024-07-25 14:30:09,826:INFO:             sklearn: 1.4.2
2024-07-25 14:30:09,826:INFO:                pyod: 2.0.1
2024-07-25 14:30:09,826:INFO:            imblearn: 0.12.3
2024-07-25 14:30:09,826:INFO:   category_encoders: 2.6.3
2024-07-25 14:30:09,826:INFO:            lightgbm: 4.4.0
2024-07-25 14:30:09,826:INFO:               numba: 0.59.1
2024-07-25 14:30:09,826:INFO:            requests: 2.32.3
2024-07-25 14:30:09,826:INFO:          matplotlib: 3.7.2
2024-07-25 14:30:09,827:INFO:          scikitplot: 0.3.7
2024-07-25 14:30:09,827:INFO:         yellowbrick: 1.5
2024-07-25 14:30:09,827:INFO:              plotly: 5.22.0
2024-07-25 14:30:09,827:INFO:    plotly-resampler: Not installed
2024-07-25 14:30:09,827:INFO:             kaleido: 0.2.1
2024-07-25 14:30:09,827:INFO:           schemdraw: 0.15
2024-07-25 14:30:09,827:INFO:         statsmodels: 0.14.2
2024-07-25 14:30:09,827:INFO:              sktime: 0.26.0
2024-07-25 14:30:09,827:INFO:               tbats: 1.1.3
2024-07-25 14:30:09,827:INFO:            pmdarima: 2.0.4
2024-07-25 14:30:09,827:INFO:              psutil: 6.0.0
2024-07-25 14:30:09,827:INFO:          markupsafe: 2.1.5
2024-07-25 14:30:09,827:INFO:             pickle5: Not installed
2024-07-25 14:30:09,827:INFO:         cloudpickle: 3.0.0
2024-07-25 14:30:09,827:INFO:         deprecation: 2.1.0
2024-07-25 14:30:09,827:INFO:              xxhash: 3.4.1
2024-07-25 14:30:09,827:INFO:           wurlitzer: 3.1.1
2024-07-25 14:30:09,827:INFO:PyCaret optional dependencies:
2024-07-25 14:30:09,827:INFO:                shap: Not installed
2024-07-25 14:30:09,827:INFO:           interpret: Not installed
2024-07-25 14:30:09,827:INFO:                umap: 0.5.5
2024-07-25 14:30:09,827:INFO:     ydata_profiling: Not installed
2024-07-25 14:30:09,827:INFO:  explainerdashboard: Not installed
2024-07-25 14:30:09,827:INFO:             autoviz: Not installed
2024-07-25 14:30:09,827:INFO:           fairlearn: Not installed
2024-07-25 14:30:09,827:INFO:          deepchecks: Not installed
2024-07-25 14:30:09,827:INFO:             xgboost: Not installed
2024-07-25 14:30:09,827:INFO:            catboost: Not installed
2024-07-25 14:30:09,827:INFO:              kmodes: Not installed
2024-07-25 14:30:09,827:INFO:             mlxtend: Not installed
2024-07-25 14:30:09,827:INFO:       statsforecast: Not installed
2024-07-25 14:30:09,827:INFO:        tune_sklearn: Not installed
2024-07-25 14:30:09,827:INFO:                 ray: Not installed
2024-07-25 14:30:09,827:INFO:            hyperopt: Not installed
2024-07-25 14:30:09,827:INFO:              optuna: Not installed
2024-07-25 14:30:09,827:INFO:               skopt: Not installed
2024-07-25 14:30:09,827:INFO:              mlflow: 2.14.2
2024-07-25 14:30:09,827:INFO:              gradio: Not installed
2024-07-25 14:30:09,827:INFO:             fastapi: Not installed
2024-07-25 14:30:09,827:INFO:             uvicorn: Not installed
2024-07-25 14:30:09,827:INFO:              m2cgen: Not installed
2024-07-25 14:30:09,828:INFO:           evidently: Not installed
2024-07-25 14:30:09,828:INFO:               fugue: Not installed
2024-07-25 14:30:09,828:INFO:           streamlit: Not installed
2024-07-25 14:30:09,828:INFO:             prophet: Not installed
2024-07-25 14:30:09,828:INFO:None
2024-07-25 14:30:09,828:INFO:Set up data.
2024-07-25 14:30:09,839:INFO:Set up folding strategy.
2024-07-25 14:30:09,840:INFO:Set up train/test split.
2024-07-25 14:30:09,852:INFO:Set up index.
2024-07-25 14:30:09,852:INFO:Assigning column types.
2024-07-25 14:30:09,854:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-25 14:30:09,887:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 14:30:09,888:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:30:09,908:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:30:09,908:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:30:09,940:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 14:30:09,940:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:30:09,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:30:09,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:30:09,960:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-25 14:30:09,992:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:30:10,011:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:30:10,011:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:30:10,043:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 14:30:10,062:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:30:10,062:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:30:10,062:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-25 14:30:10,113:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:30:10,113:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:30:10,164:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:30:10,164:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:30:10,165:INFO:Preparing preprocessing pipeline...
2024-07-25 14:30:10,166:INFO:Set up label encoding.
2024-07-25 14:30:10,166:INFO:Set up simple imputation.
2024-07-25 14:30:10,170:INFO:Set up encoding of ordinal features.
2024-07-25 14:30:10,173:INFO:Set up encoding of categorical features.
2024-07-25 14:30:10,173:INFO:Set up imbalanced handling.
2024-07-25 14:30:10,174:INFO:Set up feature selection.
2024-07-25 14:30:10,225:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:30:10,225:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:30:10,226:INFO:Set up column name cleaning.
2024-07-25 14:30:11,066:INFO:Finished creating preprocessing pipeline.
2024-07-25 14:30:11,100:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=4,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 14:30:11,100:INFO:Creating final display dataframe.
2024-07-25 14:30:11,832:INFO:Setup _display_container:                     Description                    Value
0                    Session id                      123
1                        Target                    class
2                   Target type                   Binary
3                Target mapping  edible: 0, poisonous: 1
4           Original data shape               (8124, 23)
5        Transformed data shape                (8328, 5)
6   Transformed train set shape                (5890, 5)
7    Transformed test set shape                (2438, 5)
8          Categorical features                       22
9      Rows with missing values                     2.4%
10                   Preprocess                     True
11              Imputation type                   simple
12           Numeric imputation                     mean
13       Categorical imputation                     mode
14     Maximum one-hot encoding                       25
15              Encoding method                     None
16                Fix imbalance                     True
17         Fix imbalance method                    SMOTE
18            Feature selection                     True
19     Feature selection method                  classic
20  Feature selection estimator                 lightgbm
21  Number of features selected                      0.2
22               Fold Generator                    KFold
23                  Fold Number                       10
24                     CPU Jobs                       -1
25                      Use GPU                    False
26               Log Experiment             MlflowLogger
27              Experiment Name                mushroom7
28                          USI                     c885
2024-07-25 14:30:11,889:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:30:11,889:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:30:11,940:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:30:11,941:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 14:30:11,942:INFO:Logging experiment in loggers
2024-07-25 14:30:12,044:INFO:SubProcess save_model() called ==================================
2024-07-25 14:30:12,111:INFO:Initializing save_model()
2024-07-25 14:30:12,111:INFO:save_model(model=Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=4,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/tmpgr136w69/Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=4,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-07-25 14:30:12,111:INFO:Adding model into prep_pipe
2024-07-25 14:30:12,111:WARNING:Only Model saved as it was a pipeline.
2024-07-25 14:30:12,139:INFO:/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/tmpgr136w69/Transformation Pipeline.pkl saved in current working directory
2024-07-25 14:30:12,174:INFO:Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=4,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 14:30:12,174:INFO:save_model() successfully completed......................................
2024-07-25 14:30:12,289:INFO:SubProcess save_model() end ==================================
2024-07-25 14:30:12,304:INFO:setup() successfully completed in 2.13s...............
2024-07-25 14:30:21,346:INFO:Initializing compare_models()
2024-07-25 14:30:21,347:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-25 14:30:21,347:INFO:Checking exceptions
2024-07-25 14:30:21,357:INFO:Preparing display monitor
2024-07-25 14:30:21,379:INFO:Initializing Logistic Regression
2024-07-25 14:30:21,379:INFO:Total runtime is 6.385644276936849e-06 minutes
2024-07-25 14:30:21,383:INFO:SubProcess create_model() called ==================================
2024-07-25 14:30:21,383:INFO:Initializing create_model()
2024-07-25 14:30:21,384:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1777ad1c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:30:21,384:INFO:Checking exceptions
2024-07-25 14:30:21,384:INFO:Importing libraries
2024-07-25 14:30:21,384:INFO:Copying training dataset
2024-07-25 14:30:21,394:INFO:Defining folds
2024-07-25 14:30:21,394:INFO:Declaring metric variables
2024-07-25 14:30:21,396:INFO:Importing untrained model
2024-07-25 14:30:21,399:INFO:Logistic Regression Imported successfully
2024-07-25 14:30:21,403:INFO:Starting cross validation
2024-07-25 14:30:21,415:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:30:24,729:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:24,738:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:24,751:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:24,991:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:25,000:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:25,009:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:25,073:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:25,082:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:25,087:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:25,130:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:25,134:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:25,138:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:25,155:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:25,156:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:25,160:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:25,161:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:25,164:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:25,165:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:25,263:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:25,265:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:25,267:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:25,270:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:25,272:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:25,274:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:26,176:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:26,181:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:26,182:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:26,185:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:26,186:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:26,190:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:26,202:INFO:Calculating mean and std
2024-07-25 14:30:26,203:INFO:Creating metrics dataframe
2024-07-25 14:30:26,205:INFO:Uploading results into container
2024-07-25 14:30:26,205:INFO:Uploading model into container now
2024-07-25 14:30:26,206:INFO:_master_model_container: 1
2024-07-25 14:30:26,206:INFO:_display_container: 2
2024-07-25 14:30:26,206:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-25 14:30:26,206:INFO:create_model() successfully completed......................................
2024-07-25 14:30:26,285:INFO:SubProcess create_model() end ==================================
2024-07-25 14:30:26,286:INFO:Creating metrics dataframe
2024-07-25 14:30:26,290:INFO:Initializing K Neighbors Classifier
2024-07-25 14:30:26,290:INFO:Total runtime is 0.08185038566589355 minutes
2024-07-25 14:30:26,292:INFO:SubProcess create_model() called ==================================
2024-07-25 14:30:26,292:INFO:Initializing create_model()
2024-07-25 14:30:26,292:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1777ad1c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:30:26,292:INFO:Checking exceptions
2024-07-25 14:30:26,292:INFO:Importing libraries
2024-07-25 14:30:26,293:INFO:Copying training dataset
2024-07-25 14:30:26,297:INFO:Defining folds
2024-07-25 14:30:26,297:INFO:Declaring metric variables
2024-07-25 14:30:26,299:INFO:Importing untrained model
2024-07-25 14:30:26,301:INFO:K Neighbors Classifier Imported successfully
2024-07-25 14:30:26,306:INFO:Starting cross validation
2024-07-25 14:30:26,314:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:30:29,537:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:29,542:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:29,546:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:29,667:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:29,673:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:29,677:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:29,717:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:29,722:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:29,726:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:29,727:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:29,730:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:29,731:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:29,735:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:29,736:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:29,740:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:29,741:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:29,745:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:29,750:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:29,758:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:29,762:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:29,767:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:29,778:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:29,783:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:29,787:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:30,728:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:30,732:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:30,736:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:30,800:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:30,804:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:30,808:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:30,826:INFO:Calculating mean and std
2024-07-25 14:30:30,829:INFO:Creating metrics dataframe
2024-07-25 14:30:30,833:INFO:Uploading results into container
2024-07-25 14:30:30,834:INFO:Uploading model into container now
2024-07-25 14:30:30,834:INFO:_master_model_container: 2
2024-07-25 14:30:30,834:INFO:_display_container: 2
2024-07-25 14:30:30,835:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-25 14:30:30,835:INFO:create_model() successfully completed......................................
2024-07-25 14:30:30,940:INFO:SubProcess create_model() end ==================================
2024-07-25 14:30:30,940:INFO:Creating metrics dataframe
2024-07-25 14:30:30,945:INFO:Initializing Naive Bayes
2024-07-25 14:30:30,945:INFO:Total runtime is 0.15944054921468098 minutes
2024-07-25 14:30:30,948:INFO:SubProcess create_model() called ==================================
2024-07-25 14:30:30,948:INFO:Initializing create_model()
2024-07-25 14:30:30,948:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=nb, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1777ad1c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:30:30,948:INFO:Checking exceptions
2024-07-25 14:30:30,948:INFO:Importing libraries
2024-07-25 14:30:30,948:INFO:Copying training dataset
2024-07-25 14:30:30,953:INFO:Defining folds
2024-07-25 14:30:30,953:INFO:Declaring metric variables
2024-07-25 14:30:30,955:INFO:Importing untrained model
2024-07-25 14:30:30,957:INFO:Naive Bayes Imported successfully
2024-07-25 14:30:30,962:INFO:Starting cross validation
2024-07-25 14:30:30,970:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:30:34,087:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:34,092:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:34,096:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:34,192:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:34,210:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:34,218:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:34,335:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:34,339:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:34,346:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:34,364:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:34,366:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:34,369:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:34,371:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:34,373:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:34,375:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:34,381:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:34,385:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:34,390:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:34,394:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:34,398:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:34,398:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:34,402:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:34,403:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:34,407:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:35,335:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:35,339:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:35,343:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:35,415:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:35,419:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:35,423:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:35,431:INFO:Calculating mean and std
2024-07-25 14:30:35,431:INFO:Creating metrics dataframe
2024-07-25 14:30:35,433:INFO:Uploading results into container
2024-07-25 14:30:35,434:INFO:Uploading model into container now
2024-07-25 14:30:35,434:INFO:_master_model_container: 3
2024-07-25 14:30:35,434:INFO:_display_container: 2
2024-07-25 14:30:35,434:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-25 14:30:35,434:INFO:create_model() successfully completed......................................
2024-07-25 14:30:35,512:INFO:SubProcess create_model() end ==================================
2024-07-25 14:30:35,512:INFO:Creating metrics dataframe
2024-07-25 14:30:35,517:INFO:Initializing Decision Tree Classifier
2024-07-25 14:30:35,517:INFO:Total runtime is 0.23563103675842284 minutes
2024-07-25 14:30:35,519:INFO:SubProcess create_model() called ==================================
2024-07-25 14:30:35,519:INFO:Initializing create_model()
2024-07-25 14:30:35,519:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1777ad1c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:30:35,519:INFO:Checking exceptions
2024-07-25 14:30:35,519:INFO:Importing libraries
2024-07-25 14:30:35,519:INFO:Copying training dataset
2024-07-25 14:30:35,524:INFO:Defining folds
2024-07-25 14:30:35,524:INFO:Declaring metric variables
2024-07-25 14:30:35,525:INFO:Importing untrained model
2024-07-25 14:30:35,528:INFO:Decision Tree Classifier Imported successfully
2024-07-25 14:30:35,531:INFO:Starting cross validation
2024-07-25 14:30:35,542:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:30:38,681:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:38,695:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:38,707:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:38,807:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:38,819:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:38,832:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:38,838:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:38,845:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:38,859:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:38,911:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:38,916:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:38,919:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:38,920:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:38,923:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:38,927:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:38,948:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:38,952:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:38,957:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:39,043:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:39,048:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:39,053:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:39,102:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:39,106:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:39,110:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:39,873:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:39,877:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:39,882:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:39,929:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:39,934:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:39,938:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:39,944:INFO:Calculating mean and std
2024-07-25 14:30:39,945:INFO:Creating metrics dataframe
2024-07-25 14:30:39,947:INFO:Uploading results into container
2024-07-25 14:30:39,947:INFO:Uploading model into container now
2024-07-25 14:30:39,948:INFO:_master_model_container: 4
2024-07-25 14:30:39,948:INFO:_display_container: 2
2024-07-25 14:30:39,948:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-07-25 14:30:39,948:INFO:create_model() successfully completed......................................
2024-07-25 14:30:40,027:INFO:SubProcess create_model() end ==================================
2024-07-25 14:30:40,027:INFO:Creating metrics dataframe
2024-07-25 14:30:40,032:INFO:Initializing SVM - Linear Kernel
2024-07-25 14:30:40,032:INFO:Total runtime is 0.3108901659647624 minutes
2024-07-25 14:30:40,035:INFO:SubProcess create_model() called ==================================
2024-07-25 14:30:40,035:INFO:Initializing create_model()
2024-07-25 14:30:40,035:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=svm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1777ad1c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:30:40,035:INFO:Checking exceptions
2024-07-25 14:30:40,035:INFO:Importing libraries
2024-07-25 14:30:40,035:INFO:Copying training dataset
2024-07-25 14:30:40,039:INFO:Defining folds
2024-07-25 14:30:40,039:INFO:Declaring metric variables
2024-07-25 14:30:40,041:INFO:Importing untrained model
2024-07-25 14:30:40,043:INFO:SVM - Linear Kernel Imported successfully
2024-07-25 14:30:40,047:INFO:Starting cross validation
2024-07-25 14:30:40,056:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:30:43,221:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:43,226:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:43,230:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:43,398:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:43,402:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:43,406:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:43,417:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:43,421:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:43,426:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:43,426:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:43,430:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:43,434:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:43,441:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:43,445:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:43,449:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:43,452:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:43,456:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:43,461:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:43,562:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:43,566:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:43,570:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:43,616:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:43,620:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:43,624:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:44,430:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:44,434:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:44,438:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:44,490:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:44,494:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:44,498:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:44,519:INFO:Calculating mean and std
2024-07-25 14:30:44,520:INFO:Creating metrics dataframe
2024-07-25 14:30:44,521:INFO:Uploading results into container
2024-07-25 14:30:44,522:INFO:Uploading model into container now
2024-07-25 14:30:44,522:INFO:_master_model_container: 5
2024-07-25 14:30:44,522:INFO:_display_container: 2
2024-07-25 14:30:44,523:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-25 14:30:44,523:INFO:create_model() successfully completed......................................
2024-07-25 14:30:44,600:INFO:SubProcess create_model() end ==================================
2024-07-25 14:30:44,601:INFO:Creating metrics dataframe
2024-07-25 14:30:44,606:INFO:Initializing Ridge Classifier
2024-07-25 14:30:44,606:INFO:Total runtime is 0.38711469968159995 minutes
2024-07-25 14:30:44,608:INFO:SubProcess create_model() called ==================================
2024-07-25 14:30:44,608:INFO:Initializing create_model()
2024-07-25 14:30:44,608:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1777ad1c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:30:44,608:INFO:Checking exceptions
2024-07-25 14:30:44,608:INFO:Importing libraries
2024-07-25 14:30:44,608:INFO:Copying training dataset
2024-07-25 14:30:44,612:INFO:Defining folds
2024-07-25 14:30:44,612:INFO:Declaring metric variables
2024-07-25 14:30:44,614:INFO:Importing untrained model
2024-07-25 14:30:44,616:INFO:Ridge Classifier Imported successfully
2024-07-25 14:30:44,621:INFO:Starting cross validation
2024-07-25 14:30:44,629:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:30:48,008:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:48,013:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:48,017:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:48,222:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:48,227:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:48,231:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:48,231:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:48,233:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:48,236:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:48,236:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:48,237:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:48,238:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:48,240:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:48,240:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:48,242:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:48,245:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:48,249:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:48,254:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:48,345:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:48,350:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:48,356:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:48,365:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:48,370:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:48,375:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:49,278:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:49,282:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:49,286:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:49,307:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:49,311:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:49,315:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:49,325:INFO:Calculating mean and std
2024-07-25 14:30:49,328:INFO:Creating metrics dataframe
2024-07-25 14:30:49,332:INFO:Uploading results into container
2024-07-25 14:30:49,332:INFO:Uploading model into container now
2024-07-25 14:30:49,333:INFO:_master_model_container: 6
2024-07-25 14:30:49,333:INFO:_display_container: 2
2024-07-25 14:30:49,333:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-07-25 14:30:49,333:INFO:create_model() successfully completed......................................
2024-07-25 14:30:49,436:INFO:SubProcess create_model() end ==================================
2024-07-25 14:30:49,436:INFO:Creating metrics dataframe
2024-07-25 14:30:49,442:INFO:Initializing Random Forest Classifier
2024-07-25 14:30:49,442:INFO:Total runtime is 0.4677109479904175 minutes
2024-07-25 14:30:49,444:INFO:SubProcess create_model() called ==================================
2024-07-25 14:30:49,444:INFO:Initializing create_model()
2024-07-25 14:30:49,444:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1777ad1c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:30:49,444:INFO:Checking exceptions
2024-07-25 14:30:49,444:INFO:Importing libraries
2024-07-25 14:30:49,444:INFO:Copying training dataset
2024-07-25 14:30:49,449:INFO:Defining folds
2024-07-25 14:30:49,449:INFO:Declaring metric variables
2024-07-25 14:30:49,451:INFO:Importing untrained model
2024-07-25 14:30:49,454:INFO:Random Forest Classifier Imported successfully
2024-07-25 14:30:49,458:INFO:Starting cross validation
2024-07-25 14:30:49,467:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:30:53,260:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:53,273:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:53,276:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:53,284:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:53,291:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:53,298:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:53,341:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:53,353:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:53,368:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:53,397:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:53,409:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:53,425:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:53,426:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:53,437:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:53,448:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:53,530:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:53,541:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:53,546:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:53,550:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:53,554:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:53,562:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:53,686:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:53,692:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:53,697:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:54,797:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:54,802:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:54,807:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:54,851:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:54,856:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:54,861:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:54,878:INFO:Calculating mean and std
2024-07-25 14:30:54,878:INFO:Creating metrics dataframe
2024-07-25 14:30:54,880:INFO:Uploading results into container
2024-07-25 14:30:54,881:INFO:Uploading model into container now
2024-07-25 14:30:54,881:INFO:_master_model_container: 7
2024-07-25 14:30:54,881:INFO:_display_container: 2
2024-07-25 14:30:54,882:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-07-25 14:30:54,882:INFO:create_model() successfully completed......................................
2024-07-25 14:30:54,964:INFO:SubProcess create_model() end ==================================
2024-07-25 14:30:54,964:INFO:Creating metrics dataframe
2024-07-25 14:30:54,969:INFO:Initializing Quadratic Discriminant Analysis
2024-07-25 14:30:54,969:INFO:Total runtime is 0.559840468565623 minutes
2024-07-25 14:30:54,972:INFO:SubProcess create_model() called ==================================
2024-07-25 14:30:54,972:INFO:Initializing create_model()
2024-07-25 14:30:54,972:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=qda, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1777ad1c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:30:54,972:INFO:Checking exceptions
2024-07-25 14:30:54,973:INFO:Importing libraries
2024-07-25 14:30:54,973:INFO:Copying training dataset
2024-07-25 14:30:54,977:INFO:Defining folds
2024-07-25 14:30:54,977:INFO:Declaring metric variables
2024-07-25 14:30:54,979:INFO:Importing untrained model
2024-07-25 14:30:54,981:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-25 14:30:54,987:INFO:Starting cross validation
2024-07-25 14:30:54,995:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:30:58,644:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:58,652:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:58,660:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:58,751:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:30:58,770:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:30:58,785:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:58,789:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:58,794:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:58,814:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-25 14:30:58,814:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-25 14:30:58,814:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-25 14:30:58,817:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-25 14:30:58,817:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-25 14:30:58,817:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-25 14:30:58,826:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-25 14:30:58,826:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:58,828:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:58,830:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:58,833:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:58,833:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:58,835:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:30:58,836:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:30:58,837:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:58,838:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:58,838:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:58,838:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:58,842:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:58,846:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:58,849:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:58,851:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:58,858:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:58,862:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:58,864:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:58,867:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:58,871:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:59,801:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:30:59,849:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:59,853:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:59,855:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:30:59,857:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:59,890:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:59,894:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:59,898:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:30:59,914:INFO:Calculating mean and std
2024-07-25 14:30:59,915:INFO:Creating metrics dataframe
2024-07-25 14:30:59,917:INFO:Uploading results into container
2024-07-25 14:30:59,917:INFO:Uploading model into container now
2024-07-25 14:30:59,917:INFO:_master_model_container: 8
2024-07-25 14:30:59,917:INFO:_display_container: 2
2024-07-25 14:30:59,917:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-25 14:30:59,918:INFO:create_model() successfully completed......................................
2024-07-25 14:30:59,995:INFO:SubProcess create_model() end ==================================
2024-07-25 14:30:59,996:INFO:Creating metrics dataframe
2024-07-25 14:31:00,002:INFO:Initializing Ada Boost Classifier
2024-07-25 14:31:00,002:INFO:Total runtime is 0.6437147339185079 minutes
2024-07-25 14:31:00,004:INFO:SubProcess create_model() called ==================================
2024-07-25 14:31:00,004:INFO:Initializing create_model()
2024-07-25 14:31:00,004:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1777ad1c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:31:00,004:INFO:Checking exceptions
2024-07-25 14:31:00,005:INFO:Importing libraries
2024-07-25 14:31:00,005:INFO:Copying training dataset
2024-07-25 14:31:00,009:INFO:Defining folds
2024-07-25 14:31:00,009:INFO:Declaring metric variables
2024-07-25 14:31:00,011:INFO:Importing untrained model
2024-07-25 14:31:00,013:INFO:Ada Boost Classifier Imported successfully
2024-07-25 14:31:00,017:INFO:Starting cross validation
2024-07-25 14:31:00,025:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:31:02,963:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:31:03,306:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:31:03,335:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:31:03,338:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:31:03,365:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:31:03,391:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:03,395:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:03,400:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:03,422:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:31:03,439:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:31:03,555:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:31:03,563:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:03,570:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:03,576:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:03,576:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:03,578:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:03,583:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:03,583:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:03,585:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:03,588:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:03,589:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:03,591:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:03,596:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:03,602:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:03,607:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:03,612:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:03,628:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:03,633:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:03,638:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:03,739:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:03,744:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:03,751:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:04,568:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:31:04,688:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:31:04,716:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:04,720:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:04,724:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:04,839:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:04,843:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:04,847:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:04,863:INFO:Calculating mean and std
2024-07-25 14:31:04,865:INFO:Creating metrics dataframe
2024-07-25 14:31:04,868:INFO:Uploading results into container
2024-07-25 14:31:04,868:INFO:Uploading model into container now
2024-07-25 14:31:04,869:INFO:_master_model_container: 9
2024-07-25 14:31:04,869:INFO:_display_container: 2
2024-07-25 14:31:04,869:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-07-25 14:31:04,869:INFO:create_model() successfully completed......................................
2024-07-25 14:31:04,959:INFO:SubProcess create_model() end ==================================
2024-07-25 14:31:04,959:INFO:Creating metrics dataframe
2024-07-25 14:31:04,965:INFO:Initializing Gradient Boosting Classifier
2024-07-25 14:31:04,965:INFO:Total runtime is 0.7264344692230225 minutes
2024-07-25 14:31:04,967:INFO:SubProcess create_model() called ==================================
2024-07-25 14:31:04,967:INFO:Initializing create_model()
2024-07-25 14:31:04,967:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=gbc, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1777ad1c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:31:04,967:INFO:Checking exceptions
2024-07-25 14:31:04,967:INFO:Importing libraries
2024-07-25 14:31:04,967:INFO:Copying training dataset
2024-07-25 14:31:04,972:INFO:Defining folds
2024-07-25 14:31:04,972:INFO:Declaring metric variables
2024-07-25 14:31:04,974:INFO:Importing untrained model
2024-07-25 14:31:04,976:INFO:Gradient Boosting Classifier Imported successfully
2024-07-25 14:31:04,981:INFO:Starting cross validation
2024-07-25 14:31:04,989:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:31:08,607:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:08,615:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:08,624:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:08,625:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:08,636:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:08,646:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:08,697:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:08,708:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:08,719:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:08,943:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:08,951:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:08,959:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:08,963:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:08,971:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:08,979:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:09,041:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:09,048:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:09,055:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:09,075:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:09,081:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:09,082:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:09,088:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:09,088:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:09,096:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:10,147:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:10,151:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:10,156:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:10,181:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:10,185:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:10,189:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:10,198:INFO:Calculating mean and std
2024-07-25 14:31:10,198:INFO:Creating metrics dataframe
2024-07-25 14:31:10,200:INFO:Uploading results into container
2024-07-25 14:31:10,200:INFO:Uploading model into container now
2024-07-25 14:31:10,201:INFO:_master_model_container: 10
2024-07-25 14:31:10,201:INFO:_display_container: 2
2024-07-25 14:31:10,201:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-25 14:31:10,201:INFO:create_model() successfully completed......................................
2024-07-25 14:31:10,280:INFO:SubProcess create_model() end ==================================
2024-07-25 14:31:10,280:INFO:Creating metrics dataframe
2024-07-25 14:31:10,287:INFO:Initializing Linear Discriminant Analysis
2024-07-25 14:31:10,287:INFO:Total runtime is 0.8151298006375631 minutes
2024-07-25 14:31:10,289:INFO:SubProcess create_model() called ==================================
2024-07-25 14:31:10,289:INFO:Initializing create_model()
2024-07-25 14:31:10,289:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=lda, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1777ad1c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:31:10,289:INFO:Checking exceptions
2024-07-25 14:31:10,289:INFO:Importing libraries
2024-07-25 14:31:10,289:INFO:Copying training dataset
2024-07-25 14:31:10,293:INFO:Defining folds
2024-07-25 14:31:10,294:INFO:Declaring metric variables
2024-07-25 14:31:10,295:INFO:Importing untrained model
2024-07-25 14:31:10,297:INFO:Linear Discriminant Analysis Imported successfully
2024-07-25 14:31:10,301:INFO:Starting cross validation
2024-07-25 14:31:10,309:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:31:13,654:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:13,662:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:13,777:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:13,918:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:13,929:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:13,939:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:13,946:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:13,952:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:13,958:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:13,967:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:13,975:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:13,981:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:14,000:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:14,006:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:14,011:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:14,011:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:14,015:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:14,016:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:14,020:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:14,022:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:14,025:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:14,049:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:14,054:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:14,060:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:15,050:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:15,055:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:15,059:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:15,080:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:15,084:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:15,088:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:15,102:INFO:Calculating mean and std
2024-07-25 14:31:15,104:INFO:Creating metrics dataframe
2024-07-25 14:31:15,106:INFO:Uploading results into container
2024-07-25 14:31:15,106:INFO:Uploading model into container now
2024-07-25 14:31:15,107:INFO:_master_model_container: 11
2024-07-25 14:31:15,107:INFO:_display_container: 2
2024-07-25 14:31:15,107:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-25 14:31:15,107:INFO:create_model() successfully completed......................................
2024-07-25 14:31:15,192:INFO:SubProcess create_model() end ==================================
2024-07-25 14:31:15,192:INFO:Creating metrics dataframe
2024-07-25 14:31:15,199:INFO:Initializing Extra Trees Classifier
2024-07-25 14:31:15,199:INFO:Total runtime is 0.896996815999349 minutes
2024-07-25 14:31:15,201:INFO:SubProcess create_model() called ==================================
2024-07-25 14:31:15,201:INFO:Initializing create_model()
2024-07-25 14:31:15,201:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1777ad1c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:31:15,201:INFO:Checking exceptions
2024-07-25 14:31:15,201:INFO:Importing libraries
2024-07-25 14:31:15,201:INFO:Copying training dataset
2024-07-25 14:31:15,206:INFO:Defining folds
2024-07-25 14:31:15,206:INFO:Declaring metric variables
2024-07-25 14:31:15,209:INFO:Importing untrained model
2024-07-25 14:31:15,212:INFO:Extra Trees Classifier Imported successfully
2024-07-25 14:31:15,216:INFO:Starting cross validation
2024-07-25 14:31:15,226:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:31:18,857:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:18,861:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:18,865:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:19,174:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:19,174:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:19,184:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:19,184:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:19,194:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:19,194:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:19,202:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:19,214:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:19,247:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:19,255:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:19,264:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:19,266:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:19,273:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:19,277:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:19,287:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:19,464:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:19,471:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:19,478:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:19,500:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:19,506:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:19,512:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:20,272:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:20,276:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:20,280:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:20,516:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:20,520:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:20,524:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:20,539:INFO:Calculating mean and std
2024-07-25 14:31:20,540:INFO:Creating metrics dataframe
2024-07-25 14:31:20,542:INFO:Uploading results into container
2024-07-25 14:31:20,543:INFO:Uploading model into container now
2024-07-25 14:31:20,543:INFO:_master_model_container: 12
2024-07-25 14:31:20,543:INFO:_display_container: 2
2024-07-25 14:31:20,543:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-07-25 14:31:20,543:INFO:create_model() successfully completed......................................
2024-07-25 14:31:20,641:INFO:SubProcess create_model() end ==================================
2024-07-25 14:31:20,641:INFO:Creating metrics dataframe
2024-07-25 14:31:20,648:INFO:Initializing Light Gradient Boosting Machine
2024-07-25 14:31:20,648:INFO:Total runtime is 0.9878148357073466 minutes
2024-07-25 14:31:20,650:INFO:SubProcess create_model() called ==================================
2024-07-25 14:31:20,650:INFO:Initializing create_model()
2024-07-25 14:31:20,650:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1777ad1c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:31:20,650:INFO:Checking exceptions
2024-07-25 14:31:20,650:INFO:Importing libraries
2024-07-25 14:31:20,650:INFO:Copying training dataset
2024-07-25 14:31:20,655:INFO:Defining folds
2024-07-25 14:31:20,655:INFO:Declaring metric variables
2024-07-25 14:31:20,657:INFO:Importing untrained model
2024-07-25 14:31:20,659:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-25 14:31:20,664:INFO:Starting cross validation
2024-07-25 14:31:20,672:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:31:24,790:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:24,794:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:24,807:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:24,873:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:24,880:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:24,888:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:24,906:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:24,915:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:24,926:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:25,010:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:25,015:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:25,018:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:25,020:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:25,023:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:25,023:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:25,028:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:25,029:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:25,034:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:25,079:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:25,084:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:25,089:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:25,198:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:25,204:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:25,209:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:26,225:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:26,229:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:26,233:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:26,304:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:26,309:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:26,313:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:26,331:INFO:Calculating mean and std
2024-07-25 14:31:26,331:INFO:Creating metrics dataframe
2024-07-25 14:31:26,333:INFO:Uploading results into container
2024-07-25 14:31:26,334:INFO:Uploading model into container now
2024-07-25 14:31:26,334:INFO:_master_model_container: 13
2024-07-25 14:31:26,334:INFO:_display_container: 2
2024-07-25 14:31:26,334:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-25 14:31:26,334:INFO:create_model() successfully completed......................................
2024-07-25 14:31:26,413:INFO:SubProcess create_model() end ==================================
2024-07-25 14:31:26,413:INFO:Creating metrics dataframe
2024-07-25 14:31:26,420:INFO:Initializing Dummy Classifier
2024-07-25 14:31:26,420:INFO:Total runtime is 1.0840162833531697 minutes
2024-07-25 14:31:26,422:INFO:SubProcess create_model() called ==================================
2024-07-25 14:31:26,422:INFO:Initializing create_model()
2024-07-25 14:31:26,422:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1777ad1c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:31:26,422:INFO:Checking exceptions
2024-07-25 14:31:26,422:INFO:Importing libraries
2024-07-25 14:31:26,422:INFO:Copying training dataset
2024-07-25 14:31:26,427:INFO:Defining folds
2024-07-25 14:31:26,427:INFO:Declaring metric variables
2024-07-25 14:31:26,429:INFO:Importing untrained model
2024-07-25 14:31:26,431:INFO:Dummy Classifier Imported successfully
2024-07-25 14:31:26,434:INFO:Starting cross validation
2024-07-25 14:31:26,443:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:31:29,728:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:29,735:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:29,740:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:31:29,744:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:29,818:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:29,831:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:29,836:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:31:29,840:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:29,846:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:29,851:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:29,854:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:31:29,858:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:29,895:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:29,901:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:29,904:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:31:29,906:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:29,943:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:29,948:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:29,950:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:31:29,953:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:29,955:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:29,960:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:29,963:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:31:29,965:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:30,000:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:30,005:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:30,008:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:31:30,011:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:30,088:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:30,094:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:30,097:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:31:30,099:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:30,996:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:31,001:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:31,003:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:31:31,005:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:31,025:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:31,030:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:31,032:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:31:31,034:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:31,044:INFO:Calculating mean and std
2024-07-25 14:31:31,046:INFO:Creating metrics dataframe
2024-07-25 14:31:31,051:INFO:Uploading results into container
2024-07-25 14:31:31,052:INFO:Uploading model into container now
2024-07-25 14:31:31,052:INFO:_master_model_container: 14
2024-07-25 14:31:31,052:INFO:_display_container: 2
2024-07-25 14:31:31,052:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-07-25 14:31:31,052:INFO:create_model() successfully completed......................................
2024-07-25 14:31:31,141:INFO:SubProcess create_model() end ==================================
2024-07-25 14:31:31,141:INFO:Creating metrics dataframe
2024-07-25 14:31:31,148:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-25 14:31:31,153:INFO:Initializing create_model()
2024-07-25 14:31:31,154:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:31:31,154:INFO:Checking exceptions
2024-07-25 14:31:31,155:INFO:Importing libraries
2024-07-25 14:31:31,155:INFO:Copying training dataset
2024-07-25 14:31:31,159:INFO:Defining folds
2024-07-25 14:31:31,159:INFO:Declaring metric variables
2024-07-25 14:31:31,159:INFO:Importing untrained model
2024-07-25 14:31:31,159:INFO:Declaring custom model
2024-07-25 14:31:31,160:INFO:Decision Tree Classifier Imported successfully
2024-07-25 14:31:31,166:INFO:Cross validation set to False
2024-07-25 14:31:31,167:INFO:Fitting Model
2024-07-25 14:31:31,466:INFO:[LightGBM] [Info] Number of positive: 2945, number of negative: 2945
2024-07-25 14:31:31,471:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.002226 seconds.
2024-07-25 14:31:31,471:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-07-25 14:31:31,471:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-07-25 14:31:31,471:INFO:[LightGBM] [Info] Total Bins 320
2024-07-25 14:31:31,471:INFO:[LightGBM] [Info] Number of data points in the train set: 5890, number of used features: 99
2024-07-25 14:31:31,472:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2024-07-25 14:31:31,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,477:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,480:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,483:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,489:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,495:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,505:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,509:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,513:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,517:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,526:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,530:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,534:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,543:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,565:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,578:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,587:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,596:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,601:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,622:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,626:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,640:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,645:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,649:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,668:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,691:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,696:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,700:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,709:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,718:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,749:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,758:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,776:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,784:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,793:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,797:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,825:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,829:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,833:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,842:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,846:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,874:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,883:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,887:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:31:31,915:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-07-25 14:31:31,915:INFO:create_model() successfully completed......................................
2024-07-25 14:31:31,998:INFO:Creating Dashboard logs
2024-07-25 14:31:32,001:INFO:Model: Decision Tree Classifier
2024-07-25 14:31:32,046:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 123, 'splitter': 'best'}
2024-07-25 14:31:32,155:INFO:Initializing predict_model()
2024-07-25 14:31:32,155:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1685034c0>)
2024-07-25 14:31:32,155:INFO:Checking exceptions
2024-07-25 14:31:32,156:INFO:Preloading libraries
2024-07-25 14:31:32,274:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:32,289:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:32,305:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:31:32,541:INFO:Creating Dashboard logs
2024-07-25 14:31:32,544:INFO:Model: Random Forest Classifier
2024-07-25 14:31:32,562:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-07-25 14:31:32,798:INFO:Creating Dashboard logs
2024-07-25 14:31:32,801:INFO:Model: Gradient Boosting Classifier
2024-07-25 14:31:32,819:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-07-25 14:31:33,031:INFO:Creating Dashboard logs
2024-07-25 14:31:33,033:INFO:Model: Extra Trees Classifier
2024-07-25 14:31:33,051:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-07-25 14:31:33,266:INFO:Creating Dashboard logs
2024-07-25 14:31:33,269:INFO:Model: Light Gradient Boosting Machine
2024-07-25 14:31:33,286:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-07-25 14:31:33,523:INFO:Creating Dashboard logs
2024-07-25 14:31:33,525:INFO:Model: K Neighbors Classifier
2024-07-25 14:31:33,542:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-07-25 14:31:33,762:INFO:Creating Dashboard logs
2024-07-25 14:31:33,764:INFO:Model: SVM - Linear Kernel
2024-07-25 14:31:33,781:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 123, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-07-25 14:31:33,995:INFO:Creating Dashboard logs
2024-07-25 14:31:33,997:INFO:Model: Ridge Classifier
2024-07-25 14:31:34,014:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 123, 'solver': 'auto', 'tol': 0.0001}
2024-07-25 14:31:34,221:INFO:Creating Dashboard logs
2024-07-25 14:31:34,223:INFO:Model: Linear Discriminant Analysis
2024-07-25 14:31:34,239:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2024-07-25 14:31:34,442:INFO:Creating Dashboard logs
2024-07-25 14:31:34,444:INFO:Model: Logistic Regression
2024-07-25 14:31:34,461:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-07-25 14:31:34,668:INFO:Creating Dashboard logs
2024-07-25 14:31:34,670:INFO:Model: Ada Boost Classifier
2024-07-25 14:31:34,687:INFO:Logged params: {'algorithm': 'SAMME.R', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 123}
2024-07-25 14:31:34,897:INFO:Creating Dashboard logs
2024-07-25 14:31:34,900:INFO:Model: Naive Bayes
2024-07-25 14:31:34,916:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2024-07-25 14:31:35,124:INFO:Creating Dashboard logs
2024-07-25 14:31:35,127:INFO:Model: Quadratic Discriminant Analysis
2024-07-25 14:31:35,175:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2024-07-25 14:31:35,410:INFO:Creating Dashboard logs
2024-07-25 14:31:35,412:INFO:Model: Dummy Classifier
2024-07-25 14:31:35,430:INFO:Logged params: {'constant': None, 'random_state': 123, 'strategy': 'prior'}
2024-07-25 14:31:35,642:INFO:_master_model_container: 14
2024-07-25 14:31:35,642:INFO:_display_container: 2
2024-07-25 14:31:35,642:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-07-25 14:31:35,642:INFO:compare_models() successfully completed......................................
2024-07-25 14:32:09,937:INFO:Initializing plot_model()
2024-07-25 14:32:09,939:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, system=True)
2024-07-25 14:32:09,939:INFO:Checking exceptions
2024-07-25 14:36:10,411:INFO:Initializing compare_models()
2024-07-25 14:36:10,413:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-25 14:36:10,413:INFO:Checking exceptions
2024-07-25 14:36:10,425:INFO:Preparing display monitor
2024-07-25 14:36:10,450:INFO:Initializing Logistic Regression
2024-07-25 14:36:10,450:INFO:Total runtime is 3.9656956990559895e-06 minutes
2024-07-25 14:36:10,453:INFO:SubProcess create_model() called ==================================
2024-07-25 14:36:10,454:INFO:Initializing create_model()
2024-07-25 14:36:10,454:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1687d8340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:36:10,454:INFO:Checking exceptions
2024-07-25 14:36:10,454:INFO:Importing libraries
2024-07-25 14:36:10,454:INFO:Copying training dataset
2024-07-25 14:36:10,463:INFO:Defining folds
2024-07-25 14:36:10,463:INFO:Declaring metric variables
2024-07-25 14:36:10,466:INFO:Importing untrained model
2024-07-25 14:36:10,468:INFO:Logistic Regression Imported successfully
2024-07-25 14:36:10,473:INFO:Starting cross validation
2024-07-25 14:36:10,486:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:36:14,190:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:36:14,208:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:36:14,234:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:36:14,290:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:36:14,295:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:36:14,300:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:36:14,305:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:36:14,306:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:36:14,309:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:36:14,327:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:36:14,328:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:36:14,332:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:36:14,334:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:36:14,338:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:36:14,340:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:36:14,341:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:36:14,348:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:36:14,353:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:36:14,362:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:36:14,367:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:36:14,372:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:36:14,417:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:36:14,422:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:36:14,426:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:43,409:INFO:Initializing compare_models()
2024-07-25 14:37:43,409:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-25 14:37:43,410:INFO:Checking exceptions
2024-07-25 14:37:43,416:INFO:Preparing display monitor
2024-07-25 14:37:43,441:INFO:Initializing Logistic Regression
2024-07-25 14:37:43,441:INFO:Total runtime is 3.4888585408528645e-06 minutes
2024-07-25 14:37:43,444:INFO:SubProcess create_model() called ==================================
2024-07-25 14:37:43,444:INFO:Initializing create_model()
2024-07-25 14:37:43,444:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a77ad30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:37:43,445:INFO:Checking exceptions
2024-07-25 14:37:43,445:INFO:Importing libraries
2024-07-25 14:37:43,445:INFO:Copying training dataset
2024-07-25 14:37:43,452:INFO:Defining folds
2024-07-25 14:37:43,452:INFO:Declaring metric variables
2024-07-25 14:37:43,454:INFO:Importing untrained model
2024-07-25 14:37:43,457:INFO:Logistic Regression Imported successfully
2024-07-25 14:37:43,462:INFO:Starting cross validation
2024-07-25 14:37:43,470:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:37:50,879:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:50,884:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:50,888:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:51,226:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:51,232:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:51,237:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:51,238:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:51,239:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:51,246:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:51,246:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:51,247:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:51,251:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:51,252:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:51,257:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:51,258:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:51,263:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:51,266:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:51,268:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:51,275:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:51,276:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:51,282:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:51,375:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:51,380:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:51,385:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:52,391:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:52,395:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:52,400:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:52,471:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:52,475:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:52,479:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:52,490:INFO:Calculating mean and std
2024-07-25 14:37:52,493:INFO:Creating metrics dataframe
2024-07-25 14:37:52,498:INFO:Uploading results into container
2024-07-25 14:37:52,499:INFO:Uploading model into container now
2024-07-25 14:37:52,500:INFO:_master_model_container: 15
2024-07-25 14:37:52,500:INFO:_display_container: 3
2024-07-25 14:37:52,500:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-25 14:37:52,500:INFO:create_model() successfully completed......................................
2024-07-25 14:37:52,664:INFO:SubProcess create_model() end ==================================
2024-07-25 14:37:52,665:INFO:Creating metrics dataframe
2024-07-25 14:37:52,669:INFO:Initializing K Neighbors Classifier
2024-07-25 14:37:52,669:INFO:Total runtime is 0.15380185445149738 minutes
2024-07-25 14:37:52,671:INFO:SubProcess create_model() called ==================================
2024-07-25 14:37:52,672:INFO:Initializing create_model()
2024-07-25 14:37:52,672:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a77ad30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:37:52,672:INFO:Checking exceptions
2024-07-25 14:37:52,672:INFO:Importing libraries
2024-07-25 14:37:52,672:INFO:Copying training dataset
2024-07-25 14:37:52,677:INFO:Defining folds
2024-07-25 14:37:52,677:INFO:Declaring metric variables
2024-07-25 14:37:52,679:INFO:Importing untrained model
2024-07-25 14:37:52,682:INFO:K Neighbors Classifier Imported successfully
2024-07-25 14:37:52,686:INFO:Starting cross validation
2024-07-25 14:37:52,702:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:37:56,107:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:56,113:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:56,118:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:56,233:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:56,237:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:56,241:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:56,260:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:56,265:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:56,270:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:56,289:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:56,294:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:56,299:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:56,360:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:56,366:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:56,372:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:56,373:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:56,378:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:56,379:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:56,656:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:56,665:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:56,669:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:56,673:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:56,677:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:56,685:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:57,523:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:57,529:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:57,534:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:57,666:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:57,670:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:57,674:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:37:57,687:INFO:Calculating mean and std
2024-07-25 14:37:57,688:INFO:Creating metrics dataframe
2024-07-25 14:37:57,690:INFO:Uploading results into container
2024-07-25 14:37:57,691:INFO:Uploading model into container now
2024-07-25 14:37:57,691:INFO:_master_model_container: 16
2024-07-25 14:37:57,691:INFO:_display_container: 3
2024-07-25 14:37:57,691:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-25 14:37:57,691:INFO:create_model() successfully completed......................................
2024-07-25 14:37:57,780:INFO:SubProcess create_model() end ==================================
2024-07-25 14:37:57,781:INFO:Creating metrics dataframe
2024-07-25 14:37:57,785:INFO:Initializing Naive Bayes
2024-07-25 14:37:57,786:INFO:Total runtime is 0.23907229900360105 minutes
2024-07-25 14:37:57,788:INFO:SubProcess create_model() called ==================================
2024-07-25 14:37:57,788:INFO:Initializing create_model()
2024-07-25 14:37:57,788:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=nb, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a77ad30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:37:57,788:INFO:Checking exceptions
2024-07-25 14:37:57,788:INFO:Importing libraries
2024-07-25 14:37:57,788:INFO:Copying training dataset
2024-07-25 14:37:57,792:INFO:Defining folds
2024-07-25 14:37:57,792:INFO:Declaring metric variables
2024-07-25 14:37:57,794:INFO:Importing untrained model
2024-07-25 14:37:57,797:INFO:Naive Bayes Imported successfully
2024-07-25 14:37:57,801:INFO:Starting cross validation
2024-07-25 14:37:57,810:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:38:01,189:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:01,196:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:01,202:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:01,204:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:01,209:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:01,216:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:01,237:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:01,246:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:01,257:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:01,321:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:01,326:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:01,329:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:01,331:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:01,335:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:01,340:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:01,364:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:01,369:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:01,374:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:01,479:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:01,484:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:01,489:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:01,519:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:01,524:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:01,529:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:02,402:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:02,406:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:02,410:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:02,435:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:02,439:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:02,444:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:02,460:INFO:Calculating mean and std
2024-07-25 14:38:02,462:INFO:Creating metrics dataframe
2024-07-25 14:38:02,464:INFO:Uploading results into container
2024-07-25 14:38:02,464:INFO:Uploading model into container now
2024-07-25 14:38:02,465:INFO:_master_model_container: 17
2024-07-25 14:38:02,465:INFO:_display_container: 3
2024-07-25 14:38:02,465:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-25 14:38:02,465:INFO:create_model() successfully completed......................................
2024-07-25 14:38:02,557:INFO:SubProcess create_model() end ==================================
2024-07-25 14:38:02,557:INFO:Creating metrics dataframe
2024-07-25 14:38:02,562:INFO:Initializing Decision Tree Classifier
2024-07-25 14:38:02,563:INFO:Total runtime is 0.31869003772735593 minutes
2024-07-25 14:38:02,565:INFO:SubProcess create_model() called ==================================
2024-07-25 14:38:02,565:INFO:Initializing create_model()
2024-07-25 14:38:02,565:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a77ad30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:38:02,565:INFO:Checking exceptions
2024-07-25 14:38:02,565:INFO:Importing libraries
2024-07-25 14:38:02,565:INFO:Copying training dataset
2024-07-25 14:38:02,570:INFO:Defining folds
2024-07-25 14:38:02,570:INFO:Declaring metric variables
2024-07-25 14:38:02,573:INFO:Importing untrained model
2024-07-25 14:38:02,575:INFO:Decision Tree Classifier Imported successfully
2024-07-25 14:38:02,580:INFO:Starting cross validation
2024-07-25 14:38:02,588:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:38:06,060:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:06,065:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:06,070:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:06,152:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:06,157:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:06,165:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:06,171:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:06,172:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:06,172:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:06,175:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:06,176:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:06,176:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:06,181:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:06,181:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:06,182:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:06,225:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:06,230:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:06,235:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:06,239:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:06,243:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:06,248:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:06,287:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:06,292:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:06,297:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:07,169:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:07,173:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:07,177:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:07,222:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:07,226:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:07,231:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:07,237:INFO:Calculating mean and std
2024-07-25 14:38:07,238:INFO:Creating metrics dataframe
2024-07-25 14:38:07,240:INFO:Uploading results into container
2024-07-25 14:38:07,241:INFO:Uploading model into container now
2024-07-25 14:38:07,241:INFO:_master_model_container: 18
2024-07-25 14:38:07,241:INFO:_display_container: 3
2024-07-25 14:38:07,241:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-07-25 14:38:07,241:INFO:create_model() successfully completed......................................
2024-07-25 14:38:07,382:INFO:SubProcess create_model() end ==================================
2024-07-25 14:38:07,382:INFO:Creating metrics dataframe
2024-07-25 14:38:07,387:INFO:Initializing SVM - Linear Kernel
2024-07-25 14:38:07,387:INFO:Total runtime is 0.39910093545913694 minutes
2024-07-25 14:38:07,389:INFO:SubProcess create_model() called ==================================
2024-07-25 14:38:07,390:INFO:Initializing create_model()
2024-07-25 14:38:07,390:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=svm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a77ad30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:38:07,390:INFO:Checking exceptions
2024-07-25 14:38:07,390:INFO:Importing libraries
2024-07-25 14:38:07,390:INFO:Copying training dataset
2024-07-25 14:38:07,394:INFO:Defining folds
2024-07-25 14:38:07,395:INFO:Declaring metric variables
2024-07-25 14:38:07,397:INFO:Importing untrained model
2024-07-25 14:38:07,399:INFO:SVM - Linear Kernel Imported successfully
2024-07-25 14:38:07,403:INFO:Starting cross validation
2024-07-25 14:38:07,412:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:38:10,655:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:10,678:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:10,699:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:10,786:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:10,792:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:10,807:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:10,814:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:10,821:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:10,829:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:10,841:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:10,845:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:10,848:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:10,850:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:10,853:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:10,857:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:10,861:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:10,866:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:10,871:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:10,873:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:10,877:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:10,882:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:10,925:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:10,929:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:10,934:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:11,847:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:11,852:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:11,857:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:11,910:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:11,915:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:11,919:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:11,927:INFO:Calculating mean and std
2024-07-25 14:38:11,928:INFO:Creating metrics dataframe
2024-07-25 14:38:11,929:INFO:Uploading results into container
2024-07-25 14:38:11,930:INFO:Uploading model into container now
2024-07-25 14:38:11,930:INFO:_master_model_container: 19
2024-07-25 14:38:11,930:INFO:_display_container: 3
2024-07-25 14:38:11,931:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-25 14:38:11,931:INFO:create_model() successfully completed......................................
2024-07-25 14:38:12,020:INFO:SubProcess create_model() end ==================================
2024-07-25 14:38:12,020:INFO:Creating metrics dataframe
2024-07-25 14:38:12,025:INFO:Initializing Ridge Classifier
2024-07-25 14:38:12,025:INFO:Total runtime is 0.47639987071355183 minutes
2024-07-25 14:38:12,027:INFO:SubProcess create_model() called ==================================
2024-07-25 14:38:12,027:INFO:Initializing create_model()
2024-07-25 14:38:12,027:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a77ad30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:38:12,027:INFO:Checking exceptions
2024-07-25 14:38:12,027:INFO:Importing libraries
2024-07-25 14:38:12,028:INFO:Copying training dataset
2024-07-25 14:38:12,032:INFO:Defining folds
2024-07-25 14:38:12,032:INFO:Declaring metric variables
2024-07-25 14:38:12,034:INFO:Importing untrained model
2024-07-25 14:38:12,036:INFO:Ridge Classifier Imported successfully
2024-07-25 14:38:12,041:INFO:Starting cross validation
2024-07-25 14:38:12,049:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:38:15,692:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:15,697:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:15,702:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:15,716:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:15,721:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:15,721:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:15,724:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:15,726:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:15,726:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:15,729:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:15,731:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:15,733:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:15,735:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:15,739:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:15,740:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:15,744:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:15,749:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:15,752:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:15,794:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:15,799:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:15,804:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:15,808:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:15,813:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:15,818:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:16,843:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:16,847:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:16,848:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:16,851:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:16,852:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:16,856:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:16,868:INFO:Calculating mean and std
2024-07-25 14:38:16,869:INFO:Creating metrics dataframe
2024-07-25 14:38:16,871:INFO:Uploading results into container
2024-07-25 14:38:16,871:INFO:Uploading model into container now
2024-07-25 14:38:16,871:INFO:_master_model_container: 20
2024-07-25 14:38:16,872:INFO:_display_container: 3
2024-07-25 14:38:16,872:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-07-25 14:38:16,872:INFO:create_model() successfully completed......................................
2024-07-25 14:38:16,962:INFO:SubProcess create_model() end ==================================
2024-07-25 14:38:16,962:INFO:Creating metrics dataframe
2024-07-25 14:38:16,968:INFO:Initializing Random Forest Classifier
2024-07-25 14:38:16,968:INFO:Total runtime is 0.5587747017542521 minutes
2024-07-25 14:38:16,970:INFO:SubProcess create_model() called ==================================
2024-07-25 14:38:16,970:INFO:Initializing create_model()
2024-07-25 14:38:16,970:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a77ad30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:38:16,970:INFO:Checking exceptions
2024-07-25 14:38:16,970:INFO:Importing libraries
2024-07-25 14:38:16,970:INFO:Copying training dataset
2024-07-25 14:38:16,975:INFO:Defining folds
2024-07-25 14:38:16,975:INFO:Declaring metric variables
2024-07-25 14:38:16,977:INFO:Importing untrained model
2024-07-25 14:38:16,979:INFO:Random Forest Classifier Imported successfully
2024-07-25 14:38:16,984:INFO:Starting cross validation
2024-07-25 14:38:16,993:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:38:20,330:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:20,338:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:20,346:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:20,534:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:20,543:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:20,551:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:20,646:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:20,651:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:20,657:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:20,669:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:20,669:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:20,675:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:20,675:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:20,681:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:20,681:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:20,693:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:20,701:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:20,708:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:21,021:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:21,028:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:21,034:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:21,052:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:21,059:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:21,066:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:21,949:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:21,953:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:21,958:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:22,042:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:22,046:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:22,051:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:22,066:INFO:Calculating mean and std
2024-07-25 14:38:22,069:INFO:Creating metrics dataframe
2024-07-25 14:38:22,073:INFO:Uploading results into container
2024-07-25 14:38:22,074:INFO:Uploading model into container now
2024-07-25 14:38:22,074:INFO:_master_model_container: 21
2024-07-25 14:38:22,074:INFO:_display_container: 3
2024-07-25 14:38:22,075:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-07-25 14:38:22,075:INFO:create_model() successfully completed......................................
2024-07-25 14:38:22,170:INFO:SubProcess create_model() end ==================================
2024-07-25 14:38:22,170:INFO:Creating metrics dataframe
2024-07-25 14:38:22,176:INFO:Initializing Quadratic Discriminant Analysis
2024-07-25 14:38:22,176:INFO:Total runtime is 0.6455857197443644 minutes
2024-07-25 14:38:22,178:INFO:SubProcess create_model() called ==================================
2024-07-25 14:38:22,179:INFO:Initializing create_model()
2024-07-25 14:38:22,179:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=qda, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a77ad30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:38:22,179:INFO:Checking exceptions
2024-07-25 14:38:22,179:INFO:Importing libraries
2024-07-25 14:38:22,179:INFO:Copying training dataset
2024-07-25 14:38:22,183:INFO:Defining folds
2024-07-25 14:38:22,184:INFO:Declaring metric variables
2024-07-25 14:38:22,186:INFO:Importing untrained model
2024-07-25 14:38:22,188:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-25 14:38:22,192:INFO:Starting cross validation
2024-07-25 14:38:22,202:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:38:25,468:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:25,481:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:25,494:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:25,530:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:38:25,534:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:38:25,541:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:25,549:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:25,554:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:25,574:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:25,579:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-25 14:38:25,579:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-25 14:38:25,579:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-25 14:38:25,583:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:25,583:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-25 14:38:25,583:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-25 14:38:25,583:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-25 14:38:25,588:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:25,590:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-25 14:38:25,591:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:25,592:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:25,593:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:25,595:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:25,595:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:25,596:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:25,598:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:25,599:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:38:25,599:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:38:25,599:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:25,601:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:25,602:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:25,602:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:25,603:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:25,604:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:25,607:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:25,611:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:26,625:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-25 14:38:26,674:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:26,678:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:26,681:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:38:26,683:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:26,700:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:26,705:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:26,709:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:26,725:INFO:Calculating mean and std
2024-07-25 14:38:26,726:INFO:Creating metrics dataframe
2024-07-25 14:38:26,727:INFO:Uploading results into container
2024-07-25 14:38:26,728:INFO:Uploading model into container now
2024-07-25 14:38:26,728:INFO:_master_model_container: 22
2024-07-25 14:38:26,728:INFO:_display_container: 3
2024-07-25 14:38:26,728:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-25 14:38:26,728:INFO:create_model() successfully completed......................................
2024-07-25 14:38:26,858:INFO:SubProcess create_model() end ==================================
2024-07-25 14:38:26,858:INFO:Creating metrics dataframe
2024-07-25 14:38:26,865:INFO:Initializing Ada Boost Classifier
2024-07-25 14:38:26,865:INFO:Total runtime is 0.72372465133667 minutes
2024-07-25 14:38:26,867:INFO:SubProcess create_model() called ==================================
2024-07-25 14:38:26,867:INFO:Initializing create_model()
2024-07-25 14:38:26,867:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a77ad30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:38:26,867:INFO:Checking exceptions
2024-07-25 14:38:26,867:INFO:Importing libraries
2024-07-25 14:38:26,867:INFO:Copying training dataset
2024-07-25 14:38:26,872:INFO:Defining folds
2024-07-25 14:38:26,872:INFO:Declaring metric variables
2024-07-25 14:38:26,874:INFO:Importing untrained model
2024-07-25 14:38:26,876:INFO:Ada Boost Classifier Imported successfully
2024-07-25 14:38:26,880:INFO:Starting cross validation
2024-07-25 14:38:26,889:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:38:29,925:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:38:30,302:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:38:30,314:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:38:30,331:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:38:30,335:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:38:30,345:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:38:30,376:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:38:30,402:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:30,410:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:30,419:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:30,451:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:38:30,522:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:30,527:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:30,531:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:30,536:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:30,536:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:30,538:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:30,543:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:30,544:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:30,544:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:30,548:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:30,548:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:30,552:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:30,553:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:30,553:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:30,560:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:30,574:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:30,579:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:30,584:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:30,660:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:30,664:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:30,669:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:31,639:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:38:31,705:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 14:38:31,783:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:31,788:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:31,792:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:31,849:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:31,853:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:31,857:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:31,869:INFO:Calculating mean and std
2024-07-25 14:38:31,870:INFO:Creating metrics dataframe
2024-07-25 14:38:31,872:INFO:Uploading results into container
2024-07-25 14:38:31,872:INFO:Uploading model into container now
2024-07-25 14:38:31,873:INFO:_master_model_container: 23
2024-07-25 14:38:31,873:INFO:_display_container: 3
2024-07-25 14:38:31,873:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-07-25 14:38:31,873:INFO:create_model() successfully completed......................................
2024-07-25 14:38:31,964:INFO:SubProcess create_model() end ==================================
2024-07-25 14:38:31,964:INFO:Creating metrics dataframe
2024-07-25 14:38:31,970:INFO:Initializing Gradient Boosting Classifier
2024-07-25 14:38:31,970:INFO:Total runtime is 0.808817485968272 minutes
2024-07-25 14:38:31,972:INFO:SubProcess create_model() called ==================================
2024-07-25 14:38:31,972:INFO:Initializing create_model()
2024-07-25 14:38:31,972:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=gbc, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a77ad30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:38:31,973:INFO:Checking exceptions
2024-07-25 14:38:31,973:INFO:Importing libraries
2024-07-25 14:38:31,973:INFO:Copying training dataset
2024-07-25 14:38:31,977:INFO:Defining folds
2024-07-25 14:38:31,977:INFO:Declaring metric variables
2024-07-25 14:38:31,979:INFO:Importing untrained model
2024-07-25 14:38:31,982:INFO:Gradient Boosting Classifier Imported successfully
2024-07-25 14:38:31,986:INFO:Starting cross validation
2024-07-25 14:38:31,995:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:38:35,621:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:35,626:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:35,631:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:35,677:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:35,684:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:35,693:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:35,694:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:35,699:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:35,705:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:35,735:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:35,739:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:35,741:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:35,742:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:35,744:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:35,746:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:35,749:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:35,749:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:35,751:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:35,754:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:35,756:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:35,762:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:35,830:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:35,835:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:35,841:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:36,961:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:36,966:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:36,971:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:37,012:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:37,016:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:37,020:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:37,039:INFO:Calculating mean and std
2024-07-25 14:38:37,042:INFO:Creating metrics dataframe
2024-07-25 14:38:37,046:INFO:Uploading results into container
2024-07-25 14:38:37,047:INFO:Uploading model into container now
2024-07-25 14:38:37,047:INFO:_master_model_container: 24
2024-07-25 14:38:37,047:INFO:_display_container: 3
2024-07-25 14:38:37,048:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-25 14:38:37,048:INFO:create_model() successfully completed......................................
2024-07-25 14:38:37,156:INFO:SubProcess create_model() end ==================================
2024-07-25 14:38:37,156:INFO:Creating metrics dataframe
2024-07-25 14:38:37,162:INFO:Initializing Linear Discriminant Analysis
2024-07-25 14:38:37,162:INFO:Total runtime is 0.8953483899434408 minutes
2024-07-25 14:38:37,164:INFO:SubProcess create_model() called ==================================
2024-07-25 14:38:37,164:INFO:Initializing create_model()
2024-07-25 14:38:37,164:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=lda, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a77ad30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:38:37,164:INFO:Checking exceptions
2024-07-25 14:38:37,165:INFO:Importing libraries
2024-07-25 14:38:37,165:INFO:Copying training dataset
2024-07-25 14:38:37,169:INFO:Defining folds
2024-07-25 14:38:37,169:INFO:Declaring metric variables
2024-07-25 14:38:37,171:INFO:Importing untrained model
2024-07-25 14:38:37,174:INFO:Linear Discriminant Analysis Imported successfully
2024-07-25 14:38:37,178:INFO:Starting cross validation
2024-07-25 14:38:37,187:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:38:40,426:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:40,438:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:40,452:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:40,470:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:40,479:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:40,488:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:40,542:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:40,550:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:40,556:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:40,558:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:40,562:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:40,566:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:40,575:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:40,577:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:40,579:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:40,582:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:40,585:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:40,587:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:40,599:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:40,604:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:40,608:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:40,609:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:40,614:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:40,618:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:41,598:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:41,603:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:41,607:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:41,683:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:41,688:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:41,692:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:41,709:INFO:Calculating mean and std
2024-07-25 14:38:41,710:INFO:Creating metrics dataframe
2024-07-25 14:38:41,711:INFO:Uploading results into container
2024-07-25 14:38:41,712:INFO:Uploading model into container now
2024-07-25 14:38:41,712:INFO:_master_model_container: 25
2024-07-25 14:38:41,712:INFO:_display_container: 3
2024-07-25 14:38:41,712:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-25 14:38:41,712:INFO:create_model() successfully completed......................................
2024-07-25 14:38:41,804:INFO:SubProcess create_model() end ==================================
2024-07-25 14:38:41,805:INFO:Creating metrics dataframe
2024-07-25 14:38:41,812:INFO:Initializing Extra Trees Classifier
2024-07-25 14:38:41,812:INFO:Total runtime is 0.9728411038716634 minutes
2024-07-25 14:38:41,814:INFO:SubProcess create_model() called ==================================
2024-07-25 14:38:41,814:INFO:Initializing create_model()
2024-07-25 14:38:41,814:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a77ad30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:38:41,814:INFO:Checking exceptions
2024-07-25 14:38:41,814:INFO:Importing libraries
2024-07-25 14:38:41,814:INFO:Copying training dataset
2024-07-25 14:38:41,819:INFO:Defining folds
2024-07-25 14:38:41,819:INFO:Declaring metric variables
2024-07-25 14:38:41,821:INFO:Importing untrained model
2024-07-25 14:38:41,824:INFO:Extra Trees Classifier Imported successfully
2024-07-25 14:38:41,829:INFO:Starting cross validation
2024-07-25 14:38:41,838:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:38:45,381:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:45,381:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:45,385:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:45,385:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:45,389:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:45,389:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:45,492:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:45,497:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:45,499:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:45,502:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:45,504:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:45,509:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:45,514:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:45,519:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:45,525:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:45,713:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:45,724:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:45,735:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:45,809:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:45,819:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:45,829:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:45,912:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:45,919:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:45,925:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:46,847:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:46,851:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:46,856:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:46,886:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:46,890:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:46,894:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:46,906:INFO:Calculating mean and std
2024-07-25 14:38:46,907:INFO:Creating metrics dataframe
2024-07-25 14:38:46,909:INFO:Uploading results into container
2024-07-25 14:38:46,910:INFO:Uploading model into container now
2024-07-25 14:38:46,910:INFO:_master_model_container: 26
2024-07-25 14:38:46,910:INFO:_display_container: 3
2024-07-25 14:38:46,911:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-07-25 14:38:46,911:INFO:create_model() successfully completed......................................
2024-07-25 14:38:47,001:INFO:SubProcess create_model() end ==================================
2024-07-25 14:38:47,001:INFO:Creating metrics dataframe
2024-07-25 14:38:47,008:INFO:Initializing Light Gradient Boosting Machine
2024-07-25 14:38:47,008:INFO:Total runtime is 1.059442973136902 minutes
2024-07-25 14:38:47,010:INFO:SubProcess create_model() called ==================================
2024-07-25 14:38:47,010:INFO:Initializing create_model()
2024-07-25 14:38:47,010:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a77ad30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:38:47,010:INFO:Checking exceptions
2024-07-25 14:38:47,010:INFO:Importing libraries
2024-07-25 14:38:47,011:INFO:Copying training dataset
2024-07-25 14:38:47,015:INFO:Defining folds
2024-07-25 14:38:47,015:INFO:Declaring metric variables
2024-07-25 14:38:47,017:INFO:Importing untrained model
2024-07-25 14:38:47,019:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-25 14:38:47,024:INFO:Starting cross validation
2024-07-25 14:38:47,032:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:38:50,780:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:50,785:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:50,789:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:51,043:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:51,048:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:51,054:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:51,054:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:51,061:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:51,065:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:51,067:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:51,072:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:51,076:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:51,105:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:51,109:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:51,113:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:51,114:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:51,121:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:51,125:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:51,129:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:51,135:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:51,140:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:51,174:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:51,179:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:51,183:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:52,207:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:52,211:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:52,215:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:52,338:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:52,342:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:52,346:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:52,364:INFO:Calculating mean and std
2024-07-25 14:38:52,366:INFO:Creating metrics dataframe
2024-07-25 14:38:52,370:INFO:Uploading results into container
2024-07-25 14:38:52,371:INFO:Uploading model into container now
2024-07-25 14:38:52,371:INFO:_master_model_container: 27
2024-07-25 14:38:52,372:INFO:_display_container: 3
2024-07-25 14:38:52,372:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-25 14:38:52,372:INFO:create_model() successfully completed......................................
2024-07-25 14:38:52,505:INFO:SubProcess create_model() end ==================================
2024-07-25 14:38:52,505:INFO:Creating metrics dataframe
2024-07-25 14:38:52,512:INFO:Initializing Dummy Classifier
2024-07-25 14:38:52,512:INFO:Total runtime is 1.1511873841285707 minutes
2024-07-25 14:38:52,515:INFO:SubProcess create_model() called ==================================
2024-07-25 14:38:52,515:INFO:Initializing create_model()
2024-07-25 14:38:52,515:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a77ad30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:38:52,515:INFO:Checking exceptions
2024-07-25 14:38:52,515:INFO:Importing libraries
2024-07-25 14:38:52,515:INFO:Copying training dataset
2024-07-25 14:38:52,520:INFO:Defining folds
2024-07-25 14:38:52,520:INFO:Declaring metric variables
2024-07-25 14:38:52,522:INFO:Importing untrained model
2024-07-25 14:38:52,525:INFO:Dummy Classifier Imported successfully
2024-07-25 14:38:52,529:INFO:Starting cross validation
2024-07-25 14:38:52,538:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 14:38:55,939:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:55,946:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:55,950:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:55,958:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:38:55,958:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:55,963:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:55,964:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:38:55,975:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:56,014:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:56,023:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:56,027:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:38:56,029:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:56,056:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:56,061:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:56,064:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:38:56,066:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:56,080:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:56,085:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:56,088:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:38:56,091:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:56,123:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:56,128:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:56,131:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:38:56,134:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:56,144:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:56,150:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:56,151:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:56,155:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:38:56,163:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:56,164:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:56,175:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:38:56,207:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:57,356:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:57,361:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:57,362:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:57,363:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:38:57,365:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:57,366:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:57,368:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 14:38:57,370:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:57,378:INFO:Calculating mean and std
2024-07-25 14:38:57,379:INFO:Creating metrics dataframe
2024-07-25 14:38:57,381:INFO:Uploading results into container
2024-07-25 14:38:57,381:INFO:Uploading model into container now
2024-07-25 14:38:57,382:INFO:_master_model_container: 28
2024-07-25 14:38:57,382:INFO:_display_container: 3
2024-07-25 14:38:57,382:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-07-25 14:38:57,382:INFO:create_model() successfully completed......................................
2024-07-25 14:38:57,473:INFO:SubProcess create_model() end ==================================
2024-07-25 14:38:57,474:INFO:Creating metrics dataframe
2024-07-25 14:38:57,481:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-25 14:38:57,486:INFO:Initializing create_model()
2024-07-25 14:38:57,486:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:38:57,487:INFO:Checking exceptions
2024-07-25 14:38:57,488:INFO:Importing libraries
2024-07-25 14:38:57,488:INFO:Copying training dataset
2024-07-25 14:38:57,492:INFO:Defining folds
2024-07-25 14:38:57,492:INFO:Declaring metric variables
2024-07-25 14:38:57,492:INFO:Importing untrained model
2024-07-25 14:38:57,492:INFO:Declaring custom model
2024-07-25 14:38:57,493:INFO:Decision Tree Classifier Imported successfully
2024-07-25 14:38:57,500:INFO:Cross validation set to False
2024-07-25 14:38:57,500:INFO:Fitting Model
2024-07-25 14:38:57,808:INFO:[LightGBM] [Info] Number of positive: 2945, number of negative: 2945
2024-07-25 14:38:57,812:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.002307 seconds.
2024-07-25 14:38:57,813:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-07-25 14:38:57,813:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-07-25 14:38:57,813:INFO:[LightGBM] [Info] Total Bins 320
2024-07-25 14:38:57,813:INFO:[LightGBM] [Info] Number of data points in the train set: 5890, number of used features: 99
2024-07-25 14:38:57,813:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2024-07-25 14:38:57,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,822:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,824:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,828:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,837:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,840:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,843:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,847:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,859:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,872:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,877:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,895:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,908:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,913:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,921:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,935:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,945:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,949:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,958:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,966:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,971:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,985:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,989:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:57,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,012:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,029:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,033:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,037:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,042:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,055:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,059:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,068:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,090:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,094:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,116:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,120:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,128:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,150:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,185:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,189:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,211:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,224:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:38:58,251:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-07-25 14:38:58,251:INFO:create_model() successfully completed......................................
2024-07-25 14:38:58,342:INFO:Creating Dashboard logs
2024-07-25 14:38:58,345:INFO:Model: Decision Tree Classifier
2024-07-25 14:38:58,381:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 123, 'splitter': 'best'}
2024-07-25 14:38:58,506:INFO:Initializing predict_model()
2024-07-25 14:38:58,506:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16a5150d0>)
2024-07-25 14:38:58,506:INFO:Checking exceptions
2024-07-25 14:38:58,506:INFO:Preloading libraries
2024-07-25 14:38:58,625:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:58,640:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:58,655:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-25 14:38:58,899:INFO:Creating Dashboard logs
2024-07-25 14:38:58,901:INFO:Model: Random Forest Classifier
2024-07-25 14:38:58,929:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-07-25 14:38:59,150:INFO:Creating Dashboard logs
2024-07-25 14:38:59,152:INFO:Model: Gradient Boosting Classifier
2024-07-25 14:38:59,169:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-07-25 14:38:59,392:INFO:Creating Dashboard logs
2024-07-25 14:38:59,395:INFO:Model: Extra Trees Classifier
2024-07-25 14:38:59,412:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-07-25 14:38:59,631:INFO:Creating Dashboard logs
2024-07-25 14:38:59,633:INFO:Model: Light Gradient Boosting Machine
2024-07-25 14:38:59,650:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-07-25 14:38:59,891:INFO:Creating Dashboard logs
2024-07-25 14:38:59,893:INFO:Model: K Neighbors Classifier
2024-07-25 14:38:59,911:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-07-25 14:39:00,128:INFO:Creating Dashboard logs
2024-07-25 14:39:00,130:INFO:Model: SVM - Linear Kernel
2024-07-25 14:39:00,147:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 123, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-07-25 14:39:00,367:INFO:Creating Dashboard logs
2024-07-25 14:39:00,370:INFO:Model: Ridge Classifier
2024-07-25 14:39:00,386:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 123, 'solver': 'auto', 'tol': 0.0001}
2024-07-25 14:39:00,605:INFO:Creating Dashboard logs
2024-07-25 14:39:00,608:INFO:Model: Linear Discriminant Analysis
2024-07-25 14:39:00,624:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2024-07-25 14:39:00,841:INFO:Creating Dashboard logs
2024-07-25 14:39:00,843:INFO:Model: Logistic Regression
2024-07-25 14:39:00,860:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-07-25 14:39:01,079:INFO:Creating Dashboard logs
2024-07-25 14:39:01,081:INFO:Model: Ada Boost Classifier
2024-07-25 14:39:01,098:INFO:Logged params: {'algorithm': 'SAMME.R', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 123}
2024-07-25 14:39:01,314:INFO:Creating Dashboard logs
2024-07-25 14:39:01,316:INFO:Model: Naive Bayes
2024-07-25 14:39:01,333:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2024-07-25 14:39:01,555:INFO:Creating Dashboard logs
2024-07-25 14:39:01,558:INFO:Model: Quadratic Discriminant Analysis
2024-07-25 14:39:01,574:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2024-07-25 14:39:01,788:INFO:Creating Dashboard logs
2024-07-25 14:39:01,790:INFO:Model: Dummy Classifier
2024-07-25 14:39:01,807:INFO:Logged params: {'constant': None, 'random_state': 123, 'strategy': 'prior'}
2024-07-25 14:39:02,029:INFO:_master_model_container: 28
2024-07-25 14:39:02,029:INFO:_display_container: 3
2024-07-25 14:39:02,029:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-07-25 14:39:02,029:INFO:compare_models() successfully completed......................................
2024-07-25 14:40:21,971:INFO:Initializing plot_model()
2024-07-25 14:40:21,972:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, system=True)
2024-07-25 14:40:21,972:INFO:Checking exceptions
2024-07-25 14:40:21,985:INFO:Preloading libraries
2024-07-25 14:40:21,986:INFO:Copying training dataset
2024-07-25 14:40:21,987:INFO:Plot type: confusion_matrix
2024-07-25 14:40:22,246:INFO:Fitting Model
2024-07-25 14:40:22,250:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-07-25 14:40:22,250:INFO:Scoring test/hold-out set
2024-07-25 14:40:22,899:INFO:Visual Rendered Successfully
2024-07-25 14:40:23,030:INFO:plot_model() successfully completed......................................
2024-07-25 14:40:50,274:INFO:Initializing plot_model()
2024-07-25 14:40:50,275:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, system=True)
2024-07-25 14:40:50,275:INFO:Checking exceptions
2024-07-25 14:40:50,282:INFO:Preloading libraries
2024-07-25 14:40:50,283:INFO:Copying training dataset
2024-07-25 14:40:50,283:INFO:Plot type: auc
2024-07-25 14:40:50,494:INFO:Fitting Model
2024-07-25 14:40:50,494:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-07-25 14:40:50,494:INFO:Scoring test/hold-out set
2024-07-25 14:40:50,634:INFO:Visual Rendered Successfully
2024-07-25 14:40:50,723:INFO:plot_model() successfully completed......................................
2024-07-25 14:40:58,824:INFO:Initializing plot_model()
2024-07-25 14:40:58,824:INFO:plot_model(plot=pr, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, system=True)
2024-07-25 14:40:58,824:INFO:Checking exceptions
2024-07-25 14:40:58,833:INFO:Preloading libraries
2024-07-25 14:40:58,833:INFO:Copying training dataset
2024-07-25 14:40:58,833:INFO:Plot type: pr
2024-07-25 14:40:59,040:INFO:Fitting Model
2024-07-25 14:40:59,041:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-07-25 14:40:59,041:INFO:Scoring test/hold-out set
2024-07-25 14:40:59,155:INFO:Visual Rendered Successfully
2024-07-25 14:40:59,247:INFO:plot_model() successfully completed......................................
2024-07-25 14:41:05,561:INFO:Initializing plot_model()
2024-07-25 14:41:05,561:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, system=True)
2024-07-25 14:41:05,562:INFO:Checking exceptions
2024-07-25 14:41:05,570:INFO:Preloading libraries
2024-07-25 14:41:05,571:INFO:Copying training dataset
2024-07-25 14:41:05,571:INFO:Plot type: feature
2024-07-25 14:41:05,572:WARNING:No coef_ found. Trying feature_importances_
2024-07-25 14:41:05,740:INFO:Visual Rendered Successfully
2024-07-25 14:41:05,833:INFO:plot_model() successfully completed......................................
2024-07-25 14:41:13,982:INFO:Initializing plot_model()
2024-07-25 14:41:13,982:INFO:plot_model(plot=calibration, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, system=True)
2024-07-25 14:41:13,982:INFO:Checking exceptions
2024-07-25 14:41:13,990:INFO:Preloading libraries
2024-07-25 14:41:13,990:INFO:Copying training dataset
2024-07-25 14:41:13,990:INFO:Plot type: calibration
2024-07-25 14:41:14,009:INFO:Scoring test/hold-out set
2024-07-25 14:41:14,212:INFO:Visual Rendered Successfully
2024-07-25 14:41:14,303:INFO:plot_model() successfully completed......................................
2024-07-25 14:41:20,391:INFO:Initializing plot_model()
2024-07-25 14:41:20,391:INFO:plot_model(plot=lift, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, system=True)
2024-07-25 14:41:20,391:INFO:Checking exceptions
2024-07-25 14:41:20,402:INFO:Preloading libraries
2024-07-25 14:41:20,402:INFO:Copying training dataset
2024-07-25 14:41:20,402:INFO:Plot type: lift
2024-07-25 14:41:20,404:INFO:Generating predictions / predict_proba on X_test
2024-07-25 14:41:20,631:INFO:Visual Rendered Successfully
2024-07-25 14:41:20,723:INFO:plot_model() successfully completed......................................
2024-07-25 14:41:27,281:INFO:Initializing plot_model()
2024-07-25 14:41:27,282:INFO:plot_model(plot=gain, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, system=True)
2024-07-25 14:41:27,282:INFO:Checking exceptions
2024-07-25 14:41:27,289:INFO:Preloading libraries
2024-07-25 14:41:27,289:INFO:Copying training dataset
2024-07-25 14:41:27,289:INFO:Plot type: gain
2024-07-25 14:41:27,291:INFO:Generating predictions / predict_proba on X_test
2024-07-25 14:41:27,513:INFO:Visual Rendered Successfully
2024-07-25 14:41:27,634:INFO:plot_model() successfully completed......................................
2024-07-25 14:42:21,480:INFO:Initializing finalize_model()
2024-07-25 14:42:21,481:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-07-25 14:42:21,481:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-07-25 14:42:21,488:INFO:Initializing create_model()
2024-07-25 14:42:21,488:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa14b20>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 14:42:21,488:INFO:Checking exceptions
2024-07-25 14:42:21,491:INFO:Importing libraries
2024-07-25 14:42:21,491:INFO:Copying training dataset
2024-07-25 14:42:21,491:INFO:Defining folds
2024-07-25 14:42:21,491:INFO:Declaring metric variables
2024-07-25 14:42:21,491:INFO:Importing untrained model
2024-07-25 14:42:21,491:INFO:Declaring custom model
2024-07-25 14:42:21,492:INFO:Decision Tree Classifier Imported successfully
2024-07-25 14:42:21,505:INFO:Cross validation set to False
2024-07-25 14:42:21,505:INFO:Fitting Model
2024-07-25 14:42:21,888:INFO:[LightGBM] [Info] Number of positive: 4208, number of negative: 4208
2024-07-25 14:42:21,896:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.002525 seconds.
2024-07-25 14:42:21,896:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-07-25 14:42:21,896:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-07-25 14:42:21,896:INFO:[LightGBM] [Info] Total Bins 380
2024-07-25 14:42:21,896:INFO:[LightGBM] [Info] Number of data points in the train set: 8416, number of used features: 103
2024-07-25 14:42:21,897:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2024-07-25 14:42:21,899:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:21,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:21,905:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:21,908:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:21,911:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:21,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:21,917:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:21,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:21,924:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:21,928:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:21,933:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:21,937:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:21,941:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:21,945:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:21,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:21,955:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:21,959:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:21,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:21,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:21,973:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:21,978:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:21,982:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:21,987:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:21,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:21,997:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,001:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,006:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,027:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,040:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,044:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,052:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,056:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,060:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,073:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,077:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,082:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,087:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,091:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,094:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,107:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,126:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,130:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,137:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,141:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,145:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,160:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,179:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,184:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,188:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,195:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,199:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,207:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,211:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,215:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,224:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,227:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,235:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,239:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,243:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,246:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,250:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,255:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,258:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,262:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,267:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,270:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,275:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,278:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,282:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,290:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,294:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,297:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 14:42:22,353:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2024-07-25 14:42:22,353:INFO:create_model() successfully completed......................................
2024-07-25 14:42:22,441:INFO:Creating Dashboard logs
2024-07-25 14:42:22,442:INFO:Model: Decision Tree Classifier
2024-07-25 14:42:22,466:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 123, 'splitter': 'best'}
2024-07-25 14:42:22,689:INFO:_master_model_container: 28
2024-07-25 14:42:22,689:INFO:_display_container: 3
2024-07-25 14:42:22,725:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2024-07-25 14:42:22,725:INFO:finalize_model() successfully completed......................................
2024-07-25 14:42:22,883:INFO:Initializing save_model()
2024-07-25 14:42:22,883:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False), model_name=mushroom-pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/wc/x7k7p9zn48b79jlg4cgxh8cm0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=4,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-07-25 14:42:22,883:INFO:Adding model into prep_pipe
2024-07-25 14:42:22,883:WARNING:Only Model saved as it was a pipeline.
2024-07-25 14:42:22,915:INFO:mushroom-pipeline.pkl saved in current working directory
2024-07-25 14:42:22,950:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2024-07-25 14:42:22,950:INFO:save_model() successfully completed......................................
2024-07-25 15:25:55,839:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 15:25:55,839:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 15:25:55,840:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 15:25:55,840:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 15:25:56,969:INFO:Initializing load_model()
2024-07-25 15:25:56,969:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-07-25 15:26:01,627:INFO:Initializing load_model()
2024-07-25 15:26:01,627:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-07-25 15:26:06,372:INFO:Initializing load_model()
2024-07-25 15:26:06,372:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-07-25 15:26:09,205:INFO:Initializing load_model()
2024-07-25 15:26:09,206:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-07-25 15:26:10,987:INFO:Initializing load_model()
2024-07-25 15:26:10,988:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-07-25 15:26:22,354:INFO:Initializing load_model()
2024-07-25 15:26:22,355:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-07-25 15:27:24,795:INFO:Initializing load_model()
2024-07-25 15:27:24,796:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-07-25 15:27:31,964:INFO:Initializing load_model()
2024-07-25 15:27:31,964:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-07-25 15:27:49,201:INFO:Initializing load_model()
2024-07-25 15:27:49,202:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-07-25 15:27:50,560:INFO:Initializing load_model()
2024-07-25 15:27:50,561:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-07-25 15:27:52,597:INFO:Initializing load_model()
2024-07-25 15:27:52,598:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-07-25 15:29:10,852:INFO:Initializing load_model()
2024-07-25 15:29:10,853:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-07-25 15:29:15,440:INFO:Initializing load_model()
2024-07-25 15:29:15,440:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-07-25 15:29:35,774:INFO:Initializing load_model()
2024-07-25 15:29:35,775:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-07-25 15:29:37,636:INFO:Initializing load_model()
2024-07-25 15:29:37,636:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-07-25 15:29:39,301:INFO:Initializing load_model()
2024-07-25 15:29:39,302:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-07-25 15:29:40,770:INFO:Initializing load_model()
2024-07-25 15:29:40,770:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-07-25 15:29:54,693:INFO:Initializing load_model()
2024-07-25 15:29:54,694:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-07-25 15:29:57,552:INFO:Initializing load_model()
2024-07-25 15:29:57,552:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-07-25 15:30:02,360:INFO:Initializing load_model()
2024-07-25 15:30:02,361:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-07-25 15:30:05,306:INFO:Initializing load_model()
2024-07-25 15:30:05,307:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-07-25 15:30:08,892:INFO:Initializing load_model()
2024-07-25 15:30:08,893:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-07-25 15:30:18,208:INFO:Initializing load_model()
2024-07-25 15:30:18,208:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-07-25 15:30:32,188:INFO:Initializing load_model()
2024-07-25 15:30:32,188:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-07-25 15:30:36,904:INFO:Initializing load_model()
2024-07-25 15:30:36,904:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-07-25 15:30:40,603:INFO:Initializing load_model()
2024-07-25 15:30:40,604:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-07-25 15:30:57,707:INFO:Initializing load_model()
2024-07-25 15:30:57,707:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-07-25 15:31:05,003:INFO:Initializing load_model()
2024-07-25 15:31:05,003:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-08-09 21:24:03,471:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-09 21:24:03,473:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-09 21:24:03,473:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-09 21:24:03,473:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-09 21:24:21,433:INFO:Initializing load_model()
2024-08-09 21:24:21,434:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-08-09 21:24:22,054:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '8.18.1', 'ipywidgets': '8.1.3', 'tqdm': '4.66.5', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.1', 'imblearn': '0.12.3', 'category_encoders': '2.6.3', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.23.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.0.0', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.19', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '24.0', 'setuptools': '70.1.1', 'pycaret': '3.3.2', 'IPython': '8.18.1', 'ipywidgets': '8.1.3', 'tqdm': '4.66.4', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.1', 'imblearn': '0.12.3', 'category_encoders': '2.6.3', 'lightgbm': '4.4.0', 'numba': '0.59.1', 'requests': '2.32.3', 'matplotlib': '3.7.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.0.0', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.19', 'machine': 'arm64'}}
  warnings.warn(

2024-08-09 21:24:37,439:INFO:Initializing load_model()
2024-08-09 21:24:37,439:INFO:load_model(model_name=mushroom-pipeline, platform=None, authentication=None, verbose=True)
2024-08-09 21:24:37,473:WARNING:/opt/anaconda3/envs/mlops/lib/python3.9/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '8.18.1', 'ipywidgets': '8.1.3', 'tqdm': '4.66.5', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.1', 'imblearn': '0.12.3', 'category_encoders': '2.6.3', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.23.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.0.0', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.19', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '24.0', 'setuptools': '70.1.1', 'pycaret': '3.3.2', 'IPython': '8.18.1', 'ipywidgets': '8.1.3', 'tqdm': '4.66.4', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.1', 'imblearn': '0.12.3', 'category_encoders': '2.6.3', 'lightgbm': '4.4.0', 'numba': '0.59.1', 'requests': '2.32.3', 'matplotlib': '3.7.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.0.0', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.19', 'machine': 'arm64'}}
  warnings.warn(

